/**
 * Loader generated by glad 2.0.8 on Sun Mar 23 11:07:37 2025
 *
 * SPDX-License-Identifier: (WTFPL OR CC0-1.0) AND Apache-2.0
 *
 * Generator: C/C++
 * Specification: gl
 * Extensions: 2
 *
 * APIs:
 *  - gl:core=4.3
 *
 * Options:
 *  - ALIAS = False
 *  - DEBUG = False
 *  - HEADER_ONLY = True
 *  - LOADER = False
 *  - MX = False
 *  - ON_DEMAND = False
 *
 * Commandline:
 *    --api='gl:core=4.3' --extensions='GL_EXT_memory_object,GL_EXT_memory_object_win32' c
 * --header-only
 *
 * Online:
 *    http://glad.sh/#api=gl%3Acore%3D4.3&extensions=GL_EXT_memory_object%2CGL_EXT_memory_object_win32&generator=c&options=HEADER_ONLY
 *
 */

#ifndef SOIL_GLAD_GL_H_
#define SOIL_GLAD_GL_H_

#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifdef __gl_h_
#error OpenGL (gl.h) header already included (API: gl), remove previous include!
#endif
#define __gl_h_ 1
#ifdef __gl3_h_
#error OpenGL (gl3.h) header already included (API: gl), remove previous include!
#endif
#define __gl3_h_ 1
#ifdef __glext_h_
#error OpenGL (glext.h) header already included (API: gl), remove previous include!
#endif
#define __glext_h_ 1
#ifdef __gl3ext_h_
#error OpenGL (gl3ext.h) header already included (API: gl), remove previous include!
#endif
#define __gl3ext_h_ 1
#ifdef __clang__
#pragma clang diagnostic pop
#endif

#define SOIL_GLAD_GL
#define SOIL_GLAD_OPTION_GL_HEADER_ONLY

#ifdef __cplusplus
extern "C" {
#endif

#ifndef SOIL_GLAD_PLATFORM_H_
#define SOIL_GLAD_PLATFORM_H_

#ifndef SOIL_GLAD_PLATFORM_WIN32
#if defined(_WIN32) || defined(__WIN32__) || defined(WIN32) || defined(__MINGW32__)
#define SOIL_GLAD_PLATFORM_WIN32 1
#else
#define SOIL_GLAD_PLATFORM_WIN32 0
#endif
#endif

#ifndef SOIL_GLAD_PLATFORM_APPLE
#ifdef __APPLE__
#define SOIL_GLAD_PLATFORM_APPLE 1
#else
#define SOIL_GLAD_PLATFORM_APPLE 0
#endif
#endif

#ifndef SOIL_GLAD_PLATFORM_EMSCRIPTEN
#ifdef __EMSCRIPTEN__
#define SOIL_GLAD_PLATFORM_EMSCRIPTEN 1
#else
#define SOIL_GLAD_PLATFORM_EMSCRIPTEN 0
#endif
#endif

#ifndef SOIL_GLAD_PLATFORM_UWP
#if defined(_MSC_VER) && !defined(SOIL_GLAD_INTERNAL_HAVE_WINAPIFAMILY)
#ifdef __has_include
#if __has_include(<winapifamily.h>)
#define SOIL_GLAD_INTERNAL_HAVE_WINAPIFAMILY 1
#endif
#elif _MSC_VER >= 1700 && !_USING_V110_SDK71_
#define SOIL_GLAD_INTERNAL_HAVE_WINAPIFAMILY 1
#endif
#endif

#ifdef SOIL_GLAD_INTERNAL_HAVE_WINAPIFAMILY
#include <winapifamily.h>
#if !WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP) &&                                      \
    WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP)
#define SOIL_GLAD_PLATFORM_UWP 1
#endif
#endif

#ifndef SOIL_GLAD_PLATFORM_UWP
#define SOIL_GLAD_PLATFORM_UWP 0
#endif
#endif

#ifdef __GNUC__
#define SOIL_GLAD_GNUC_EXTENSION __extension__
#else
#define SOIL_GLAD_GNUC_EXTENSION
#endif

#define SOIL_GLAD_UNUSED(x) (void)(x)

#ifndef SOIL_GLAD_API_CALL
#if defined(SOIL_GLAD_API_CALL_EXPORT)
#if SOIL_GLAD_PLATFORM_WIN32 || defined(__CYGWIN__)
#if defined(SOIL_GLAD_API_CALL_EXPORT_BUILD)
#if defined(__GNUC__)
#define SOIL_GLAD_API_CALL __attribute__((dllexport)) extern
#else
#define SOIL_GLAD_API_CALL __declspec(dllexport) extern
#endif
#else
#if defined(__GNUC__)
#define SOIL_GLAD_API_CALL __attribute__((dllimport)) extern
#else
#define SOIL_GLAD_API_CALL __declspec(dllimport) extern
#endif
#endif
#elif defined(__GNUC__) && defined(SOIL_GLAD_API_CALL_EXPORT_BUILD)
#define SOIL_GLAD_API_CALL __attribute__((visibility("default"))) extern
#else
#define SOIL_GLAD_API_CALL extern
#endif
#else
#define SOIL_GLAD_API_CALL extern
#endif
#endif

#ifdef APIENTRY
#define SOIL_GLAD_API_PTR APIENTRY
#elif SOIL_GLAD_PLATFORM_WIN32
#define SOIL_GLAD_API_PTR __stdcall
#else
#define SOIL_GLAD_API_PTR
#endif

#ifndef GLAPI
#define GLAPI SOIL_GLAD_API_CALL
#endif

#ifndef GLAPIENTRY
#define GLAPIENTRY SOIL_GLAD_API_PTR
#endif

#define SOIL_GLAD_MAKE_VERSION(major, minor) (major * 10000 + minor)
#define SOIL_GLAD_VERSION_MAJOR(version) (version / 10000)
#define SOIL_GLAD_VERSION_MINOR(version) (version % 10000)

#define SOIL_GLAD_GENERATOR_VERSION "2.0.8"

typedef void (*GLADapiproc)(void);

typedef GLADapiproc (*GLADloadfunc)(const char *name);
typedef GLADapiproc (*GLADuserptrloadfunc)(void *userptr, const char *name);

typedef void (*GLADprecallback)(const char *name, GLADapiproc apiproc, int len_args, ...);
typedef void (*GLADpostcallback)(
    void *ret, const char *name, GLADapiproc apiproc, int len_args, ...
);

#endif /* SOIL_GLAD_PLATFORM_H_ */

#define GL_ACTIVE_ATOMIC_COUNTER_BUFFERS 0x92D9
#define GL_ACTIVE_ATTRIBUTES 0x8B89
#define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH 0x8B8A
#define GL_ACTIVE_PROGRAM 0x8259
#define GL_ACTIVE_RESOURCES 0x92F5
#define GL_ACTIVE_SUBROUTINES 0x8DE5
#define GL_ACTIVE_SUBROUTINE_MAX_LENGTH 0x8E48
#define GL_ACTIVE_SUBROUTINE_UNIFORMS 0x8DE6
#define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS 0x8E47
#define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH 0x8E49
#define GL_ACTIVE_TEXTURE 0x84E0
#define GL_ACTIVE_UNIFORMS 0x8B86
#define GL_ACTIVE_UNIFORM_BLOCKS 0x8A36
#define GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH 0x8A35
#define GL_ACTIVE_UNIFORM_MAX_LENGTH 0x8B87
#define GL_ACTIVE_VARIABLES 0x9305
#define GL_ALIASED_LINE_WIDTH_RANGE 0x846E
#define GL_ALL_BARRIER_BITS 0xFFFFFFFF
#define GL_ALL_SHADER_BITS 0xFFFFFFFF
#define GL_ALPHA 0x1906
#define GL_ALREADY_SIGNALED 0x911A
#define GL_ALWAYS 0x0207
#define GL_AND 0x1501
#define GL_AND_INVERTED 0x1504
#define GL_AND_REVERSE 0x1502
#define GL_ANY_SAMPLES_PASSED 0x8C2F
#define GL_ANY_SAMPLES_PASSED_CONSERVATIVE 0x8D6A
#define GL_ARRAY_BUFFER 0x8892
#define GL_ARRAY_BUFFER_BINDING 0x8894
#define GL_ARRAY_SIZE 0x92FB
#define GL_ARRAY_STRIDE 0x92FE
#define GL_ATOMIC_COUNTER_BARRIER_BIT 0x00001000
#define GL_ATOMIC_COUNTER_BUFFER 0x92C0
#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS 0x92C5
#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES 0x92C6
#define GL_ATOMIC_COUNTER_BUFFER_BINDING 0x92C1
#define GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE 0x92C4
#define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER 0x90ED
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER 0x92CB
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER 0x92CA
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER 0x92C8
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER 0x92C9
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER 0x92C7
#define GL_ATOMIC_COUNTER_BUFFER_SIZE 0x92C3
#define GL_ATOMIC_COUNTER_BUFFER_START 0x92C2
#define GL_ATTACHED_SHADERS 0x8B85
#define GL_AUTO_GENERATE_MIPMAP 0x8295
#define GL_BACK 0x0405
#define GL_BACK_LEFT 0x0402
#define GL_BACK_RIGHT 0x0403
#define GL_BGR 0x80E0
#define GL_BGRA 0x80E1
#define GL_BGRA_INTEGER 0x8D9B
#define GL_BGR_INTEGER 0x8D9A
#define GL_BLEND 0x0BE2
#define GL_BLEND_COLOR 0x8005
#define GL_BLEND_DST 0x0BE0
#define GL_BLEND_DST_ALPHA 0x80CA
#define GL_BLEND_DST_RGB 0x80C8
#define GL_BLEND_EQUATION 0x8009
#define GL_BLEND_EQUATION_ALPHA 0x883D
#define GL_BLEND_EQUATION_RGB 0x8009
#define GL_BLEND_SRC 0x0BE1
#define GL_BLEND_SRC_ALPHA 0x80CB
#define GL_BLEND_SRC_RGB 0x80C9
#define GL_BLOCK_INDEX 0x92FD
#define GL_BLUE 0x1905
#define GL_BLUE_INTEGER 0x8D96
#define GL_BOOL 0x8B56
#define GL_BOOL_VEC2 0x8B57
#define GL_BOOL_VEC3 0x8B58
#define GL_BOOL_VEC4 0x8B59
#define GL_BUFFER 0x82E0
#define GL_BUFFER_ACCESS 0x88BB
#define GL_BUFFER_ACCESS_FLAGS 0x911F
#define GL_BUFFER_BINDING 0x9302
#define GL_BUFFER_DATA_SIZE 0x9303
#define GL_BUFFER_MAPPED 0x88BC
#define GL_BUFFER_MAP_LENGTH 0x9120
#define GL_BUFFER_MAP_OFFSET 0x9121
#define GL_BUFFER_MAP_POINTER 0x88BD
#define GL_BUFFER_SIZE 0x8764
#define GL_BUFFER_UPDATE_BARRIER_BIT 0x00000200
#define GL_BUFFER_USAGE 0x8765
#define GL_BUFFER_VARIABLE 0x92E5
#define GL_BYTE 0x1400
#define GL_CAVEAT_SUPPORT 0x82B8
#define GL_CCW 0x0901
#define GL_CLAMP_READ_COLOR 0x891C
#define GL_CLAMP_TO_BORDER 0x812D
#define GL_CLAMP_TO_EDGE 0x812F
#define GL_CLEAR 0x1500
#define GL_CLEAR_BUFFER 0x82B4
#define GL_CLIP_DISTANCE0 0x3000
#define GL_CLIP_DISTANCE1 0x3001
#define GL_CLIP_DISTANCE2 0x3002
#define GL_CLIP_DISTANCE3 0x3003
#define GL_CLIP_DISTANCE4 0x3004
#define GL_CLIP_DISTANCE5 0x3005
#define GL_CLIP_DISTANCE6 0x3006
#define GL_CLIP_DISTANCE7 0x3007
#define GL_COLOR 0x1800
#define GL_COLOR_ATTACHMENT0 0x8CE0
#define GL_COLOR_ATTACHMENT1 0x8CE1
#define GL_COLOR_ATTACHMENT10 0x8CEA
#define GL_COLOR_ATTACHMENT11 0x8CEB
#define GL_COLOR_ATTACHMENT12 0x8CEC
#define GL_COLOR_ATTACHMENT13 0x8CED
#define GL_COLOR_ATTACHMENT14 0x8CEE
#define GL_COLOR_ATTACHMENT15 0x8CEF
#define GL_COLOR_ATTACHMENT16 0x8CF0
#define GL_COLOR_ATTACHMENT17 0x8CF1
#define GL_COLOR_ATTACHMENT18 0x8CF2
#define GL_COLOR_ATTACHMENT19 0x8CF3
#define GL_COLOR_ATTACHMENT2 0x8CE2
#define GL_COLOR_ATTACHMENT20 0x8CF4
#define GL_COLOR_ATTACHMENT21 0x8CF5
#define GL_COLOR_ATTACHMENT22 0x8CF6
#define GL_COLOR_ATTACHMENT23 0x8CF7
#define GL_COLOR_ATTACHMENT24 0x8CF8
#define GL_COLOR_ATTACHMENT25 0x8CF9
#define GL_COLOR_ATTACHMENT26 0x8CFA
#define GL_COLOR_ATTACHMENT27 0x8CFB
#define GL_COLOR_ATTACHMENT28 0x8CFC
#define GL_COLOR_ATTACHMENT29 0x8CFD
#define GL_COLOR_ATTACHMENT3 0x8CE3
#define GL_COLOR_ATTACHMENT30 0x8CFE
#define GL_COLOR_ATTACHMENT31 0x8CFF
#define GL_COLOR_ATTACHMENT4 0x8CE4
#define GL_COLOR_ATTACHMENT5 0x8CE5
#define GL_COLOR_ATTACHMENT6 0x8CE6
#define GL_COLOR_ATTACHMENT7 0x8CE7
#define GL_COLOR_ATTACHMENT8 0x8CE8
#define GL_COLOR_ATTACHMENT9 0x8CE9
#define GL_COLOR_BUFFER_BIT 0x00004000
#define GL_COLOR_CLEAR_VALUE 0x0C22
#define GL_COLOR_COMPONENTS 0x8283
#define GL_COLOR_ENCODING 0x8296
#define GL_COLOR_LOGIC_OP 0x0BF2
#define GL_COLOR_RENDERABLE 0x8286
#define GL_COLOR_WRITEMASK 0x0C23
#define GL_COMMAND_BARRIER_BIT 0x00000040
#define GL_COMPARE_REF_TO_TEXTURE 0x884E
#define GL_COMPATIBLE_SUBROUTINES 0x8E4B
#define GL_COMPILE_STATUS 0x8B81
#define GL_COMPRESSED_R11_EAC 0x9270
#define GL_COMPRESSED_RED 0x8225
#define GL_COMPRESSED_RED_RGTC1 0x8DBB
#define GL_COMPRESSED_RG 0x8226
#define GL_COMPRESSED_RG11_EAC 0x9272
#define GL_COMPRESSED_RGB 0x84ED
#define GL_COMPRESSED_RGB8_ETC2 0x9274
#define GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9276
#define GL_COMPRESSED_RGBA 0x84EE
#define GL_COMPRESSED_RGBA8_ETC2_EAC 0x9278
#define GL_COMPRESSED_RGBA_BPTC_UNORM 0x8E8C
#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT 0x8E8E
#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT 0x8E8F
#define GL_COMPRESSED_RG_RGTC2 0x8DBD
#define GL_COMPRESSED_SIGNED_R11_EAC 0x9271
#define GL_COMPRESSED_SIGNED_RED_RGTC1 0x8DBC
#define GL_COMPRESSED_SIGNED_RG11_EAC 0x9273
#define GL_COMPRESSED_SIGNED_RG_RGTC2 0x8DBE
#define GL_COMPRESSED_SRGB 0x8C48
#define GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC 0x9279
#define GL_COMPRESSED_SRGB8_ETC2 0x9275
#define GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9277
#define GL_COMPRESSED_SRGB_ALPHA 0x8C49
#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM 0x8E8D
#define GL_COMPRESSED_TEXTURE_FORMATS 0x86A3
#define GL_COMPUTE_SHADER 0x91B9
#define GL_COMPUTE_SHADER_BIT 0x00000020
#define GL_COMPUTE_SUBROUTINE 0x92ED
#define GL_COMPUTE_SUBROUTINE_UNIFORM 0x92F3
#define GL_COMPUTE_TEXTURE 0x82A0
#define GL_COMPUTE_WORK_GROUP_SIZE 0x8267
#define GL_CONDITION_SATISFIED 0x911C
#define GL_CONSTANT_ALPHA 0x8003
#define GL_CONSTANT_COLOR 0x8001
#define GL_CONTEXT_COMPATIBILITY_PROFILE_BIT 0x00000002
#define GL_CONTEXT_CORE_PROFILE_BIT 0x00000001
#define GL_CONTEXT_FLAGS 0x821E
#define GL_CONTEXT_FLAG_DEBUG_BIT 0x00000002
#define GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT 0x00000001
#define GL_CONTEXT_PROFILE_MASK 0x9126
#define GL_COPY 0x1503
#define GL_COPY_INVERTED 0x150C
#define GL_COPY_READ_BUFFER 0x8F36
#define GL_COPY_READ_BUFFER_BINDING 0x8F36
#define GL_COPY_WRITE_BUFFER 0x8F37
#define GL_COPY_WRITE_BUFFER_BINDING 0x8F37
#define GL_CULL_FACE 0x0B44
#define GL_CULL_FACE_MODE 0x0B45
#define GL_CURRENT_PROGRAM 0x8B8D
#define GL_CURRENT_QUERY 0x8865
#define GL_CURRENT_VERTEX_ATTRIB 0x8626
#define GL_CW 0x0900
#define GL_DEBUG_CALLBACK_FUNCTION 0x8244
#define GL_DEBUG_CALLBACK_USER_PARAM 0x8245
#define GL_DEBUG_GROUP_STACK_DEPTH 0x826D
#define GL_DEBUG_LOGGED_MESSAGES 0x9145
#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH 0x8243
#define GL_DEBUG_OUTPUT 0x92E0
#define GL_DEBUG_OUTPUT_SYNCHRONOUS 0x8242
#define GL_DEBUG_SEVERITY_HIGH 0x9146
#define GL_DEBUG_SEVERITY_LOW 0x9148
#define GL_DEBUG_SEVERITY_MEDIUM 0x9147
#define GL_DEBUG_SEVERITY_NOTIFICATION 0x826B
#define GL_DEBUG_SOURCE_API 0x8246
#define GL_DEBUG_SOURCE_APPLICATION 0x824A
#define GL_DEBUG_SOURCE_OTHER 0x824B
#define GL_DEBUG_SOURCE_SHADER_COMPILER 0x8248
#define GL_DEBUG_SOURCE_THIRD_PARTY 0x8249
#define GL_DEBUG_SOURCE_WINDOW_SYSTEM 0x8247
#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR 0x824D
#define GL_DEBUG_TYPE_ERROR 0x824C
#define GL_DEBUG_TYPE_MARKER 0x8268
#define GL_DEBUG_TYPE_OTHER 0x8251
#define GL_DEBUG_TYPE_PERFORMANCE 0x8250
#define GL_DEBUG_TYPE_POP_GROUP 0x826A
#define GL_DEBUG_TYPE_PORTABILITY 0x824F
#define GL_DEBUG_TYPE_PUSH_GROUP 0x8269
#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR 0x824E
#define GL_DECR 0x1E03
#define GL_DECR_WRAP 0x8508
#define GL_DEDICATED_MEMORY_OBJECT_EXT 0x9581
#define GL_DELETE_STATUS 0x8B80
#define GL_DEPTH 0x1801
#define GL_DEPTH24_STENCIL8 0x88F0
#define GL_DEPTH32F_STENCIL8 0x8CAD
#define GL_DEPTH_ATTACHMENT 0x8D00
#define GL_DEPTH_BUFFER_BIT 0x00000100
#define GL_DEPTH_CLAMP 0x864F
#define GL_DEPTH_CLEAR_VALUE 0x0B73
#define GL_DEPTH_COMPONENT 0x1902
#define GL_DEPTH_COMPONENT16 0x81A5
#define GL_DEPTH_COMPONENT24 0x81A6
#define GL_DEPTH_COMPONENT32 0x81A7
#define GL_DEPTH_COMPONENT32F 0x8CAC
#define GL_DEPTH_COMPONENTS 0x8284
#define GL_DEPTH_FUNC 0x0B74
#define GL_DEPTH_RANGE 0x0B70
#define GL_DEPTH_RENDERABLE 0x8287
#define GL_DEPTH_STENCIL 0x84F9
#define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#define GL_DEPTH_STENCIL_TEXTURE_MODE 0x90EA
#define GL_DEPTH_TEST 0x0B71
#define GL_DEPTH_WRITEMASK 0x0B72
#define GL_DEVICE_LUID_EXT 0x9599
#define GL_DEVICE_NODE_MASK_EXT 0x959A
#define GL_DEVICE_UUID_EXT 0x9597
#define GL_DISPATCH_INDIRECT_BUFFER 0x90EE
#define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
#define GL_DITHER 0x0BD0
#define GL_DONT_CARE 0x1100
#define GL_DOUBLE 0x140A
#define GL_DOUBLEBUFFER 0x0C32
#define GL_DOUBLE_MAT2 0x8F46
#define GL_DOUBLE_MAT2x3 0x8F49
#define GL_DOUBLE_MAT2x4 0x8F4A
#define GL_DOUBLE_MAT3 0x8F47
#define GL_DOUBLE_MAT3x2 0x8F4B
#define GL_DOUBLE_MAT3x4 0x8F4C
#define GL_DOUBLE_MAT4 0x8F48
#define GL_DOUBLE_MAT4x2 0x8F4D
#define GL_DOUBLE_MAT4x3 0x8F4E
#define GL_DOUBLE_VEC2 0x8FFC
#define GL_DOUBLE_VEC3 0x8FFD
#define GL_DOUBLE_VEC4 0x8FFE
#define GL_DRAW_BUFFER 0x0C01
#define GL_DRAW_BUFFER0 0x8825
#define GL_DRAW_BUFFER1 0x8826
#define GL_DRAW_BUFFER10 0x882F
#define GL_DRAW_BUFFER11 0x8830
#define GL_DRAW_BUFFER12 0x8831
#define GL_DRAW_BUFFER13 0x8832
#define GL_DRAW_BUFFER14 0x8833
#define GL_DRAW_BUFFER15 0x8834
#define GL_DRAW_BUFFER2 0x8827
#define GL_DRAW_BUFFER3 0x8828
#define GL_DRAW_BUFFER4 0x8829
#define GL_DRAW_BUFFER5 0x882A
#define GL_DRAW_BUFFER6 0x882B
#define GL_DRAW_BUFFER7 0x882C
#define GL_DRAW_BUFFER8 0x882D
#define GL_DRAW_BUFFER9 0x882E
#define GL_DRAW_FRAMEBUFFER 0x8CA9
#define GL_DRAW_FRAMEBUFFER_BINDING 0x8CA6
#define GL_DRAW_INDIRECT_BUFFER 0x8F3F
#define GL_DRAW_INDIRECT_BUFFER_BINDING 0x8F43
#define GL_DRIVER_UUID_EXT 0x9598
#define GL_DST_ALPHA 0x0304
#define GL_DST_COLOR 0x0306
#define GL_DYNAMIC_COPY 0x88EA
#define GL_DYNAMIC_DRAW 0x88E8
#define GL_DYNAMIC_READ 0x88E9
#define GL_ELEMENT_ARRAY_BARRIER_BIT 0x00000002
#define GL_ELEMENT_ARRAY_BUFFER 0x8893
#define GL_ELEMENT_ARRAY_BUFFER_BINDING 0x8895
#define GL_EQUAL 0x0202
#define GL_EQUIV 0x1509
#define GL_EXTENSIONS 0x1F03
#define GL_FALSE 0
#define GL_FASTEST 0x1101
#define GL_FILL 0x1B02
#define GL_FILTER 0x829A
#define GL_FIRST_VERTEX_CONVENTION 0x8E4D
#define GL_FIXED 0x140C
#define GL_FIXED_ONLY 0x891D
#define GL_FLOAT 0x1406
#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV 0x8DAD
#define GL_FLOAT_MAT2 0x8B5A
#define GL_FLOAT_MAT2x3 0x8B65
#define GL_FLOAT_MAT2x4 0x8B66
#define GL_FLOAT_MAT3 0x8B5B
#define GL_FLOAT_MAT3x2 0x8B67
#define GL_FLOAT_MAT3x4 0x8B68
#define GL_FLOAT_MAT4 0x8B5C
#define GL_FLOAT_MAT4x2 0x8B69
#define GL_FLOAT_MAT4x3 0x8B6A
#define GL_FLOAT_VEC2 0x8B50
#define GL_FLOAT_VEC3 0x8B51
#define GL_FLOAT_VEC4 0x8B52
#define GL_FRACTIONAL_EVEN 0x8E7C
#define GL_FRACTIONAL_ODD 0x8E7B
#define GL_FRAGMENT_INTERPOLATION_OFFSET_BITS 0x8E5D
#define GL_FRAGMENT_SHADER 0x8B30
#define GL_FRAGMENT_SHADER_BIT 0x00000002
#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT 0x8B8B
#define GL_FRAGMENT_SUBROUTINE 0x92EC
#define GL_FRAGMENT_SUBROUTINE_UNIFORM 0x92F2
#define GL_FRAGMENT_TEXTURE 0x829F
#define GL_FRAMEBUFFER 0x8D40
#define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED 0x8DA7
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#define GL_FRAMEBUFFER_BARRIER_BIT 0x00000400
#define GL_FRAMEBUFFER_BINDING 0x8CA6
#define GL_FRAMEBUFFER_BLEND 0x828B
#define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#define GL_FRAMEBUFFER_DEFAULT 0x8218
#define GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS 0x9314
#define GL_FRAMEBUFFER_DEFAULT_HEIGHT 0x9311
#define GL_FRAMEBUFFER_DEFAULT_LAYERS 0x9312
#define GL_FRAMEBUFFER_DEFAULT_SAMPLES 0x9313
#define GL_FRAMEBUFFER_DEFAULT_WIDTH 0x9310
#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS 0x8DA8
#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
#define GL_FRAMEBUFFER_RENDERABLE 0x8289
#define GL_FRAMEBUFFER_RENDERABLE_LAYERED 0x828A
#define GL_FRAMEBUFFER_SRGB 0x8DB9
#define GL_FRAMEBUFFER_UNDEFINED 0x8219
#define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#define GL_FRONT 0x0404
#define GL_FRONT_AND_BACK 0x0408
#define GL_FRONT_FACE 0x0B46
#define GL_FRONT_LEFT 0x0400
#define GL_FRONT_RIGHT 0x0401
#define GL_FULL_SUPPORT 0x82B7
#define GL_FUNC_ADD 0x8006
#define GL_FUNC_REVERSE_SUBTRACT 0x800B
#define GL_FUNC_SUBTRACT 0x800A
#define GL_GEOMETRY_INPUT_TYPE 0x8917
#define GL_GEOMETRY_OUTPUT_TYPE 0x8918
#define GL_GEOMETRY_SHADER 0x8DD9
#define GL_GEOMETRY_SHADER_BIT 0x00000004
#define GL_GEOMETRY_SHADER_INVOCATIONS 0x887F
#define GL_GEOMETRY_SUBROUTINE 0x92EB
#define GL_GEOMETRY_SUBROUTINE_UNIFORM 0x92F1
#define GL_GEOMETRY_TEXTURE 0x829E
#define GL_GEOMETRY_VERTICES_OUT 0x8916
#define GL_GEQUAL 0x0206
#define GL_GET_TEXTURE_IMAGE_FORMAT 0x8291
#define GL_GET_TEXTURE_IMAGE_TYPE 0x8292
#define GL_GREATER 0x0204
#define GL_GREEN 0x1904
#define GL_GREEN_INTEGER 0x8D95
#define GL_HALF_FLOAT 0x140B
#define GL_HANDLE_TYPE_D3D11_IMAGE_EXT 0x958B
#define GL_HANDLE_TYPE_D3D11_IMAGE_KMT_EXT 0x958C
#define GL_HANDLE_TYPE_D3D12_RESOURCE_EXT 0x958A
#define GL_HANDLE_TYPE_D3D12_TILEPOOL_EXT 0x9589
#define GL_HANDLE_TYPE_OPAQUE_WIN32_EXT 0x9587
#define GL_HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT 0x9588
#define GL_HIGH_FLOAT 0x8DF2
#define GL_HIGH_INT 0x8DF5
#define GL_IMAGE_1D 0x904C
#define GL_IMAGE_1D_ARRAY 0x9052
#define GL_IMAGE_2D 0x904D
#define GL_IMAGE_2D_ARRAY 0x9053
#define GL_IMAGE_2D_MULTISAMPLE 0x9055
#define GL_IMAGE_2D_MULTISAMPLE_ARRAY 0x9056
#define GL_IMAGE_2D_RECT 0x904F
#define GL_IMAGE_3D 0x904E
#define GL_IMAGE_BINDING_ACCESS 0x8F3E
#define GL_IMAGE_BINDING_FORMAT 0x906E
#define GL_IMAGE_BINDING_LAYER 0x8F3D
#define GL_IMAGE_BINDING_LAYERED 0x8F3C
#define GL_IMAGE_BINDING_LEVEL 0x8F3B
#define GL_IMAGE_BINDING_NAME 0x8F3A
#define GL_IMAGE_BUFFER 0x9051
#define GL_IMAGE_CLASS_10_10_10_2 0x82C3
#define GL_IMAGE_CLASS_11_11_10 0x82C2
#define GL_IMAGE_CLASS_1_X_16 0x82BE
#define GL_IMAGE_CLASS_1_X_32 0x82BB
#define GL_IMAGE_CLASS_1_X_8 0x82C1
#define GL_IMAGE_CLASS_2_X_16 0x82BD
#define GL_IMAGE_CLASS_2_X_32 0x82BA
#define GL_IMAGE_CLASS_2_X_8 0x82C0
#define GL_IMAGE_CLASS_4_X_16 0x82BC
#define GL_IMAGE_CLASS_4_X_32 0x82B9
#define GL_IMAGE_CLASS_4_X_8 0x82BF
#define GL_IMAGE_COMPATIBILITY_CLASS 0x82A8
#define GL_IMAGE_CUBE 0x9050
#define GL_IMAGE_CUBE_MAP_ARRAY 0x9054
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS 0x90C9
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE 0x90C8
#define GL_IMAGE_FORMAT_COMPATIBILITY_TYPE 0x90C7
#define GL_IMAGE_PIXEL_FORMAT 0x82A9
#define GL_IMAGE_PIXEL_TYPE 0x82AA
#define GL_IMAGE_TEXEL_SIZE 0x82A7
#define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#define GL_INCR 0x1E02
#define GL_INCR_WRAP 0x8507
#define GL_INFO_LOG_LENGTH 0x8B84
#define GL_INT 0x1404
#define GL_INTERLEAVED_ATTRIBS 0x8C8C
#define GL_INTERNALFORMAT_ALPHA_SIZE 0x8274
#define GL_INTERNALFORMAT_ALPHA_TYPE 0x827B
#define GL_INTERNALFORMAT_BLUE_SIZE 0x8273
#define GL_INTERNALFORMAT_BLUE_TYPE 0x827A
#define GL_INTERNALFORMAT_DEPTH_SIZE 0x8275
#define GL_INTERNALFORMAT_DEPTH_TYPE 0x827C
#define GL_INTERNALFORMAT_GREEN_SIZE 0x8272
#define GL_INTERNALFORMAT_GREEN_TYPE 0x8279
#define GL_INTERNALFORMAT_PREFERRED 0x8270
#define GL_INTERNALFORMAT_RED_SIZE 0x8271
#define GL_INTERNALFORMAT_RED_TYPE 0x8278
#define GL_INTERNALFORMAT_SHARED_SIZE 0x8277
#define GL_INTERNALFORMAT_STENCIL_SIZE 0x8276
#define GL_INTERNALFORMAT_STENCIL_TYPE 0x827D
#define GL_INTERNALFORMAT_SUPPORTED 0x826F
#define GL_INT_2_10_10_10_REV 0x8D9F
#define GL_INT_IMAGE_1D 0x9057
#define GL_INT_IMAGE_1D_ARRAY 0x905D
#define GL_INT_IMAGE_2D 0x9058
#define GL_INT_IMAGE_2D_ARRAY 0x905E
#define GL_INT_IMAGE_2D_MULTISAMPLE 0x9060
#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY 0x9061
#define GL_INT_IMAGE_2D_RECT 0x905A
#define GL_INT_IMAGE_3D 0x9059
#define GL_INT_IMAGE_BUFFER 0x905C
#define GL_INT_IMAGE_CUBE 0x905B
#define GL_INT_IMAGE_CUBE_MAP_ARRAY 0x905F
#define GL_INT_SAMPLER_1D 0x8DC9
#define GL_INT_SAMPLER_1D_ARRAY 0x8DCE
#define GL_INT_SAMPLER_2D 0x8DCA
#define GL_INT_SAMPLER_2D_ARRAY 0x8DCF
#define GL_INT_SAMPLER_2D_MULTISAMPLE 0x9109
#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910C
#define GL_INT_SAMPLER_2D_RECT 0x8DCD
#define GL_INT_SAMPLER_3D 0x8DCB
#define GL_INT_SAMPLER_BUFFER 0x8DD0
#define GL_INT_SAMPLER_CUBE 0x8DCC
#define GL_INT_SAMPLER_CUBE_MAP_ARRAY 0x900E
#define GL_INT_VEC2 0x8B53
#define GL_INT_VEC3 0x8B54
#define GL_INT_VEC4 0x8B55
#define GL_INVALID_ENUM 0x0500
#define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#define GL_INVALID_INDEX 0xFFFFFFFF
#define GL_INVALID_OPERATION 0x0502
#define GL_INVALID_VALUE 0x0501
#define GL_INVERT 0x150A
#define GL_ISOLINES 0x8E7A
#define GL_IS_PER_PATCH 0x92E7
#define GL_IS_ROW_MAJOR 0x9300
#define GL_KEEP 0x1E00
#define GL_LAST_VERTEX_CONVENTION 0x8E4E
#define GL_LAYER_PROVOKING_VERTEX 0x825E
#define GL_LEFT 0x0406
#define GL_LEQUAL 0x0203
#define GL_LESS 0x0201
#define GL_LINE 0x1B01
#define GL_LINEAR 0x2601
#define GL_LINEAR_MIPMAP_LINEAR 0x2703
#define GL_LINEAR_MIPMAP_NEAREST 0x2701
#define GL_LINEAR_TILING_EXT 0x9585
#define GL_LINES 0x0001
#define GL_LINES_ADJACENCY 0x000A
#define GL_LINE_LOOP 0x0002
#define GL_LINE_SMOOTH 0x0B20
#define GL_LINE_SMOOTH_HINT 0x0C52
#define GL_LINE_STRIP 0x0003
#define GL_LINE_STRIP_ADJACENCY 0x000B
#define GL_LINE_WIDTH 0x0B21
#define GL_LINE_WIDTH_GRANULARITY 0x0B23
#define GL_LINE_WIDTH_RANGE 0x0B22
#define GL_LINK_STATUS 0x8B82
#define GL_LOCATION 0x930E
#define GL_LOCATION_INDEX 0x930F
#define GL_LOGIC_OP_MODE 0x0BF0
#define GL_LOWER_LEFT 0x8CA1
#define GL_LOW_FLOAT 0x8DF0
#define GL_LOW_INT 0x8DF3
#define GL_LUID_SIZE_EXT 8
#define GL_MAJOR_VERSION 0x821B
#define GL_MANUAL_GENERATE_MIPMAP 0x8294
#define GL_MAP_FLUSH_EXPLICIT_BIT 0x0010
#define GL_MAP_INVALIDATE_BUFFER_BIT 0x0008
#define GL_MAP_INVALIDATE_RANGE_BIT 0x0004
#define GL_MAP_READ_BIT 0x0001
#define GL_MAP_UNSYNCHRONIZED_BIT 0x0020
#define GL_MAP_WRITE_BIT 0x0002
#define GL_MATRIX_STRIDE 0x92FF
#define GL_MAX 0x8008
#define GL_MAX_3D_TEXTURE_SIZE 0x8073
#define GL_MAX_ARRAY_TEXTURE_LAYERS 0x88FF
#define GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS 0x92DC
#define GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE 0x92D8
#define GL_MAX_CLIP_DISTANCES 0x0D32
#define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#define GL_MAX_COLOR_TEXTURE_SAMPLES 0x910E
#define GL_MAX_COMBINED_ATOMIC_COUNTERS 0x92D7
#define GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS 0x92D1
#define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
#define GL_MAX_COMBINED_DIMENSIONS 0x8282
#define GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS 0x8A33
#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS 0x8A32
#define GL_MAX_COMBINED_IMAGE_UNIFORMS 0x90CF
#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS 0x8F39
#define GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES 0x8F39
#define GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS 0x90DC
#define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E
#define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F
#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS 0x8B4D
#define GL_MAX_COMBINED_UNIFORM_BLOCKS 0x8A2E
#define GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS 0x8A31
#define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
#define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
#define GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS 0x90DB
#define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
#define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
#define GL_MAX_COMPUTE_UNIFORM_BLOCKS 0x91BB
#define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
#define GL_MAX_COMPUTE_WORK_GROUP_COUNT 0x91BE
#define GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS 0x90EB
#define GL_MAX_COMPUTE_WORK_GROUP_SIZE 0x91BF
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE 0x851C
#define GL_MAX_DEBUG_GROUP_STACK_DEPTH 0x826C
#define GL_MAX_DEBUG_LOGGED_MESSAGES 0x9144
#define GL_MAX_DEBUG_MESSAGE_LENGTH 0x9143
#define GL_MAX_DEPTH 0x8280
#define GL_MAX_DEPTH_TEXTURE_SAMPLES 0x910F
#define GL_MAX_DRAW_BUFFERS 0x8824
#define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS 0x88FC
#define GL_MAX_ELEMENTS_INDICES 0x80E9
#define GL_MAX_ELEMENTS_VERTICES 0x80E8
#define GL_MAX_ELEMENT_INDEX 0x8D6B
#define GL_MAX_FRAGMENT_ATOMIC_COUNTERS 0x92D6
#define GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS 0x92D0
#define GL_MAX_FRAGMENT_IMAGE_UNIFORMS 0x90CE
#define GL_MAX_FRAGMENT_INPUT_COMPONENTS 0x9125
#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET 0x8E5C
#define GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS 0x90DA
#define GL_MAX_FRAGMENT_UNIFORM_BLOCKS 0x8A2D
#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS 0x8B49
#define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#define GL_MAX_FRAMEBUFFER_HEIGHT 0x9316
#define GL_MAX_FRAMEBUFFER_LAYERS 0x9317
#define GL_MAX_FRAMEBUFFER_SAMPLES 0x9318
#define GL_MAX_FRAMEBUFFER_WIDTH 0x9315
#define GL_MAX_GEOMETRY_ATOMIC_COUNTERS 0x92D5
#define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS 0x92CF
#define GL_MAX_GEOMETRY_IMAGE_UNIFORMS 0x90CD
#define GL_MAX_GEOMETRY_INPUT_COMPONENTS 0x9123
#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS 0x9124
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES 0x8DE0
#define GL_MAX_GEOMETRY_SHADER_INVOCATIONS 0x8E5A
#define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS 0x90D7
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS 0x8C29
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS 0x8DE1
#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS 0x8A2C
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS 0x8DDF
#define GL_MAX_HEIGHT 0x827F
#define GL_MAX_IMAGE_SAMPLES 0x906D
#define GL_MAX_IMAGE_UNITS 0x8F38
#define GL_MAX_INTEGER_SAMPLES 0x9110
#define GL_MAX_LABEL_LENGTH 0x82E8
#define GL_MAX_LAYERS 0x8281
#define GL_MAX_NAME_LENGTH 0x92F6
#define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
#define GL_MAX_NUM_COMPATIBLE_SUBROUTINES 0x92F8
#define GL_MAX_PATCH_VERTICES 0x8E7D
#define GL_MAX_PROGRAM_TEXEL_OFFSET 0x8905
#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5F
#define GL_MAX_RECTANGLE_TEXTURE_SIZE 0x84F8
#define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#define GL_MAX_SAMPLES 0x8D57
#define GL_MAX_SAMPLE_MASK_WORDS 0x8E59
#define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#define GL_MAX_SHADER_STORAGE_BLOCK_SIZE 0x90DE
#define GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS 0x90DD
#define GL_MAX_SUBROUTINES 0x8DE7
#define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS 0x8DE8
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS 0x92D3
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS 0x92CD
#define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS 0x90CB
#define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C
#define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83
#define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS 0x90D8
#define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81
#define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85
#define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89
#define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS 0x92D4
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS 0x92CE
#define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS 0x90CC
#define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D
#define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86
#define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS 0x90D9
#define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82
#define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A
#define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80
#define GL_MAX_TESS_GEN_LEVEL 0x8E7E
#define GL_MAX_TESS_PATCH_COMPONENTS 0x8E84
#define GL_MAX_TEXTURE_BUFFER_SIZE 0x8C2B
#define GL_MAX_TEXTURE_IMAGE_UNITS 0x8872
#define GL_MAX_TEXTURE_LOD_BIAS 0x84FD
#define GL_MAX_TEXTURE_SIZE 0x0D33
#define GL_MAX_TRANSFORM_FEEDBACK_BUFFERS 0x8E70
#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS 0x8C8A
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS 0x8C8B
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS 0x8C80
#define GL_MAX_UNIFORM_BLOCK_SIZE 0x8A30
#define GL_MAX_UNIFORM_BUFFER_BINDINGS 0x8A2F
#define GL_MAX_UNIFORM_LOCATIONS 0x826E
#define GL_MAX_VARYING_COMPONENTS 0x8B4B
#define GL_MAX_VARYING_FLOATS 0x8B4B
#define GL_MAX_VARYING_VECTORS 0x8DFC
#define GL_MAX_VERTEX_ATOMIC_COUNTERS 0x92D2
#define GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS 0x92CC
#define GL_MAX_VERTEX_ATTRIBS 0x8869
#define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
#define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#define GL_MAX_VERTEX_IMAGE_UNIFORMS 0x90CA
#define GL_MAX_VERTEX_OUTPUT_COMPONENTS 0x9122
#define GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS 0x90D6
#define GL_MAX_VERTEX_STREAMS 0x8E71
#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS 0x8B4C
#define GL_MAX_VERTEX_UNIFORM_BLOCKS 0x8A2B
#define GL_MAX_VERTEX_UNIFORM_COMPONENTS 0x8B4A
#define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#define GL_MAX_VIEWPORTS 0x825B
#define GL_MAX_VIEWPORT_DIMS 0x0D3A
#define GL_MAX_WIDTH 0x827E
#define GL_MEDIUM_FLOAT 0x8DF1
#define GL_MEDIUM_INT 0x8DF4
#define GL_MIN 0x8007
#define GL_MINOR_VERSION 0x821C
#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET 0x8E5B
#define GL_MIN_MAP_BUFFER_ALIGNMENT 0x90BC
#define GL_MIN_PROGRAM_TEXEL_OFFSET 0x8904
#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5E
#define GL_MIN_SAMPLE_SHADING_VALUE 0x8C37
#define GL_MIPMAP 0x8293
#define GL_MIRRORED_REPEAT 0x8370
#define GL_MULTISAMPLE 0x809D
#define GL_NAME_LENGTH 0x92F9
#define GL_NAND 0x150E
#define GL_NEAREST 0x2600
#define GL_NEAREST_MIPMAP_LINEAR 0x2702
#define GL_NEAREST_MIPMAP_NEAREST 0x2700
#define GL_NEVER 0x0200
#define GL_NICEST 0x1102
#define GL_NONE 0
#define GL_NOOP 0x1505
#define GL_NOR 0x1508
#define GL_NOTEQUAL 0x0205
#define GL_NO_ERROR 0
#define GL_NUM_ACTIVE_VARIABLES 0x9304
#define GL_NUM_COMPATIBLE_SUBROUTINES 0x8E4A
#define GL_NUM_COMPRESSED_TEXTURE_FORMATS 0x86A2
#define GL_NUM_DEVICE_UUIDS_EXT 0x9596
#define GL_NUM_EXTENSIONS 0x821D
#define GL_NUM_PROGRAM_BINARY_FORMATS 0x87FE
#define GL_NUM_SAMPLE_COUNTS 0x9380
#define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#define GL_NUM_SHADING_LANGUAGE_VERSIONS 0x82E9
#define GL_NUM_TILING_TYPES_EXT 0x9582
#define GL_OBJECT_TYPE 0x9112
#define GL_OFFSET 0x92FC
#define GL_ONE 1
#define GL_ONE_MINUS_CONSTANT_ALPHA 0x8004
#define GL_ONE_MINUS_CONSTANT_COLOR 0x8002
#define GL_ONE_MINUS_DST_ALPHA 0x0305
#define GL_ONE_MINUS_DST_COLOR 0x0307
#define GL_ONE_MINUS_SRC1_ALPHA 0x88FB
#define GL_ONE_MINUS_SRC1_COLOR 0x88FA
#define GL_ONE_MINUS_SRC_ALPHA 0x0303
#define GL_ONE_MINUS_SRC_COLOR 0x0301
#define GL_OPTIMAL_TILING_EXT 0x9584
#define GL_OR 0x1507
#define GL_OR_INVERTED 0x150D
#define GL_OR_REVERSE 0x150B
#define GL_OUT_OF_MEMORY 0x0505
#define GL_PACK_ALIGNMENT 0x0D05
#define GL_PACK_COMPRESSED_BLOCK_DEPTH 0x912D
#define GL_PACK_COMPRESSED_BLOCK_HEIGHT 0x912C
#define GL_PACK_COMPRESSED_BLOCK_SIZE 0x912E
#define GL_PACK_COMPRESSED_BLOCK_WIDTH 0x912B
#define GL_PACK_IMAGE_HEIGHT 0x806C
#define GL_PACK_LSB_FIRST 0x0D01
#define GL_PACK_ROW_LENGTH 0x0D02
#define GL_PACK_SKIP_IMAGES 0x806B
#define GL_PACK_SKIP_PIXELS 0x0D04
#define GL_PACK_SKIP_ROWS 0x0D03
#define GL_PACK_SWAP_BYTES 0x0D00
#define GL_PATCHES 0x000E
#define GL_PATCH_DEFAULT_INNER_LEVEL 0x8E73
#define GL_PATCH_DEFAULT_OUTER_LEVEL 0x8E74
#define GL_PATCH_VERTICES 0x8E72
#define GL_PIXEL_BUFFER_BARRIER_BIT 0x00000080
#define GL_PIXEL_PACK_BUFFER 0x88EB
#define GL_PIXEL_PACK_BUFFER_BINDING 0x88ED
#define GL_PIXEL_UNPACK_BUFFER 0x88EC
#define GL_PIXEL_UNPACK_BUFFER_BINDING 0x88EF
#define GL_POINT 0x1B00
#define GL_POINTS 0x0000
#define GL_POINT_FADE_THRESHOLD_SIZE 0x8128
#define GL_POINT_SIZE 0x0B11
#define GL_POINT_SIZE_GRANULARITY 0x0B13
#define GL_POINT_SIZE_RANGE 0x0B12
#define GL_POINT_SPRITE_COORD_ORIGIN 0x8CA0
#define GL_POLYGON_MODE 0x0B40
#define GL_POLYGON_OFFSET_FACTOR 0x8038
#define GL_POLYGON_OFFSET_FILL 0x8037
#define GL_POLYGON_OFFSET_LINE 0x2A02
#define GL_POLYGON_OFFSET_POINT 0x2A01
#define GL_POLYGON_OFFSET_UNITS 0x2A00
#define GL_POLYGON_SMOOTH 0x0B41
#define GL_POLYGON_SMOOTH_HINT 0x0C53
#define GL_PRIMITIVES_GENERATED 0x8C87
#define GL_PRIMITIVE_RESTART 0x8F9D
#define GL_PRIMITIVE_RESTART_FIXED_INDEX 0x8D69
#define GL_PRIMITIVE_RESTART_INDEX 0x8F9E
#define GL_PROGRAM 0x82E2
#define GL_PROGRAM_BINARY_FORMATS 0x87FF
#define GL_PROGRAM_BINARY_LENGTH 0x8741
#define GL_PROGRAM_BINARY_RETRIEVABLE_HINT 0x8257
#define GL_PROGRAM_INPUT 0x92E3
#define GL_PROGRAM_OUTPUT 0x92E4
#define GL_PROGRAM_PIPELINE 0x82E4
#define GL_PROGRAM_PIPELINE_BINDING 0x825A
#define GL_PROGRAM_POINT_SIZE 0x8642
#define GL_PROGRAM_SEPARABLE 0x8258
#define GL_PROTECTED_MEMORY_OBJECT_EXT 0x959B
#define GL_PROVOKING_VERTEX 0x8E4F
#define GL_PROXY_TEXTURE_1D 0x8063
#define GL_PROXY_TEXTURE_1D_ARRAY 0x8C19
#define GL_PROXY_TEXTURE_2D 0x8064
#define GL_PROXY_TEXTURE_2D_ARRAY 0x8C1B
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE 0x9101
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9103
#define GL_PROXY_TEXTURE_3D 0x8070
#define GL_PROXY_TEXTURE_CUBE_MAP 0x851B
#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY 0x900B
#define GL_PROXY_TEXTURE_RECTANGLE 0x84F7
#define GL_QUADS 0x0007
#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION 0x8E4C
#define GL_QUERY 0x82E3
#define GL_QUERY_BY_REGION_NO_WAIT 0x8E16
#define GL_QUERY_BY_REGION_WAIT 0x8E15
#define GL_QUERY_COUNTER_BITS 0x8864
#define GL_QUERY_NO_WAIT 0x8E14
#define GL_QUERY_RESULT 0x8866
#define GL_QUERY_RESULT_AVAILABLE 0x8867
#define GL_QUERY_WAIT 0x8E13
#define GL_R11F_G11F_B10F 0x8C3A
#define GL_R16 0x822A
#define GL_R16F 0x822D
#define GL_R16I 0x8233
#define GL_R16UI 0x8234
#define GL_R16_SNORM 0x8F98
#define GL_R32F 0x822E
#define GL_R32I 0x8235
#define GL_R32UI 0x8236
#define GL_R3_G3_B2 0x2A10
#define GL_R8 0x8229
#define GL_R8I 0x8231
#define GL_R8UI 0x8232
#define GL_R8_SNORM 0x8F94
#define GL_RASTERIZER_DISCARD 0x8C89
#define GL_READ_BUFFER 0x0C02
#define GL_READ_FRAMEBUFFER 0x8CA8
#define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#define GL_READ_ONLY 0x88B8
#define GL_READ_PIXELS 0x828C
#define GL_READ_PIXELS_FORMAT 0x828D
#define GL_READ_PIXELS_TYPE 0x828E
#define GL_READ_WRITE 0x88BA
#define GL_RED 0x1903
#define GL_RED_INTEGER 0x8D94
#define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
#define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
#define GL_REFERENCED_BY_GEOMETRY_SHADER 0x9309
#define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
#define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
#define GL_RENDERBUFFER 0x8D41
#define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#define GL_RENDERBUFFER_BINDING 0x8CA7
#define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#define GL_RENDERBUFFER_HEIGHT 0x8D43
#define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#define GL_RENDERBUFFER_RED_SIZE 0x8D50
#define GL_RENDERBUFFER_SAMPLES 0x8CAB
#define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#define GL_RENDERBUFFER_WIDTH 0x8D42
#define GL_RENDERER 0x1F01
#define GL_REPEAT 0x2901
#define GL_REPLACE 0x1E01
#define GL_RG 0x8227
#define GL_RG16 0x822C
#define GL_RG16F 0x822F
#define GL_RG16I 0x8239
#define GL_RG16UI 0x823A
#define GL_RG16_SNORM 0x8F99
#define GL_RG32F 0x8230
#define GL_RG32I 0x823B
#define GL_RG32UI 0x823C
#define GL_RG8 0x822B
#define GL_RG8I 0x8237
#define GL_RG8UI 0x8238
#define GL_RG8_SNORM 0x8F95
#define GL_RGB 0x1907
#define GL_RGB10 0x8052
#define GL_RGB10_A2 0x8059
#define GL_RGB10_A2UI 0x906F
#define GL_RGB12 0x8053
#define GL_RGB16 0x8054
#define GL_RGB16F 0x881B
#define GL_RGB16I 0x8D89
#define GL_RGB16UI 0x8D77
#define GL_RGB16_SNORM 0x8F9A
#define GL_RGB32F 0x8815
#define GL_RGB32I 0x8D83
#define GL_RGB32UI 0x8D71
#define GL_RGB4 0x804F
#define GL_RGB5 0x8050
#define GL_RGB565 0x8D62
#define GL_RGB5_A1 0x8057
#define GL_RGB8 0x8051
#define GL_RGB8I 0x8D8F
#define GL_RGB8UI 0x8D7D
#define GL_RGB8_SNORM 0x8F96
#define GL_RGB9_E5 0x8C3D
#define GL_RGBA 0x1908
#define GL_RGBA12 0x805A
#define GL_RGBA16 0x805B
#define GL_RGBA16F 0x881A
#define GL_RGBA16I 0x8D88
#define GL_RGBA16UI 0x8D76
#define GL_RGBA16_SNORM 0x8F9B
#define GL_RGBA2 0x8055
#define GL_RGBA32F 0x8814
#define GL_RGBA32I 0x8D82
#define GL_RGBA32UI 0x8D70
#define GL_RGBA4 0x8056
#define GL_RGBA8 0x8058
#define GL_RGBA8I 0x8D8E
#define GL_RGBA8UI 0x8D7C
#define GL_RGBA8_SNORM 0x8F97
#define GL_RGBA_INTEGER 0x8D99
#define GL_RGB_INTEGER 0x8D98
#define GL_RG_INTEGER 0x8228
#define GL_RIGHT 0x0407
#define GL_SAMPLER 0x82E6
#define GL_SAMPLER_1D 0x8B5D
#define GL_SAMPLER_1D_ARRAY 0x8DC0
#define GL_SAMPLER_1D_ARRAY_SHADOW 0x8DC3
#define GL_SAMPLER_1D_SHADOW 0x8B61
#define GL_SAMPLER_2D 0x8B5E
#define GL_SAMPLER_2D_ARRAY 0x8DC1
#define GL_SAMPLER_2D_ARRAY_SHADOW 0x8DC4
#define GL_SAMPLER_2D_MULTISAMPLE 0x9108
#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910B
#define GL_SAMPLER_2D_RECT 0x8B63
#define GL_SAMPLER_2D_RECT_SHADOW 0x8B64
#define GL_SAMPLER_2D_SHADOW 0x8B62
#define GL_SAMPLER_3D 0x8B5F
#define GL_SAMPLER_BINDING 0x8919
#define GL_SAMPLER_BUFFER 0x8DC2
#define GL_SAMPLER_CUBE 0x8B60
#define GL_SAMPLER_CUBE_MAP_ARRAY 0x900C
#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW 0x900D
#define GL_SAMPLER_CUBE_SHADOW 0x8DC5
#define GL_SAMPLES 0x80A9
#define GL_SAMPLES_PASSED 0x8914
#define GL_SAMPLE_ALPHA_TO_COVERAGE 0x809E
#define GL_SAMPLE_ALPHA_TO_ONE 0x809F
#define GL_SAMPLE_BUFFERS 0x80A8
#define GL_SAMPLE_COVERAGE 0x80A0
#define GL_SAMPLE_COVERAGE_INVERT 0x80AB
#define GL_SAMPLE_COVERAGE_VALUE 0x80AA
#define GL_SAMPLE_MASK 0x8E51
#define GL_SAMPLE_MASK_VALUE 0x8E52
#define GL_SAMPLE_POSITION 0x8E50
#define GL_SAMPLE_SHADING 0x8C36
#define GL_SCISSOR_BOX 0x0C10
#define GL_SCISSOR_TEST 0x0C11
#define GL_SEPARATE_ATTRIBS 0x8C8D
#define GL_SET 0x150F
#define GL_SHADER 0x82E1
#define GL_SHADER_BINARY_FORMATS 0x8DF8
#define GL_SHADER_COMPILER 0x8DFA
#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT 0x00000020
#define GL_SHADER_IMAGE_ATOMIC 0x82A6
#define GL_SHADER_IMAGE_LOAD 0x82A4
#define GL_SHADER_IMAGE_STORE 0x82A5
#define GL_SHADER_SOURCE_LENGTH 0x8B88
#define GL_SHADER_STORAGE_BARRIER_BIT 0x00002000
#define GL_SHADER_STORAGE_BLOCK 0x92E6
#define GL_SHADER_STORAGE_BUFFER 0x90D2
#define GL_SHADER_STORAGE_BUFFER_BINDING 0x90D3
#define GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT 0x90DF
#define GL_SHADER_STORAGE_BUFFER_SIZE 0x90D5
#define GL_SHADER_STORAGE_BUFFER_START 0x90D4
#define GL_SHADER_TYPE 0x8B4F
#define GL_SHADING_LANGUAGE_VERSION 0x8B8C
#define GL_SHORT 0x1402
#define GL_SIGNALED 0x9119
#define GL_SIGNED_NORMALIZED 0x8F9C
#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST 0x82AC
#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE 0x82AE
#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST 0x82AD
#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE 0x82AF
#define GL_SMOOTH_LINE_WIDTH_GRANULARITY 0x0B23
#define GL_SMOOTH_LINE_WIDTH_RANGE 0x0B22
#define GL_SMOOTH_POINT_SIZE_GRANULARITY 0x0B13
#define GL_SMOOTH_POINT_SIZE_RANGE 0x0B12
#define GL_SRC1_ALPHA 0x8589
#define GL_SRC1_COLOR 0x88F9
#define GL_SRC_ALPHA 0x0302
#define GL_SRC_ALPHA_SATURATE 0x0308
#define GL_SRC_COLOR 0x0300
#define GL_SRGB 0x8C40
#define GL_SRGB8 0x8C41
#define GL_SRGB8_ALPHA8 0x8C43
#define GL_SRGB_ALPHA 0x8C42
#define GL_SRGB_READ 0x8297
#define GL_SRGB_WRITE 0x8298
#define GL_STACK_OVERFLOW 0x0503
#define GL_STACK_UNDERFLOW 0x0504
#define GL_STATIC_COPY 0x88E6
#define GL_STATIC_DRAW 0x88E4
#define GL_STATIC_READ 0x88E5
#define GL_STENCIL 0x1802
#define GL_STENCIL_ATTACHMENT 0x8D20
#define GL_STENCIL_BACK_FAIL 0x8801
#define GL_STENCIL_BACK_FUNC 0x8800
#define GL_STENCIL_BACK_PASS_DEPTH_FAIL 0x8802
#define GL_STENCIL_BACK_PASS_DEPTH_PASS 0x8803
#define GL_STENCIL_BACK_REF 0x8CA3
#define GL_STENCIL_BACK_VALUE_MASK 0x8CA4
#define GL_STENCIL_BACK_WRITEMASK 0x8CA5
#define GL_STENCIL_BUFFER_BIT 0x00000400
#define GL_STENCIL_CLEAR_VALUE 0x0B91
#define GL_STENCIL_COMPONENTS 0x8285
#define GL_STENCIL_FAIL 0x0B94
#define GL_STENCIL_FUNC 0x0B92
#define GL_STENCIL_INDEX 0x1901
#define GL_STENCIL_INDEX1 0x8D46
#define GL_STENCIL_INDEX16 0x8D49
#define GL_STENCIL_INDEX4 0x8D47
#define GL_STENCIL_INDEX8 0x8D48
#define GL_STENCIL_PASS_DEPTH_FAIL 0x0B95
#define GL_STENCIL_PASS_DEPTH_PASS 0x0B96
#define GL_STENCIL_REF 0x0B97
#define GL_STENCIL_RENDERABLE 0x8288
#define GL_STENCIL_TEST 0x0B90
#define GL_STENCIL_VALUE_MASK 0x0B93
#define GL_STENCIL_WRITEMASK 0x0B98
#define GL_STEREO 0x0C33
#define GL_STREAM_COPY 0x88E2
#define GL_STREAM_DRAW 0x88E0
#define GL_STREAM_READ 0x88E1
#define GL_SUBPIXEL_BITS 0x0D50
#define GL_SYNC_CONDITION 0x9113
#define GL_SYNC_FENCE 0x9116
#define GL_SYNC_FLAGS 0x9115
#define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#define GL_SYNC_STATUS 0x9114
#define GL_TESS_CONTROL_OUTPUT_VERTICES 0x8E75
#define GL_TESS_CONTROL_SHADER 0x8E88
#define GL_TESS_CONTROL_SHADER_BIT 0x00000008
#define GL_TESS_CONTROL_SUBROUTINE 0x92E9
#define GL_TESS_CONTROL_SUBROUTINE_UNIFORM 0x92EF
#define GL_TESS_CONTROL_TEXTURE 0x829C
#define GL_TESS_EVALUATION_SHADER 0x8E87
#define GL_TESS_EVALUATION_SHADER_BIT 0x00000010
#define GL_TESS_EVALUATION_SUBROUTINE 0x92EA
#define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM 0x92F0
#define GL_TESS_EVALUATION_TEXTURE 0x829D
#define GL_TESS_GEN_MODE 0x8E76
#define GL_TESS_GEN_POINT_MODE 0x8E79
#define GL_TESS_GEN_SPACING 0x8E77
#define GL_TESS_GEN_VERTEX_ORDER 0x8E78
#define GL_TEXTURE 0x1702
#define GL_TEXTURE0 0x84C0
#define GL_TEXTURE1 0x84C1
#define GL_TEXTURE10 0x84CA
#define GL_TEXTURE11 0x84CB
#define GL_TEXTURE12 0x84CC
#define GL_TEXTURE13 0x84CD
#define GL_TEXTURE14 0x84CE
#define GL_TEXTURE15 0x84CF
#define GL_TEXTURE16 0x84D0
#define GL_TEXTURE17 0x84D1
#define GL_TEXTURE18 0x84D2
#define GL_TEXTURE19 0x84D3
#define GL_TEXTURE2 0x84C2
#define GL_TEXTURE20 0x84D4
#define GL_TEXTURE21 0x84D5
#define GL_TEXTURE22 0x84D6
#define GL_TEXTURE23 0x84D7
#define GL_TEXTURE24 0x84D8
#define GL_TEXTURE25 0x84D9
#define GL_TEXTURE26 0x84DA
#define GL_TEXTURE27 0x84DB
#define GL_TEXTURE28 0x84DC
#define GL_TEXTURE29 0x84DD
#define GL_TEXTURE3 0x84C3
#define GL_TEXTURE30 0x84DE
#define GL_TEXTURE31 0x84DF
#define GL_TEXTURE4 0x84C4
#define GL_TEXTURE5 0x84C5
#define GL_TEXTURE6 0x84C6
#define GL_TEXTURE7 0x84C7
#define GL_TEXTURE8 0x84C8
#define GL_TEXTURE9 0x84C9
#define GL_TEXTURE_1D 0x0DE0
#define GL_TEXTURE_1D_ARRAY 0x8C18
#define GL_TEXTURE_2D 0x0DE1
#define GL_TEXTURE_2D_ARRAY 0x8C1A
#define GL_TEXTURE_2D_MULTISAMPLE 0x9100
#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9102
#define GL_TEXTURE_3D 0x806F
#define GL_TEXTURE_ALPHA_SIZE 0x805F
#define GL_TEXTURE_ALPHA_TYPE 0x8C13
#define GL_TEXTURE_BASE_LEVEL 0x813C
#define GL_TEXTURE_BINDING_1D 0x8068
#define GL_TEXTURE_BINDING_1D_ARRAY 0x8C1C
#define GL_TEXTURE_BINDING_2D 0x8069
#define GL_TEXTURE_BINDING_2D_ARRAY 0x8C1D
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE 0x9104
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY 0x9105
#define GL_TEXTURE_BINDING_3D 0x806A
#define GL_TEXTURE_BINDING_BUFFER 0x8C2C
#define GL_TEXTURE_BINDING_CUBE_MAP 0x8514
#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY 0x900A
#define GL_TEXTURE_BINDING_RECTANGLE 0x84F6
#define GL_TEXTURE_BLUE_SIZE 0x805E
#define GL_TEXTURE_BLUE_TYPE 0x8C12
#define GL_TEXTURE_BORDER_COLOR 0x1004
#define GL_TEXTURE_BUFFER 0x8C2A
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING 0x8C2D
#define GL_TEXTURE_BUFFER_OFFSET 0x919D
#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT 0x919F
#define GL_TEXTURE_BUFFER_SIZE 0x919E
#define GL_TEXTURE_COMPARE_FUNC 0x884D
#define GL_TEXTURE_COMPARE_MODE 0x884C
#define GL_TEXTURE_COMPRESSED 0x86A1
#define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT 0x82B2
#define GL_TEXTURE_COMPRESSED_BLOCK_SIZE 0x82B3
#define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH 0x82B1
#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE 0x86A0
#define GL_TEXTURE_COMPRESSION_HINT 0x84EF
#define GL_TEXTURE_CUBE_MAP 0x8513
#define GL_TEXTURE_CUBE_MAP_ARRAY 0x9009
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X 0x8516
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y 0x8518
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z 0x851A
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X 0x8515
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y 0x8517
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z 0x8519
#define GL_TEXTURE_CUBE_MAP_SEAMLESS 0x884F
#define GL_TEXTURE_DEPTH 0x8071
#define GL_TEXTURE_DEPTH_SIZE 0x884A
#define GL_TEXTURE_DEPTH_TYPE 0x8C16
#define GL_TEXTURE_FETCH_BARRIER_BIT 0x00000008
#define GL_TEXTURE_FIXED_SAMPLE_LOCATIONS 0x9107
#define GL_TEXTURE_GATHER 0x82A2
#define GL_TEXTURE_GATHER_SHADOW 0x82A3
#define GL_TEXTURE_GREEN_SIZE 0x805D
#define GL_TEXTURE_GREEN_TYPE 0x8C11
#define GL_TEXTURE_HEIGHT 0x1001
#define GL_TEXTURE_IMAGE_FORMAT 0x828F
#define GL_TEXTURE_IMAGE_TYPE 0x8290
#define GL_TEXTURE_IMMUTABLE_FORMAT 0x912F
#define GL_TEXTURE_IMMUTABLE_LEVELS 0x82DF
#define GL_TEXTURE_INTERNAL_FORMAT 0x1003
#define GL_TEXTURE_LOD_BIAS 0x8501
#define GL_TEXTURE_MAG_FILTER 0x2800
#define GL_TEXTURE_MAX_LEVEL 0x813D
#define GL_TEXTURE_MAX_LOD 0x813B
#define GL_TEXTURE_MIN_FILTER 0x2801
#define GL_TEXTURE_MIN_LOD 0x813A
#define GL_TEXTURE_RECTANGLE 0x84F5
#define GL_TEXTURE_RED_SIZE 0x805C
#define GL_TEXTURE_RED_TYPE 0x8C10
#define GL_TEXTURE_SAMPLES 0x9106
#define GL_TEXTURE_SHADOW 0x82A1
#define GL_TEXTURE_SHARED_SIZE 0x8C3F
#define GL_TEXTURE_STENCIL_SIZE 0x88F1
#define GL_TEXTURE_SWIZZLE_A 0x8E45
#define GL_TEXTURE_SWIZZLE_B 0x8E44
#define GL_TEXTURE_SWIZZLE_G 0x8E43
#define GL_TEXTURE_SWIZZLE_R 0x8E42
#define GL_TEXTURE_SWIZZLE_RGBA 0x8E46
#define GL_TEXTURE_TILING_EXT 0x9580
#define GL_TEXTURE_UPDATE_BARRIER_BIT 0x00000100
#define GL_TEXTURE_VIEW 0x82B5
#define GL_TEXTURE_VIEW_MIN_LAYER 0x82DD
#define GL_TEXTURE_VIEW_MIN_LEVEL 0x82DB
#define GL_TEXTURE_VIEW_NUM_LAYERS 0x82DE
#define GL_TEXTURE_VIEW_NUM_LEVELS 0x82DC
#define GL_TEXTURE_WIDTH 0x1000
#define GL_TEXTURE_WRAP_R 0x8072
#define GL_TEXTURE_WRAP_S 0x2802
#define GL_TEXTURE_WRAP_T 0x2803
#define GL_TILING_TYPES_EXT 0x9583
#define GL_TIMEOUT_EXPIRED 0x911B
#define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFF
#define GL_TIMESTAMP 0x8E28
#define GL_TIME_ELAPSED 0x88BF
#define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
#define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
#define GL_TRANSFORM_FEEDBACK 0x8E22
#define GL_TRANSFORM_FEEDBACK_ACTIVE 0x8E24
#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT 0x00000800
#define GL_TRANSFORM_FEEDBACK_BINDING 0x8E25
#define GL_TRANSFORM_FEEDBACK_BUFFER 0x8C8E
#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE 0x8E24
#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING 0x8C8F
#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE 0x8C7F
#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED 0x8E23
#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE 0x8C85
#define GL_TRANSFORM_FEEDBACK_BUFFER_START 0x8C84
#define GL_TRANSFORM_FEEDBACK_PAUSED 0x8E23
#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN 0x8C88
#define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
#define GL_TRANSFORM_FEEDBACK_VARYINGS 0x8C83
#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH 0x8C76
#define GL_TRIANGLES 0x0004
#define GL_TRIANGLES_ADJACENCY 0x000C
#define GL_TRIANGLE_FAN 0x0006
#define GL_TRIANGLE_STRIP 0x0005
#define GL_TRIANGLE_STRIP_ADJACENCY 0x000D
#define GL_TRUE 1
#define GL_TYPE 0x92FA
#define GL_UNDEFINED_VERTEX 0x8260
#define GL_UNIFORM 0x92E1
#define GL_UNIFORM_ARRAY_STRIDE 0x8A3C
#define GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX 0x92DA
#define GL_UNIFORM_BARRIER_BIT 0x00000004
#define GL_UNIFORM_BLOCK 0x92E2
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS 0x8A42
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES 0x8A43
#define GL_UNIFORM_BLOCK_BINDING 0x8A3F
#define GL_UNIFORM_BLOCK_DATA_SIZE 0x8A40
#define GL_UNIFORM_BLOCK_INDEX 0x8A3A
#define GL_UNIFORM_BLOCK_NAME_LENGTH 0x8A41
#define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER 0x90EC
#define GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER 0x8A46
#define GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER 0x8A45
#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER 0x84F0
#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER 0x84F1
#define GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER 0x8A44
#define GL_UNIFORM_BUFFER 0x8A11
#define GL_UNIFORM_BUFFER_BINDING 0x8A28
#define GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT 0x8A34
#define GL_UNIFORM_BUFFER_SIZE 0x8A2A
#define GL_UNIFORM_BUFFER_START 0x8A29
#define GL_UNIFORM_IS_ROW_MAJOR 0x8A3E
#define GL_UNIFORM_MATRIX_STRIDE 0x8A3D
#define GL_UNIFORM_NAME_LENGTH 0x8A39
#define GL_UNIFORM_OFFSET 0x8A3B
#define GL_UNIFORM_SIZE 0x8A38
#define GL_UNIFORM_TYPE 0x8A37
#define GL_UNPACK_ALIGNMENT 0x0CF5
#define GL_UNPACK_COMPRESSED_BLOCK_DEPTH 0x9129
#define GL_UNPACK_COMPRESSED_BLOCK_HEIGHT 0x9128
#define GL_UNPACK_COMPRESSED_BLOCK_SIZE 0x912A
#define GL_UNPACK_COMPRESSED_BLOCK_WIDTH 0x9127
#define GL_UNPACK_IMAGE_HEIGHT 0x806E
#define GL_UNPACK_LSB_FIRST 0x0CF1
#define GL_UNPACK_ROW_LENGTH 0x0CF2
#define GL_UNPACK_SKIP_IMAGES 0x806D
#define GL_UNPACK_SKIP_PIXELS 0x0CF4
#define GL_UNPACK_SKIP_ROWS 0x0CF3
#define GL_UNPACK_SWAP_BYTES 0x0CF0
#define GL_UNSIGNALED 0x9118
#define GL_UNSIGNED_BYTE 0x1401
#define GL_UNSIGNED_BYTE_2_3_3_REV 0x8362
#define GL_UNSIGNED_BYTE_3_3_2 0x8032
#define GL_UNSIGNED_INT 0x1405
#define GL_UNSIGNED_INT_10F_11F_11F_REV 0x8C3B
#define GL_UNSIGNED_INT_10_10_10_2 0x8036
#define GL_UNSIGNED_INT_24_8 0x84FA
#define GL_UNSIGNED_INT_2_10_10_10_REV 0x8368
#define GL_UNSIGNED_INT_5_9_9_9_REV 0x8C3E
#define GL_UNSIGNED_INT_8_8_8_8 0x8035
#define GL_UNSIGNED_INT_8_8_8_8_REV 0x8367
#define GL_UNSIGNED_INT_ATOMIC_COUNTER 0x92DB
#define GL_UNSIGNED_INT_IMAGE_1D 0x9062
#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY 0x9068
#define GL_UNSIGNED_INT_IMAGE_2D 0x9063
#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY 0x9069
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE 0x906B
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY 0x906C
#define GL_UNSIGNED_INT_IMAGE_2D_RECT 0x9065
#define GL_UNSIGNED_INT_IMAGE_3D 0x9064
#define GL_UNSIGNED_INT_IMAGE_BUFFER 0x9067
#define GL_UNSIGNED_INT_IMAGE_CUBE 0x9066
#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY 0x906A
#define GL_UNSIGNED_INT_SAMPLER_1D 0x8DD1
#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY 0x8DD6
#define GL_UNSIGNED_INT_SAMPLER_2D 0x8DD2
#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY 0x8DD7
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE 0x910A
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910D
#define GL_UNSIGNED_INT_SAMPLER_2D_RECT 0x8DD5
#define GL_UNSIGNED_INT_SAMPLER_3D 0x8DD3
#define GL_UNSIGNED_INT_SAMPLER_BUFFER 0x8DD8
#define GL_UNSIGNED_INT_SAMPLER_CUBE 0x8DD4
#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY 0x900F
#define GL_UNSIGNED_INT_VEC2 0x8DC6
#define GL_UNSIGNED_INT_VEC3 0x8DC7
#define GL_UNSIGNED_INT_VEC4 0x8DC8
#define GL_UNSIGNED_NORMALIZED 0x8C17
#define GL_UNSIGNED_SHORT 0x1403
#define GL_UNSIGNED_SHORT_1_5_5_5_REV 0x8366
#define GL_UNSIGNED_SHORT_4_4_4_4 0x8033
#define GL_UNSIGNED_SHORT_4_4_4_4_REV 0x8365
#define GL_UNSIGNED_SHORT_5_5_5_1 0x8034
#define GL_UNSIGNED_SHORT_5_6_5 0x8363
#define GL_UNSIGNED_SHORT_5_6_5_REV 0x8364
#define GL_UPPER_LEFT 0x8CA2
#define GL_UUID_SIZE_EXT 16
#define GL_VALIDATE_STATUS 0x8B83
#define GL_VENDOR 0x1F00
#define GL_VERSION 0x1F02
#define GL_VERTEX_ARRAY 0x8074
#define GL_VERTEX_ARRAY_BINDING 0x85B5
#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT 0x00000001
#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING 0x889F
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR 0x88FE
#define GL_VERTEX_ATTRIB_ARRAY_ENABLED 0x8622
#define GL_VERTEX_ATTRIB_ARRAY_INTEGER 0x88FD
#define GL_VERTEX_ATTRIB_ARRAY_LONG 0x874E
#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED 0x886A
#define GL_VERTEX_ATTRIB_ARRAY_POINTER 0x8645
#define GL_VERTEX_ATTRIB_ARRAY_SIZE 0x8623
#define GL_VERTEX_ATTRIB_ARRAY_STRIDE 0x8624
#define GL_VERTEX_ATTRIB_ARRAY_TYPE 0x8625
#define GL_VERTEX_ATTRIB_BINDING 0x82D4
#define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
#define GL_VERTEX_BINDING_BUFFER 0x8F4F
#define GL_VERTEX_BINDING_DIVISOR 0x82D6
#define GL_VERTEX_BINDING_OFFSET 0x82D7
#define GL_VERTEX_BINDING_STRIDE 0x82D8
#define GL_VERTEX_PROGRAM_POINT_SIZE 0x8642
#define GL_VERTEX_SHADER 0x8B31
#define GL_VERTEX_SHADER_BIT 0x00000001
#define GL_VERTEX_SUBROUTINE 0x92E8
#define GL_VERTEX_SUBROUTINE_UNIFORM 0x92EE
#define GL_VERTEX_TEXTURE 0x829B
#define GL_VIEWPORT 0x0BA2
#define GL_VIEWPORT_BOUNDS_RANGE 0x825D
#define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
#define GL_VIEWPORT_SUBPIXEL_BITS 0x825C
#define GL_VIEW_CLASS_128_BITS 0x82C4
#define GL_VIEW_CLASS_16_BITS 0x82CA
#define GL_VIEW_CLASS_24_BITS 0x82C9
#define GL_VIEW_CLASS_32_BITS 0x82C8
#define GL_VIEW_CLASS_48_BITS 0x82C7
#define GL_VIEW_CLASS_64_BITS 0x82C6
#define GL_VIEW_CLASS_8_BITS 0x82CB
#define GL_VIEW_CLASS_96_BITS 0x82C5
#define GL_VIEW_CLASS_BPTC_FLOAT 0x82D3
#define GL_VIEW_CLASS_BPTC_UNORM 0x82D2
#define GL_VIEW_CLASS_RGTC1_RED 0x82D0
#define GL_VIEW_CLASS_RGTC2_RG 0x82D1
#define GL_VIEW_CLASS_S3TC_DXT1_RGB 0x82CC
#define GL_VIEW_CLASS_S3TC_DXT1_RGBA 0x82CD
#define GL_VIEW_CLASS_S3TC_DXT3_RGBA 0x82CE
#define GL_VIEW_CLASS_S3TC_DXT5_RGBA 0x82CF
#define GL_VIEW_COMPATIBILITY_CLASS 0x82B6
#define GL_WAIT_FAILED 0x911D
#define GL_WRITE_ONLY 0x88B9
#define GL_XOR 0x1506
#define GL_ZERO 0

#ifndef __khrplatform_h_
#define __khrplatform_h_

/*
** Copyright (c) 2008-2018 The Khronos Group Inc.
**
** Permission is hereby granted, free of charge, to any person obtaining a
** copy of this software and/or associated documentation files (the
** "Materials"), to deal in the Materials without restriction, including
** without limitation the rights to use, copy, modify, merge, publish,
** distribute, sublicense, and/or sell copies of the Materials, and to
** permit persons to whom the Materials are furnished to do so, subject to
** the following conditions:
**
** The above copyright notice and this permission notice shall be included
** in all copies or substantial portions of the Materials.
**
** THE MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.
*/

/* Khronos platform-specific types and definitions.
 *
 * The master copy of khrplatform.h is maintained in the Khronos EGL
 * Registry repository at https://github.com/KhronosGroup/EGL-Registry
 * The last semantic modification to khrplatform.h was at commit ID:
 *      67a3e0864c2d75ea5287b9f3d2eb74a745936692
 *
 * Adopters may modify this file to suit their platform. Adopters are
 * encouraged to submit platform specific modifications to the Khronos
 * group so that they can be included in future versions of this file.
 * Please submit changes by filing pull requests or issues on
 * the EGL Registry repository linked above.
 *
 *
 * See the Implementer's Guidelines for information about where this file
 * should be located on your system and for more details of its use:
 *    http://www.khronos.org/registry/implementers_guide.pdf
 *
 * This file should be included as
 *        #include <KHR/khrplatform.h>
 * by Khronos client API header files that use its types and defines.
 *
 * The types in khrplatform.h should only be used to define API-specific types.
 *
 * Types defined in khrplatform.h:
 *    khronos_int8_t              signed   8  bit
 *    khronos_uint8_t             unsigned 8  bit
 *    khronos_int16_t             signed   16 bit
 *    khronos_uint16_t            unsigned 16 bit
 *    khronos_int32_t             signed   32 bit
 *    khronos_uint32_t            unsigned 32 bit
 *    khronos_int64_t             signed   64 bit
 *    khronos_uint64_t            unsigned 64 bit
 *    khronos_intptr_t            signed   same number of bits as a pointer
 *    khronos_uintptr_t           unsigned same number of bits as a pointer
 *    khronos_ssize_t             signed   size
 *    khronos_usize_t             unsigned size
 *    khronos_float_t             signed   32 bit floating point
 *    khronos_time_ns_t           unsigned 64 bit time in nanoseconds
 *    khronos_utime_nanoseconds_t unsigned time interval or absolute time in
 *                                         nanoseconds
 *    khronos_stime_nanoseconds_t signed time interval in nanoseconds
 *    khronos_boolean_enum_t      enumerated boolean type. This should
 *      only be used as a base type when a client API's boolean type is
 *      an enum. Client APIs which use an integer or other type for
 *      booleans cannot use this as the base type for their boolean.
 *
 * Tokens defined in khrplatform.h:
 *
 *    KHRONOS_FALSE, KHRONOS_TRUE Enumerated boolean false/true values.
 *
 *    KHRONOS_SUPPORT_INT64 is 1 if 64 bit integers are supported; otherwise 0.
 *    KHRONOS_SUPPORT_FLOAT is 1 if floats are supported; otherwise 0.
 *
 * Calling convention macros defined in this file:
 *    KHRONOS_APICALL
 *    KHRONOS_SOIL_GLAD_API_PTR
 *    KHRONOS_APIATTRIBUTES
 *
 * These may be used in function prototypes as:
 *
 *      KHRONOS_APICALL void KHRONOS_SOIL_GLAD_API_PTR funcname(
 *                                  int arg1,
 *                                  int arg2) KHRONOS_APIATTRIBUTES;
 */

#if defined(__SCITECH_SNAP__) && !defined(KHRONOS_STATIC)
#define KHRONOS_STATIC 1
#endif

/*-------------------------------------------------------------------------
 * Definition of KHRONOS_APICALL
 *-------------------------------------------------------------------------
 * This precedes the return type of the function in the function prototype.
 */
#if defined(KHRONOS_STATIC)
/* If the preprocessor constant KHRONOS_STATIC is defined, make the
 * header compatible with static linking. */
#define KHRONOS_APICALL
#elif defined(_WIN32)
#define KHRONOS_APICALL __declspec(dllimport)
#elif defined(__SYMBIAN32__)
#define KHRONOS_APICALL IMPORT_C
#elif defined(__ANDROID__)
#define KHRONOS_APICALL __attribute__((visibility("default")))
#else
#define KHRONOS_APICALL
#endif

/*-------------------------------------------------------------------------
 * Definition of KHRONOS_SOIL_GLAD_API_PTR
 *-------------------------------------------------------------------------
 * This follows the return type of the function  and precedes the function
 * name in the function prototype.
 */
#if defined(_WIN32) && !defined(_WIN32_WCE) && !defined(__SCITECH_SNAP__)
/* Win32 but not WinCE */
#define KHRONOS_SOIL_GLAD_API_PTR __stdcall
#else
#define KHRONOS_SOIL_GLAD_API_PTR
#endif

/*-------------------------------------------------------------------------
 * Definition of KHRONOS_APIATTRIBUTES
 *-------------------------------------------------------------------------
 * This follows the closing parenthesis of the function prototype arguments.
 */
#if defined(__ARMCC_2__)
#define KHRONOS_APIATTRIBUTES __softfp
#else
#define KHRONOS_APIATTRIBUTES
#endif

/*-------------------------------------------------------------------------
 * basic type definitions
 *-----------------------------------------------------------------------*/
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || defined(__GNUC__) ||         \
    defined(__SCO__) || defined(__USLC__)

/*
 * Using <stdint.h>
 */
#include <stdint.h>
typedef int32_t  khronos_int32_t;
typedef uint32_t khronos_uint32_t;
typedef int64_t  khronos_int64_t;
typedef uint64_t khronos_uint64_t;
#define KHRONOS_SUPPORT_INT64 1
#define KHRONOS_SUPPORT_FLOAT 1
/*
 * To support platform where unsigned long cannot be used interchangeably with
 * inptr_t (e.g. CHERI-extended ISAs), we can use the stdint.h intptr_t.
 * Ideally, we could just use (u)intptr_t everywhere, but this could result in
 * ABI breakage if khronos_uintptr_t is changed from unsigned long to
 * unsigned long long or similar (this results in different C++ name mangling).
 * To avoid changes for existing platforms, we restrict usage of intptr_t to
 * platforms where the size of a pointer is larger than the size of long.
 */
#if defined(__SIZEOF_LONG__) && defined(__SIZEOF_POINTER__)
#if __SIZEOF_POINTER__ > __SIZEOF_LONG__
#define KHRONOS_USE_INTPTR_T
#endif
#endif

#elif defined(__VMS) || defined(__sgi)

/*
 * Using <inttypes.h>
 */
#include <inttypes.h>
typedef int32_t  khronos_int32_t;
typedef uint32_t khronos_uint32_t;
typedef int64_t  khronos_int64_t;
typedef uint64_t khronos_uint64_t;
#define KHRONOS_SUPPORT_INT64 1
#define KHRONOS_SUPPORT_FLOAT 1

#elif defined(_WIN32) && !defined(__SCITECH_SNAP__)

/*
 * Win32
 */
typedef __int32          khronos_int32_t;
typedef unsigned __int32 khronos_uint32_t;
typedef __int64          khronos_int64_t;
typedef unsigned __int64 khronos_uint64_t;
#define KHRONOS_SUPPORT_INT64 1
#define KHRONOS_SUPPORT_FLOAT 1

#elif defined(__sun__) || defined(__digital__)

/*
 * Sun or Digital
 */
typedef int          khronos_int32_t;
typedef unsigned int khronos_uint32_t;
#if defined(__arch64__) || defined(_LP64)
typedef long int          khronos_int64_t;
typedef unsigned long int khronos_uint64_t;
#else
typedef long long int          khronos_int64_t;
typedef unsigned long long int khronos_uint64_t;
#endif /* __arch64__ */
#define KHRONOS_SUPPORT_INT64 1
#define KHRONOS_SUPPORT_FLOAT 1

#elif 0

/*
 * Hypothetical platform with no float or int64 support
 */
typedef int          khronos_int32_t;
typedef unsigned int khronos_uint32_t;
#define KHRONOS_SUPPORT_INT64 0
#define KHRONOS_SUPPORT_FLOAT 0

#else

/*
 * Generic fallback
 */
#include <stdint.h>
typedef int32_t  khronos_int32_t;
typedef uint32_t khronos_uint32_t;
typedef int64_t  khronos_int64_t;
typedef uint64_t khronos_uint64_t;
#define KHRONOS_SUPPORT_INT64 1
#define KHRONOS_SUPPORT_FLOAT 1

#endif

/*
 * Types that are (so far) the same on all platforms
 */
typedef signed char        khronos_int8_t;
typedef unsigned char      khronos_uint8_t;
typedef signed short int   khronos_int16_t;
typedef unsigned short int khronos_uint16_t;

/*
 * Types that differ between LLP64 and LP64 architectures - in LLP64,
 * pointers are 64 bits, but 'long' is still 32 bits. Win64 appears
 * to be the only LLP64 architecture in current use.
 */
#ifdef KHRONOS_USE_INTPTR_T
typedef intptr_t  khronos_intptr_t;
typedef uintptr_t khronos_uintptr_t;
#elif defined(_WIN64)
typedef signed long long int   khronos_intptr_t;
typedef unsigned long long int khronos_uintptr_t;
#else
typedef signed long int   khronos_intptr_t;
typedef unsigned long int khronos_uintptr_t;
#endif

#if defined(_WIN64)
typedef signed long long int   khronos_ssize_t;
typedef unsigned long long int khronos_usize_t;
#else
typedef signed long int   khronos_ssize_t;
typedef unsigned long int khronos_usize_t;
#endif

#if KHRONOS_SUPPORT_FLOAT
/*
 * Float type
 */
typedef float khronos_float_t;
#endif

#if KHRONOS_SUPPORT_INT64
/* Time types
 *
 * These types can be used to represent a time interval in nanoseconds or
 * an absolute Unadjusted System Time.  Unadjusted System Time is the number
 * of nanoseconds since some arbitrary system event (e.g. since the last
 * time the system booted).  The Unadjusted System Time is an unsigned
 * 64 bit value that wraps back to 0 every 584 years.  Time intervals
 * may be either signed or unsigned.
 */
typedef khronos_uint64_t khronos_utime_nanoseconds_t;
typedef khronos_int64_t  khronos_stime_nanoseconds_t;
#endif

/*
 * Dummy value used to pad enum types to 32 bits.
 */
#ifndef KHRONOS_MAX_ENUM
#define KHRONOS_MAX_ENUM 0x7FFFFFFF
#endif

/*
 * Enumerated boolean type
 *
 * Values other than zero should be considered to be true.  Therefore
 * comparisons should not be made against KHRONOS_TRUE.
 */
typedef enum {
    KHRONOS_FALSE                   = 0,
    KHRONOS_TRUE                    = 1,
    KHRONOS_BOOLEAN_ENUM_FORCE_SIZE = KHRONOS_MAX_ENUM
} khronos_boolean_enum_t;

#endif /* __khrplatform_h_ */
typedef unsigned int     GLenum;
typedef unsigned char    GLboolean;
typedef unsigned int     GLbitfield;
typedef void             GLvoid;
typedef khronos_int8_t   GLbyte;
typedef khronos_uint8_t  GLubyte;
typedef khronos_int16_t  GLshort;
typedef khronos_uint16_t GLushort;
typedef int              GLint;
typedef unsigned int     GLuint;
typedef khronos_int32_t  GLclampx;
typedef int              GLsizei;
typedef khronos_float_t  GLfloat;
typedef khronos_float_t  GLclampf;
typedef double           GLdouble;
typedef double           GLclampd;
typedef void            *GLeglClientBufferEXT;
typedef void            *GLeglImageOES;
typedef char             GLchar;
typedef char             GLcharARB;
#ifdef __APPLE__
typedef void *GLhandleARB;
#else
typedef unsigned int GLhandleARB;
#endif
typedef khronos_uint16_t GLhalf;
typedef khronos_uint16_t GLhalfARB;
typedef khronos_int32_t  GLfixed;
#if defined(__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__) &&                                  \
    (__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ > 1060)
typedef khronos_intptr_t GLintptr;
#else
typedef khronos_intptr_t GLintptr;
#endif
#if defined(__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__) &&                                  \
    (__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ > 1060)
typedef khronos_intptr_t GLintptrARB;
#else
typedef khronos_intptr_t GLintptrARB;
#endif
#if defined(__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__) &&                                  \
    (__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ > 1060)
typedef khronos_ssize_t GLsizeiptr;
#else
typedef khronos_ssize_t GLsizeiptr;
#endif
#if defined(__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__) &&                                  \
    (__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ > 1060)
typedef khronos_ssize_t GLsizeiptrARB;
#else
typedef khronos_ssize_t GLsizeiptrARB;
#endif
typedef khronos_int64_t  GLint64;
typedef khronos_int64_t  GLint64EXT;
typedef khronos_uint64_t GLuint64;
typedef khronos_uint64_t GLuint64EXT;
typedef struct __GLsync *GLsync;
struct _cl_context;
struct _cl_event;
typedef void(SOIL_GLAD_API_PTR *GLDEBUGPROC)(
    GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length,
    const GLchar *message, const void *userParam
);
typedef void(SOIL_GLAD_API_PTR *GLDEBUGPROCARB)(
    GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length,
    const GLchar *message, const void *userParam
);
typedef void(SOIL_GLAD_API_PTR *GLDEBUGPROCKHR)(
    GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length,
    const GLchar *message, const void *userParam
);
typedef void(SOIL_GLAD_API_PTR *GLDEBUGPROCAMD)(
    GLuint id, GLenum category, GLenum severity, GLsizei length, const GLchar *message,
    void *userParam
);
typedef unsigned short GLhalfNV;
typedef GLintptr       GLvdpauSurfaceNV;
typedef void(SOIL_GLAD_API_PTR *GLVULKANPROCNV)(void);

#define GL_VERSION_1_0 1
SOIL_GLAD_API_CALL int SOIL_GLAD_GL_VERSION_1_0;
#define GL_VERSION_1_1 1
SOIL_GLAD_API_CALL int SOIL_GLAD_GL_VERSION_1_1;
#define GL_VERSION_1_2 1
SOIL_GLAD_API_CALL int SOIL_GLAD_GL_VERSION_1_2;
#define GL_VERSION_1_3 1
SOIL_GLAD_API_CALL int SOIL_GLAD_GL_VERSION_1_3;
#define GL_VERSION_1_4 1
SOIL_GLAD_API_CALL int SOIL_GLAD_GL_VERSION_1_4;
#define GL_VERSION_1_5 1
SOIL_GLAD_API_CALL int SOIL_GLAD_GL_VERSION_1_5;
#define GL_VERSION_2_0 1
SOIL_GLAD_API_CALL int SOIL_GLAD_GL_VERSION_2_0;
#define GL_VERSION_2_1 1
SOIL_GLAD_API_CALL int SOIL_GLAD_GL_VERSION_2_1;
#define GL_VERSION_3_0 1
SOIL_GLAD_API_CALL int SOIL_GLAD_GL_VERSION_3_0;
#define GL_VERSION_3_1 1
SOIL_GLAD_API_CALL int SOIL_GLAD_GL_VERSION_3_1;
#define GL_VERSION_3_2 1
SOIL_GLAD_API_CALL int SOIL_GLAD_GL_VERSION_3_2;
#define GL_VERSION_3_3 1
SOIL_GLAD_API_CALL int SOIL_GLAD_GL_VERSION_3_3;
#define GL_VERSION_4_0 1
SOIL_GLAD_API_CALL int SOIL_GLAD_GL_VERSION_4_0;
#define GL_VERSION_4_1 1
SOIL_GLAD_API_CALL int SOIL_GLAD_GL_VERSION_4_1;
#define GL_VERSION_4_2 1
SOIL_GLAD_API_CALL int SOIL_GLAD_GL_VERSION_4_2;
#define GL_VERSION_4_3 1
SOIL_GLAD_API_CALL int SOIL_GLAD_GL_VERSION_4_3;
#define GL_EXT_memory_object 1
SOIL_GLAD_API_CALL int SOIL_GLAD_GL_EXT_memory_object;
#define GL_EXT_memory_object_win32 1
SOIL_GLAD_API_CALL int SOIL_GLAD_GL_EXT_memory_object_win32;

typedef void(SOIL_GLAD_API_PTR *PFNGLACTIVESHADERPROGRAMPROC)(GLuint pipeline, GLuint program);
typedef void(SOIL_GLAD_API_PTR *PFNGLACTIVETEXTUREPROC)(GLenum texture);
typedef void(SOIL_GLAD_API_PTR *PFNGLATTACHSHADERPROC)(GLuint program, GLuint shader);
typedef void(SOIL_GLAD_API_PTR *PFNGLBEGINCONDITIONALRENDERPROC)(GLuint id, GLenum mode);
typedef void(SOIL_GLAD_API_PTR *PFNGLBEGINQUERYPROC)(GLenum target, GLuint id);
typedef void(SOIL_GLAD_API_PTR *PFNGLBEGINQUERYINDEXEDPROC)(
    GLenum target, GLuint index, GLuint id
);
typedef void(SOIL_GLAD_API_PTR *PFNGLBEGINTRANSFORMFEEDBACKPROC)(GLenum primitiveMode);
typedef void(SOIL_GLAD_API_PTR *PFNGLBINDATTRIBLOCATIONPROC)(
    GLuint program, GLuint index, const GLchar *name
);
typedef void(SOIL_GLAD_API_PTR *PFNGLBINDBUFFERPROC)(GLenum target, GLuint buffer);
typedef void(SOIL_GLAD_API_PTR *PFNGLBINDBUFFERBASEPROC)(
    GLenum target, GLuint index, GLuint buffer
);
typedef void(SOIL_GLAD_API_PTR *PFNGLBINDBUFFERRANGEPROC)(
    GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size
);
typedef void(SOIL_GLAD_API_PTR *PFNGLBINDFRAGDATALOCATIONPROC)(
    GLuint program, GLuint color, const GLchar *name
);
typedef void(SOIL_GLAD_API_PTR *PFNGLBINDFRAGDATALOCATIONINDEXEDPROC)(
    GLuint program, GLuint colorNumber, GLuint index, const GLchar *name
);
typedef void(SOIL_GLAD_API_PTR *PFNGLBINDFRAMEBUFFERPROC)(GLenum target, GLuint framebuffer);
typedef void(SOIL_GLAD_API_PTR *PFNGLBINDIMAGETEXTUREPROC)(
    GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access,
    GLenum format
);
typedef void(SOIL_GLAD_API_PTR *PFNGLBINDPROGRAMPIPELINEPROC)(GLuint pipeline);
typedef void(SOIL_GLAD_API_PTR *PFNGLBINDRENDERBUFFERPROC)(GLenum target, GLuint renderbuffer);
typedef void(SOIL_GLAD_API_PTR *PFNGLBINDSAMPLERPROC)(GLuint unit, GLuint sampler);
typedef void(SOIL_GLAD_API_PTR *PFNGLBINDTEXTUREPROC)(GLenum target, GLuint texture);
typedef void(SOIL_GLAD_API_PTR *PFNGLBINDTRANSFORMFEEDBACKPROC)(GLenum target, GLuint id);
typedef void(SOIL_GLAD_API_PTR *PFNGLBINDVERTEXARRAYPROC)(GLuint array);
typedef void(SOIL_GLAD_API_PTR *PFNGLBINDVERTEXBUFFERPROC)(
    GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride
);
typedef void(SOIL_GLAD_API_PTR *PFNGLBLENDCOLORPROC)(
    GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha
);
typedef void(SOIL_GLAD_API_PTR *PFNGLBLENDEQUATIONPROC)(GLenum mode);
typedef void(SOIL_GLAD_API_PTR *PFNGLBLENDEQUATIONSEPARATEPROC)(
    GLenum modeRGB, GLenum modeAlpha
);
typedef void(SOIL_GLAD_API_PTR *PFNGLBLENDEQUATIONSEPARATEIPROC)(
    GLuint buf, GLenum modeRGB, GLenum modeAlpha
);
typedef void(SOIL_GLAD_API_PTR *PFNGLBLENDEQUATIONIPROC)(GLuint buf, GLenum mode);
typedef void(SOIL_GLAD_API_PTR *PFNGLBLENDFUNCPROC)(GLenum sfactor, GLenum dfactor);
typedef void(SOIL_GLAD_API_PTR *PFNGLBLENDFUNCSEPARATEPROC)(
    GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha
);
typedef void(SOIL_GLAD_API_PTR *PFNGLBLENDFUNCSEPARATEIPROC)(
    GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha
);
typedef void(SOIL_GLAD_API_PTR *PFNGLBLENDFUNCIPROC)(GLuint buf, GLenum src, GLenum dst);
typedef void(SOIL_GLAD_API_PTR *PFNGLBLITFRAMEBUFFERPROC)(
    GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1,
    GLint dstY1, GLbitfield mask, GLenum filter
);
typedef void(SOIL_GLAD_API_PTR *PFNGLBUFFERDATAPROC)(
    GLenum target, GLsizeiptr size, const void *data, GLenum usage
);
typedef void(SOIL_GLAD_API_PTR *PFNGLBUFFERSTORAGEMEMEXTPROC)(
    GLenum target, GLsizeiptr size, GLuint memory, GLuint64 offset
);
typedef void(SOIL_GLAD_API_PTR *PFNGLBUFFERSUBDATAPROC)(
    GLenum target, GLintptr offset, GLsizeiptr size, const void *data
);
typedef GLenum(SOIL_GLAD_API_PTR *PFNGLCHECKFRAMEBUFFERSTATUSPROC)(GLenum target);
typedef void(SOIL_GLAD_API_PTR *PFNGLCLAMPCOLORPROC)(GLenum target, GLenum clamp);
typedef void(SOIL_GLAD_API_PTR *PFNGLCLEARPROC)(GLbitfield mask);
typedef void(SOIL_GLAD_API_PTR *PFNGLCLEARBUFFERDATAPROC)(
    GLenum target, GLenum internalformat, GLenum format, GLenum type, const void *data
);
typedef void(SOIL_GLAD_API_PTR *PFNGLCLEARBUFFERSUBDATAPROC)(
    GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format,
    GLenum type, const void *data
);
typedef void(SOIL_GLAD_API_PTR *PFNGLCLEARBUFFERFIPROC)(
    GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil
);
typedef void(SOIL_GLAD_API_PTR *PFNGLCLEARBUFFERFVPROC)(
    GLenum buffer, GLint drawbuffer, const GLfloat *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLCLEARBUFFERIVPROC)(
    GLenum buffer, GLint drawbuffer, const GLint *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLCLEARBUFFERUIVPROC)(
    GLenum buffer, GLint drawbuffer, const GLuint *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLCLEARCOLORPROC)(
    GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha
);
typedef void(SOIL_GLAD_API_PTR *PFNGLCLEARDEPTHPROC)(GLdouble depth);
typedef void(SOIL_GLAD_API_PTR *PFNGLCLEARDEPTHFPROC)(GLfloat d);
typedef void(SOIL_GLAD_API_PTR *PFNGLCLEARSTENCILPROC)(GLint s);
typedef GLenum(SOIL_GLAD_API_PTR *PFNGLCLIENTWAITSYNCPROC)(
    GLsync sync, GLbitfield flags, GLuint64 timeout
);
typedef void(SOIL_GLAD_API_PTR *PFNGLCOLORMASKPROC)(
    GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha
);
typedef void(SOIL_GLAD_API_PTR *PFNGLCOLORMASKIPROC)(
    GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a
);
typedef void(SOIL_GLAD_API_PTR *PFNGLCOMPILESHADERPROC)(GLuint shader);
typedef void(SOIL_GLAD_API_PTR *PFNGLCOMPRESSEDTEXIMAGE1DPROC)(
    GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border,
    GLsizei imageSize, const void *data
);
typedef void(SOIL_GLAD_API_PTR *PFNGLCOMPRESSEDTEXIMAGE2DPROC)(
    GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height,
    GLint border, GLsizei imageSize, const void *data
);
typedef void(SOIL_GLAD_API_PTR *PFNGLCOMPRESSEDTEXIMAGE3DPROC)(
    GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height,
    GLsizei depth, GLint border, GLsizei imageSize, const void *data
);
typedef void(SOIL_GLAD_API_PTR *PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC)(
    GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize,
    const void *data
);
typedef void(SOIL_GLAD_API_PTR *PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC)(
    GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height,
    GLenum format, GLsizei imageSize, const void *data
);
typedef void(SOIL_GLAD_API_PTR *PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC)(
    GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width,
    GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data
);
typedef void(SOIL_GLAD_API_PTR *PFNGLCOPYBUFFERSUBDATAPROC)(
    GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset,
    GLsizeiptr size
);
typedef void(SOIL_GLAD_API_PTR *PFNGLCOPYIMAGESUBDATAPROC)(
    GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ,
    GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ,
    GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth
);
typedef void(SOIL_GLAD_API_PTR *PFNGLCOPYTEXIMAGE1DPROC)(
    GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width,
    GLint border
);
typedef void(SOIL_GLAD_API_PTR *PFNGLCOPYTEXIMAGE2DPROC)(
    GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width,
    GLsizei height, GLint border
);
typedef void(SOIL_GLAD_API_PTR *PFNGLCOPYTEXSUBIMAGE1DPROC)(
    GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width
);
typedef void(SOIL_GLAD_API_PTR *PFNGLCOPYTEXSUBIMAGE2DPROC)(
    GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width,
    GLsizei height
);
typedef void(SOIL_GLAD_API_PTR *PFNGLCOPYTEXSUBIMAGE3DPROC)(
    GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y,
    GLsizei width, GLsizei height
);
typedef void(SOIL_GLAD_API_PTR *PFNGLCREATEMEMORYOBJECTSEXTPROC)(
    GLsizei n, GLuint *memoryObjects
);
typedef GLuint(SOIL_GLAD_API_PTR *PFNGLCREATEPROGRAMPROC)(void);
typedef GLuint(SOIL_GLAD_API_PTR *PFNGLCREATESHADERPROC)(GLenum type);
typedef GLuint(SOIL_GLAD_API_PTR *PFNGLCREATESHADERPROGRAMVPROC)(
    GLenum type, GLsizei count, const GLchar *const *strings
);
typedef void(SOIL_GLAD_API_PTR *PFNGLCULLFACEPROC)(GLenum mode);
typedef void(SOIL_GLAD_API_PTR *PFNGLDEBUGMESSAGECALLBACKPROC)(
    GLDEBUGPROC callback, const void *userParam
);
typedef void(SOIL_GLAD_API_PTR *PFNGLDEBUGMESSAGECONTROLPROC)(
    GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids,
    GLboolean enabled
);
typedef void(SOIL_GLAD_API_PTR *PFNGLDEBUGMESSAGEINSERTPROC)(
    GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf
);
typedef void(SOIL_GLAD_API_PTR *PFNGLDELETEBUFFERSPROC)(GLsizei n, const GLuint *buffers);
typedef void(SOIL_GLAD_API_PTR *PFNGLDELETEFRAMEBUFFERSPROC)(
    GLsizei n, const GLuint *framebuffers
);
typedef void(SOIL_GLAD_API_PTR *PFNGLDELETEMEMORYOBJECTSEXTPROC)(
    GLsizei n, const GLuint *memoryObjects
);
typedef void(SOIL_GLAD_API_PTR *PFNGLDELETEPROGRAMPROC)(GLuint program);
typedef void(SOIL_GLAD_API_PTR *PFNGLDELETEPROGRAMPIPELINESPROC)(
    GLsizei n, const GLuint *pipelines
);
typedef void(SOIL_GLAD_API_PTR *PFNGLDELETEQUERIESPROC)(GLsizei n, const GLuint *ids);
typedef void(SOIL_GLAD_API_PTR *PFNGLDELETERENDERBUFFERSPROC)(
    GLsizei n, const GLuint *renderbuffers
);
typedef void(SOIL_GLAD_API_PTR *PFNGLDELETESAMPLERSPROC)(GLsizei count, const GLuint *samplers);
typedef void(SOIL_GLAD_API_PTR *PFNGLDELETESHADERPROC)(GLuint shader);
typedef void(SOIL_GLAD_API_PTR *PFNGLDELETESYNCPROC)(GLsync sync);
typedef void(SOIL_GLAD_API_PTR *PFNGLDELETETEXTURESPROC)(GLsizei n, const GLuint *textures);
typedef void(SOIL_GLAD_API_PTR *PFNGLDELETETRANSFORMFEEDBACKSPROC)(
    GLsizei n, const GLuint *ids
);
typedef void(SOIL_GLAD_API_PTR *PFNGLDELETEVERTEXARRAYSPROC)(GLsizei n, const GLuint *arrays);
typedef void(SOIL_GLAD_API_PTR *PFNGLDEPTHFUNCPROC)(GLenum func);
typedef void(SOIL_GLAD_API_PTR *PFNGLDEPTHMASKPROC)(GLboolean flag);
typedef void(SOIL_GLAD_API_PTR *PFNGLDEPTHRANGEPROC)(GLdouble n, GLdouble f);
typedef void(SOIL_GLAD_API_PTR *PFNGLDEPTHRANGEARRAYVPROC)(
    GLuint first, GLsizei count, const GLdouble *v
);
typedef void(SOIL_GLAD_API_PTR *PFNGLDEPTHRANGEINDEXEDPROC)(
    GLuint index, GLdouble n, GLdouble f
);
typedef void(SOIL_GLAD_API_PTR *PFNGLDEPTHRANGEFPROC)(GLfloat n, GLfloat f);
typedef void(SOIL_GLAD_API_PTR *PFNGLDETACHSHADERPROC)(GLuint program, GLuint shader);
typedef void(SOIL_GLAD_API_PTR *PFNGLDISABLEPROC)(GLenum cap);
typedef void(SOIL_GLAD_API_PTR *PFNGLDISABLEVERTEXATTRIBARRAYPROC)(GLuint index);
typedef void(SOIL_GLAD_API_PTR *PFNGLDISABLEIPROC)(GLenum target, GLuint index);
typedef void(SOIL_GLAD_API_PTR *PFNGLDISPATCHCOMPUTEPROC)(
    GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z
);
typedef void(SOIL_GLAD_API_PTR *PFNGLDISPATCHCOMPUTEINDIRECTPROC)(GLintptr indirect);
typedef void(SOIL_GLAD_API_PTR *PFNGLDRAWARRAYSPROC)(GLenum mode, GLint first, GLsizei count);
typedef void(SOIL_GLAD_API_PTR *PFNGLDRAWARRAYSINDIRECTPROC)(GLenum mode, const void *indirect);
typedef void(SOIL_GLAD_API_PTR *PFNGLDRAWARRAYSINSTANCEDPROC)(
    GLenum mode, GLint first, GLsizei count, GLsizei instancecount
);
typedef void(SOIL_GLAD_API_PTR *PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC)(
    GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance
);
typedef void(SOIL_GLAD_API_PTR *PFNGLDRAWBUFFERPROC)(GLenum buf);
typedef void(SOIL_GLAD_API_PTR *PFNGLDRAWBUFFERSPROC)(GLsizei n, const GLenum *bufs);
typedef void(SOIL_GLAD_API_PTR *PFNGLDRAWELEMENTSPROC)(
    GLenum mode, GLsizei count, GLenum type, const void *indices
);
typedef void(SOIL_GLAD_API_PTR *PFNGLDRAWELEMENTSBASEVERTEXPROC)(
    GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex
);
typedef void(SOIL_GLAD_API_PTR *PFNGLDRAWELEMENTSINDIRECTPROC)(
    GLenum mode, GLenum type, const void *indirect
);
typedef void(SOIL_GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDPROC)(
    GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount
);
typedef void(SOIL_GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC)(
    GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount,
    GLuint baseinstance
);
typedef void(SOIL_GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC)(
    GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount,
    GLint basevertex
);
typedef void(SOIL_GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC)(
    GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount,
    GLint basevertex, GLuint baseinstance
);
typedef void(SOIL_GLAD_API_PTR *PFNGLDRAWRANGEELEMENTSPROC)(
    GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices
);
typedef void(SOIL_GLAD_API_PTR *PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC)(
    GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices,
    GLint basevertex
);
typedef void(SOIL_GLAD_API_PTR *PFNGLDRAWTRANSFORMFEEDBACKPROC)(GLenum mode, GLuint id);
typedef void(SOIL_GLAD_API_PTR *PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC)(
    GLenum mode, GLuint id, GLsizei instancecount
);
typedef void(SOIL_GLAD_API_PTR *PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC)(
    GLenum mode, GLuint id, GLuint stream
);
typedef void(SOIL_GLAD_API_PTR *PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC)(
    GLenum mode, GLuint id, GLuint stream, GLsizei instancecount
);
typedef void(SOIL_GLAD_API_PTR *PFNGLENABLEPROC)(GLenum cap);
typedef void(SOIL_GLAD_API_PTR *PFNGLENABLEVERTEXATTRIBARRAYPROC)(GLuint index);
typedef void(SOIL_GLAD_API_PTR *PFNGLENABLEIPROC)(GLenum target, GLuint index);
typedef void(SOIL_GLAD_API_PTR *PFNGLENDCONDITIONALRENDERPROC)(void);
typedef void(SOIL_GLAD_API_PTR *PFNGLENDQUERYPROC)(GLenum target);
typedef void(SOIL_GLAD_API_PTR *PFNGLENDQUERYINDEXEDPROC)(GLenum target, GLuint index);
typedef void(SOIL_GLAD_API_PTR *PFNGLENDTRANSFORMFEEDBACKPROC)(void);
typedef GLsync(SOIL_GLAD_API_PTR *PFNGLFENCESYNCPROC)(GLenum condition, GLbitfield flags);
typedef void(SOIL_GLAD_API_PTR *PFNGLFINISHPROC)(void);
typedef void(SOIL_GLAD_API_PTR *PFNGLFLUSHPROC)(void);
typedef void(SOIL_GLAD_API_PTR *PFNGLFLUSHMAPPEDBUFFERRANGEPROC)(
    GLenum target, GLintptr offset, GLsizeiptr length
);
typedef void(SOIL_GLAD_API_PTR *PFNGLFRAMEBUFFERPARAMETERIPROC)(
    GLenum target, GLenum pname, GLint param
);
typedef void(SOIL_GLAD_API_PTR *PFNGLFRAMEBUFFERRENDERBUFFERPROC)(
    GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer
);
typedef void(SOIL_GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTUREPROC)(
    GLenum target, GLenum attachment, GLuint texture, GLint level
);
typedef void(SOIL_GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURE1DPROC)(
    GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level
);
typedef void(SOIL_GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURE2DPROC)(
    GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level
);
typedef void(SOIL_GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURE3DPROC)(
    GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level,
    GLint zoffset
);
typedef void(SOIL_GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURELAYERPROC)(
    GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer
);
typedef void(SOIL_GLAD_API_PTR *PFNGLFRONTFACEPROC)(GLenum mode);
typedef void(SOIL_GLAD_API_PTR *PFNGLGENBUFFERSPROC)(GLsizei n, GLuint *buffers);
typedef void(SOIL_GLAD_API_PTR *PFNGLGENFRAMEBUFFERSPROC)(GLsizei n, GLuint *framebuffers);
typedef void(SOIL_GLAD_API_PTR *PFNGLGENPROGRAMPIPELINESPROC)(GLsizei n, GLuint *pipelines);
typedef void(SOIL_GLAD_API_PTR *PFNGLGENQUERIESPROC)(GLsizei n, GLuint *ids);
typedef void(SOIL_GLAD_API_PTR *PFNGLGENRENDERBUFFERSPROC)(GLsizei n, GLuint *renderbuffers);
typedef void(SOIL_GLAD_API_PTR *PFNGLGENSAMPLERSPROC)(GLsizei count, GLuint *samplers);
typedef void(SOIL_GLAD_API_PTR *PFNGLGENTEXTURESPROC)(GLsizei n, GLuint *textures);
typedef void(SOIL_GLAD_API_PTR *PFNGLGENTRANSFORMFEEDBACKSPROC)(GLsizei n, GLuint *ids);
typedef void(SOIL_GLAD_API_PTR *PFNGLGENVERTEXARRAYSPROC)(GLsizei n, GLuint *arrays);
typedef void(SOIL_GLAD_API_PTR *PFNGLGENERATEMIPMAPPROC)(GLenum target);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC)(
    GLuint program, GLuint bufferIndex, GLenum pname, GLint *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETACTIVEATTRIBPROC)(
    GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type,
    GLchar *name
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETACTIVESUBROUTINENAMEPROC)(
    GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei *length,
    GLchar *name
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC)(
    GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei *length,
    GLchar *name
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC)(
    GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETACTIVEUNIFORMPROC)(
    GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type,
    GLchar *name
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC)(
    GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length,
    GLchar *uniformBlockName
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETACTIVEUNIFORMBLOCKIVPROC)(
    GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETACTIVEUNIFORMNAMEPROC)(
    GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETACTIVEUNIFORMSIVPROC)(
    GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname,
    GLint *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETATTACHEDSHADERSPROC)(
    GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders
);
typedef GLint(SOIL_GLAD_API_PTR *PFNGLGETATTRIBLOCATIONPROC)(
    GLuint program, const GLchar *name
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETBOOLEANI_VPROC)(
    GLenum target, GLuint index, GLboolean *data
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETBOOLEANVPROC)(GLenum pname, GLboolean *data);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETBUFFERPARAMETERI64VPROC)(
    GLenum target, GLenum pname, GLint64 *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETBUFFERPARAMETERIVPROC)(
    GLenum target, GLenum pname, GLint *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETBUFFERPOINTERVPROC)(
    GLenum target, GLenum pname, void **params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETBUFFERSUBDATAPROC)(
    GLenum target, GLintptr offset, GLsizeiptr size, void *data
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETCOMPRESSEDTEXIMAGEPROC)(
    GLenum target, GLint level, void *img
);
typedef GLuint(SOIL_GLAD_API_PTR *PFNGLGETDEBUGMESSAGELOGPROC)(
    GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids,
    GLenum *severities, GLsizei *lengths, GLchar *messageLog
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETDOUBLEI_VPROC)(
    GLenum target, GLuint index, GLdouble *data
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETDOUBLEVPROC)(GLenum pname, GLdouble *data);
typedef GLenum(SOIL_GLAD_API_PTR *PFNGLGETERRORPROC)(void);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETFLOATI_VPROC)(
    GLenum target, GLuint index, GLfloat *data
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETFLOATVPROC)(GLenum pname, GLfloat *data);
typedef GLint(SOIL_GLAD_API_PTR *PFNGLGETFRAGDATAINDEXPROC)(GLuint program, const GLchar *name);
typedef GLint(SOIL_GLAD_API_PTR *PFNGLGETFRAGDATALOCATIONPROC)(
    GLuint program, const GLchar *name
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC)(
    GLenum target, GLenum attachment, GLenum pname, GLint *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETFRAMEBUFFERPARAMETERIVPROC)(
    GLenum target, GLenum pname, GLint *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETINTEGER64I_VPROC)(
    GLenum target, GLuint index, GLint64 *data
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETINTEGER64VPROC)(GLenum pname, GLint64 *data);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETINTEGERI_VPROC)(
    GLenum target, GLuint index, GLint *data
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETINTEGERVPROC)(GLenum pname, GLint *data);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETINTERNALFORMATI64VPROC)(
    GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint64 *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETINTERNALFORMATIVPROC)(
    GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETMEMORYOBJECTPARAMETERIVEXTPROC)(
    GLuint memoryObject, GLenum pname, GLint *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETMULTISAMPLEFVPROC)(
    GLenum pname, GLuint index, GLfloat *val
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETOBJECTLABELPROC)(
    GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETOBJECTPTRLABELPROC)(
    const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETPOINTERVPROC)(GLenum pname, void **params);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETPROGRAMBINARYPROC)(
    GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETPROGRAMINFOLOGPROC)(
    GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETPROGRAMINTERFACEIVPROC)(
    GLuint program, GLenum programInterface, GLenum pname, GLint *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETPROGRAMPIPELINEINFOLOGPROC)(
    GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETPROGRAMPIPELINEIVPROC)(
    GLuint pipeline, GLenum pname, GLint *params
);
typedef GLuint(SOIL_GLAD_API_PTR *PFNGLGETPROGRAMRESOURCEINDEXPROC)(
    GLuint program, GLenum programInterface, const GLchar *name
);
typedef GLint(SOIL_GLAD_API_PTR *PFNGLGETPROGRAMRESOURCELOCATIONPROC)(
    GLuint program, GLenum programInterface, const GLchar *name
);
typedef GLint(SOIL_GLAD_API_PTR *PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC)(
    GLuint program, GLenum programInterface, const GLchar *name
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETPROGRAMRESOURCENAMEPROC)(
    GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length,
    GLchar *name
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETPROGRAMRESOURCEIVPROC)(
    GLuint program, GLenum programInterface, GLuint index, GLsizei propCount,
    const GLenum *props, GLsizei count, GLsizei *length, GLint *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETPROGRAMSTAGEIVPROC)(
    GLuint program, GLenum shadertype, GLenum pname, GLint *values
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETPROGRAMIVPROC)(
    GLuint program, GLenum pname, GLint *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETQUERYINDEXEDIVPROC)(
    GLenum target, GLuint index, GLenum pname, GLint *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETQUERYOBJECTI64VPROC)(
    GLuint id, GLenum pname, GLint64 *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETQUERYOBJECTIVPROC)(
    GLuint id, GLenum pname, GLint *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETQUERYOBJECTUI64VPROC)(
    GLuint id, GLenum pname, GLuint64 *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETQUERYOBJECTUIVPROC)(
    GLuint id, GLenum pname, GLuint *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETQUERYIVPROC)(
    GLenum target, GLenum pname, GLint *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETRENDERBUFFERPARAMETERIVPROC)(
    GLenum target, GLenum pname, GLint *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERIIVPROC)(
    GLuint sampler, GLenum pname, GLint *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERIUIVPROC)(
    GLuint sampler, GLenum pname, GLuint *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERFVPROC)(
    GLuint sampler, GLenum pname, GLfloat *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERIVPROC)(
    GLuint sampler, GLenum pname, GLint *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETSHADERINFOLOGPROC)(
    GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETSHADERPRECISIONFORMATPROC)(
    GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETSHADERSOURCEPROC)(
    GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETSHADERIVPROC)(
    GLuint shader, GLenum pname, GLint *params
);
typedef const GLubyte *(SOIL_GLAD_API_PTR *PFNGLGETSTRINGPROC)(GLenum name);
typedef const GLubyte *(SOIL_GLAD_API_PTR *PFNGLGETSTRINGIPROC)(GLenum name, GLuint index);
typedef GLuint(SOIL_GLAD_API_PTR *PFNGLGETSUBROUTINEINDEXPROC)(
    GLuint program, GLenum shadertype, const GLchar *name
);
typedef GLint(SOIL_GLAD_API_PTR *PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC)(
    GLuint program, GLenum shadertype, const GLchar *name
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETSYNCIVPROC)(
    GLsync sync, GLenum pname, GLsizei count, GLsizei *length, GLint *values
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETTEXIMAGEPROC)(
    GLenum target, GLint level, GLenum format, GLenum type, void *pixels
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETTEXLEVELPARAMETERFVPROC)(
    GLenum target, GLint level, GLenum pname, GLfloat *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETTEXLEVELPARAMETERIVPROC)(
    GLenum target, GLint level, GLenum pname, GLint *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETTEXPARAMETERIIVPROC)(
    GLenum target, GLenum pname, GLint *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETTEXPARAMETERIUIVPROC)(
    GLenum target, GLenum pname, GLuint *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETTEXPARAMETERFVPROC)(
    GLenum target, GLenum pname, GLfloat *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETTEXPARAMETERIVPROC)(
    GLenum target, GLenum pname, GLint *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETTRANSFORMFEEDBACKVARYINGPROC)(
    GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type,
    GLchar *name
);
typedef GLuint(SOIL_GLAD_API_PTR *PFNGLGETUNIFORMBLOCKINDEXPROC)(
    GLuint program, const GLchar *uniformBlockName
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETUNIFORMINDICESPROC)(
    GLuint program, GLsizei uniformCount, const GLchar *const *uniformNames,
    GLuint *uniformIndices
);
typedef GLint(SOIL_GLAD_API_PTR *PFNGLGETUNIFORMLOCATIONPROC)(
    GLuint program, const GLchar *name
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETUNIFORMSUBROUTINEUIVPROC)(
    GLenum shadertype, GLint location, GLuint *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETUNIFORMDVPROC)(
    GLuint program, GLint location, GLdouble *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETUNIFORMFVPROC)(
    GLuint program, GLint location, GLfloat *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETUNIFORMIVPROC)(
    GLuint program, GLint location, GLint *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETUNIFORMUIVPROC)(
    GLuint program, GLint location, GLuint *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETUNSIGNEDBYTEI_VEXTPROC)(
    GLenum target, GLuint index, GLubyte *data
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETUNSIGNEDBYTEVEXTPROC)(GLenum pname, GLubyte *data);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETVERTEXATTRIBIIVPROC)(
    GLuint index, GLenum pname, GLint *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETVERTEXATTRIBIUIVPROC)(
    GLuint index, GLenum pname, GLuint *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETVERTEXATTRIBLDVPROC)(
    GLuint index, GLenum pname, GLdouble *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETVERTEXATTRIBPOINTERVPROC)(
    GLuint index, GLenum pname, void **pointer
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETVERTEXATTRIBDVPROC)(
    GLuint index, GLenum pname, GLdouble *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETVERTEXATTRIBFVPROC)(
    GLuint index, GLenum pname, GLfloat *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLGETVERTEXATTRIBIVPROC)(
    GLuint index, GLenum pname, GLint *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLHINTPROC)(GLenum target, GLenum mode);
typedef void(SOIL_GLAD_API_PTR *PFNGLIMPORTMEMORYWIN32HANDLEEXTPROC)(
    GLuint memory, GLuint64 size, GLenum handleType, void *handle
);
typedef void(SOIL_GLAD_API_PTR *PFNGLIMPORTMEMORYWIN32NAMEEXTPROC)(
    GLuint memory, GLuint64 size, GLenum handleType, const void *name
);
typedef void(SOIL_GLAD_API_PTR *PFNGLINVALIDATEBUFFERDATAPROC)(GLuint buffer);
typedef void(SOIL_GLAD_API_PTR *PFNGLINVALIDATEBUFFERSUBDATAPROC)(
    GLuint buffer, GLintptr offset, GLsizeiptr length
);
typedef void(SOIL_GLAD_API_PTR *PFNGLINVALIDATEFRAMEBUFFERPROC)(
    GLenum target, GLsizei numAttachments, const GLenum *attachments
);
typedef void(SOIL_GLAD_API_PTR *PFNGLINVALIDATESUBFRAMEBUFFERPROC)(
    GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y,
    GLsizei width, GLsizei height
);
typedef void(SOIL_GLAD_API_PTR *PFNGLINVALIDATETEXIMAGEPROC)(GLuint texture, GLint level);
typedef void(SOIL_GLAD_API_PTR *PFNGLINVALIDATETEXSUBIMAGEPROC)(
    GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width,
    GLsizei height, GLsizei depth
);
typedef GLboolean(SOIL_GLAD_API_PTR *PFNGLISBUFFERPROC)(GLuint buffer);
typedef GLboolean(SOIL_GLAD_API_PTR *PFNGLISENABLEDPROC)(GLenum cap);
typedef GLboolean(SOIL_GLAD_API_PTR *PFNGLISENABLEDIPROC)(GLenum target, GLuint index);
typedef GLboolean(SOIL_GLAD_API_PTR *PFNGLISFRAMEBUFFERPROC)(GLuint framebuffer);
typedef GLboolean(SOIL_GLAD_API_PTR *PFNGLISMEMORYOBJECTEXTPROC)(GLuint memoryObject);
typedef GLboolean(SOIL_GLAD_API_PTR *PFNGLISPROGRAMPROC)(GLuint program);
typedef GLboolean(SOIL_GLAD_API_PTR *PFNGLISPROGRAMPIPELINEPROC)(GLuint pipeline);
typedef GLboolean(SOIL_GLAD_API_PTR *PFNGLISQUERYPROC)(GLuint id);
typedef GLboolean(SOIL_GLAD_API_PTR *PFNGLISRENDERBUFFERPROC)(GLuint renderbuffer);
typedef GLboolean(SOIL_GLAD_API_PTR *PFNGLISSAMPLERPROC)(GLuint sampler);
typedef GLboolean(SOIL_GLAD_API_PTR *PFNGLISSHADERPROC)(GLuint shader);
typedef GLboolean(SOIL_GLAD_API_PTR *PFNGLISSYNCPROC)(GLsync sync);
typedef GLboolean(SOIL_GLAD_API_PTR *PFNGLISTEXTUREPROC)(GLuint texture);
typedef GLboolean(SOIL_GLAD_API_PTR *PFNGLISTRANSFORMFEEDBACKPROC)(GLuint id);
typedef GLboolean(SOIL_GLAD_API_PTR *PFNGLISVERTEXARRAYPROC)(GLuint array);
typedef void(SOIL_GLAD_API_PTR *PFNGLLINEWIDTHPROC)(GLfloat width);
typedef void(SOIL_GLAD_API_PTR *PFNGLLINKPROGRAMPROC)(GLuint program);
typedef void(SOIL_GLAD_API_PTR *PFNGLLOGICOPPROC)(GLenum opcode);
typedef void *(SOIL_GLAD_API_PTR *PFNGLMAPBUFFERPROC)(GLenum target, GLenum access);
typedef void *(SOIL_GLAD_API_PTR *PFNGLMAPBUFFERRANGEPROC)(
    GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access
);
typedef void(SOIL_GLAD_API_PTR *PFNGLMEMORYBARRIERPROC)(GLbitfield barriers);
typedef void(SOIL_GLAD_API_PTR *PFNGLMEMORYOBJECTPARAMETERIVEXTPROC)(
    GLuint memoryObject, GLenum pname, const GLint *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLMINSAMPLESHADINGPROC)(GLfloat value);
typedef void(SOIL_GLAD_API_PTR *PFNGLMULTIDRAWARRAYSPROC)(
    GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount
);
typedef void(SOIL_GLAD_API_PTR *PFNGLMULTIDRAWARRAYSINDIRECTPROC)(
    GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride
);
typedef void(SOIL_GLAD_API_PTR *PFNGLMULTIDRAWELEMENTSPROC)(
    GLenum mode, const GLsizei *count, GLenum type, const void *const *indices,
    GLsizei drawcount
);
typedef void(SOIL_GLAD_API_PTR *PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC)(
    GLenum mode, const GLsizei *count, GLenum type, const void *const *indices,
    GLsizei drawcount, const GLint *basevertex
);
typedef void(SOIL_GLAD_API_PTR *PFNGLMULTIDRAWELEMENTSINDIRECTPROC)(
    GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride
);
typedef void(SOIL_GLAD_API_PTR *PFNGLNAMEDBUFFERSTORAGEMEMEXTPROC)(
    GLuint buffer, GLsizeiptr size, GLuint memory, GLuint64 offset
);
typedef void(SOIL_GLAD_API_PTR *PFNGLOBJECTLABELPROC)(
    GLenum identifier, GLuint name, GLsizei length, const GLchar *label
);
typedef void(SOIL_GLAD_API_PTR *PFNGLOBJECTPTRLABELPROC)(
    const void *ptr, GLsizei length, const GLchar *label
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPATCHPARAMETERFVPROC)(GLenum pname, const GLfloat *values);
typedef void(SOIL_GLAD_API_PTR *PFNGLPATCHPARAMETERIPROC)(GLenum pname, GLint value);
typedef void(SOIL_GLAD_API_PTR *PFNGLPAUSETRANSFORMFEEDBACKPROC)(void);
typedef void(SOIL_GLAD_API_PTR *PFNGLPIXELSTOREFPROC)(GLenum pname, GLfloat param);
typedef void(SOIL_GLAD_API_PTR *PFNGLPIXELSTOREIPROC)(GLenum pname, GLint param);
typedef void(SOIL_GLAD_API_PTR *PFNGLPOINTPARAMETERFPROC)(GLenum pname, GLfloat param);
typedef void(SOIL_GLAD_API_PTR *PFNGLPOINTPARAMETERFVPROC)(GLenum pname, const GLfloat *params);
typedef void(SOIL_GLAD_API_PTR *PFNGLPOINTPARAMETERIPROC)(GLenum pname, GLint param);
typedef void(SOIL_GLAD_API_PTR *PFNGLPOINTPARAMETERIVPROC)(GLenum pname, const GLint *params);
typedef void(SOIL_GLAD_API_PTR *PFNGLPOINTSIZEPROC)(GLfloat size);
typedef void(SOIL_GLAD_API_PTR *PFNGLPOLYGONMODEPROC)(GLenum face, GLenum mode);
typedef void(SOIL_GLAD_API_PTR *PFNGLPOLYGONOFFSETPROC)(GLfloat factor, GLfloat units);
typedef void(SOIL_GLAD_API_PTR *PFNGLPOPDEBUGGROUPPROC)(void);
typedef void(SOIL_GLAD_API_PTR *PFNGLPRIMITIVERESTARTINDEXPROC)(GLuint index);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMBINARYPROC)(
    GLuint program, GLenum binaryFormat, const void *binary, GLsizei length
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMPARAMETERIPROC)(
    GLuint program, GLenum pname, GLint value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORM1DPROC)(
    GLuint program, GLint location, GLdouble v0
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORM1DVPROC)(
    GLuint program, GLint location, GLsizei count, const GLdouble *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORM1FPROC)(
    GLuint program, GLint location, GLfloat v0
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORM1FVPROC)(
    GLuint program, GLint location, GLsizei count, const GLfloat *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORM1IPROC)(
    GLuint program, GLint location, GLint v0
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORM1IVPROC)(
    GLuint program, GLint location, GLsizei count, const GLint *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORM1UIPROC)(
    GLuint program, GLint location, GLuint v0
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORM1UIVPROC)(
    GLuint program, GLint location, GLsizei count, const GLuint *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORM2DPROC)(
    GLuint program, GLint location, GLdouble v0, GLdouble v1
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORM2DVPROC)(
    GLuint program, GLint location, GLsizei count, const GLdouble *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORM2FPROC)(
    GLuint program, GLint location, GLfloat v0, GLfloat v1
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORM2FVPROC)(
    GLuint program, GLint location, GLsizei count, const GLfloat *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORM2IPROC)(
    GLuint program, GLint location, GLint v0, GLint v1
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORM2IVPROC)(
    GLuint program, GLint location, GLsizei count, const GLint *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORM2UIPROC)(
    GLuint program, GLint location, GLuint v0, GLuint v1
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORM2UIVPROC)(
    GLuint program, GLint location, GLsizei count, const GLuint *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORM3DPROC)(
    GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORM3DVPROC)(
    GLuint program, GLint location, GLsizei count, const GLdouble *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORM3FPROC)(
    GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORM3FVPROC)(
    GLuint program, GLint location, GLsizei count, const GLfloat *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORM3IPROC)(
    GLuint program, GLint location, GLint v0, GLint v1, GLint v2
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORM3IVPROC)(
    GLuint program, GLint location, GLsizei count, const GLint *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORM3UIPROC)(
    GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORM3UIVPROC)(
    GLuint program, GLint location, GLsizei count, const GLuint *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORM4DPROC)(
    GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORM4DVPROC)(
    GLuint program, GLint location, GLsizei count, const GLdouble *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORM4FPROC)(
    GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORM4FVPROC)(
    GLuint program, GLint location, GLsizei count, const GLfloat *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORM4IPROC)(
    GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORM4IVPROC)(
    GLuint program, GLint location, GLsizei count, const GLint *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORM4UIPROC)(
    GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORM4UIVPROC)(
    GLuint program, GLint location, GLsizei count, const GLuint *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2DVPROC)(
    GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2FVPROC)(
    GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC)(
    GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC)(
    GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC)(
    GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC)(
    GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3DVPROC)(
    GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3FVPROC)(
    GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC)(
    GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC)(
    GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC)(
    GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC)(
    GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4DVPROC)(
    GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4FVPROC)(
    GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC)(
    GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC)(
    GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC)(
    GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC)(
    GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLPROVOKINGVERTEXPROC)(GLenum mode);
typedef void(SOIL_GLAD_API_PTR *PFNGLPUSHDEBUGGROUPPROC)(
    GLenum source, GLuint id, GLsizei length, const GLchar *message
);
typedef void(SOIL_GLAD_API_PTR *PFNGLQUERYCOUNTERPROC)(GLuint id, GLenum target);
typedef void(SOIL_GLAD_API_PTR *PFNGLREADBUFFERPROC)(GLenum src);
typedef void(SOIL_GLAD_API_PTR *PFNGLREADPIXELSPROC)(
    GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels
);
typedef void(SOIL_GLAD_API_PTR *PFNGLRELEASESHADERCOMPILERPROC)(void);
typedef void(SOIL_GLAD_API_PTR *PFNGLRENDERBUFFERSTORAGEPROC)(
    GLenum target, GLenum internalformat, GLsizei width, GLsizei height
);
typedef void(SOIL_GLAD_API_PTR *PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC)(
    GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height
);
typedef void(SOIL_GLAD_API_PTR *PFNGLRESUMETRANSFORMFEEDBACKPROC)(void);
typedef void(SOIL_GLAD_API_PTR *PFNGLSAMPLECOVERAGEPROC)(GLfloat value, GLboolean invert);
typedef void(SOIL_GLAD_API_PTR *PFNGLSAMPLEMASKIPROC)(GLuint maskNumber, GLbitfield mask);
typedef void(SOIL_GLAD_API_PTR *PFNGLSAMPLERPARAMETERIIVPROC)(
    GLuint sampler, GLenum pname, const GLint *param
);
typedef void(SOIL_GLAD_API_PTR *PFNGLSAMPLERPARAMETERIUIVPROC)(
    GLuint sampler, GLenum pname, const GLuint *param
);
typedef void(SOIL_GLAD_API_PTR *PFNGLSAMPLERPARAMETERFPROC)(
    GLuint sampler, GLenum pname, GLfloat param
);
typedef void(SOIL_GLAD_API_PTR *PFNGLSAMPLERPARAMETERFVPROC)(
    GLuint sampler, GLenum pname, const GLfloat *param
);
typedef void(SOIL_GLAD_API_PTR *PFNGLSAMPLERPARAMETERIPROC)(
    GLuint sampler, GLenum pname, GLint param
);
typedef void(SOIL_GLAD_API_PTR *PFNGLSAMPLERPARAMETERIVPROC)(
    GLuint sampler, GLenum pname, const GLint *param
);
typedef void(SOIL_GLAD_API_PTR *PFNGLSCISSORPROC)(
    GLint x, GLint y, GLsizei width, GLsizei height
);
typedef void(SOIL_GLAD_API_PTR *PFNGLSCISSORARRAYVPROC)(
    GLuint first, GLsizei count, const GLint *v
);
typedef void(SOIL_GLAD_API_PTR *PFNGLSCISSORINDEXEDPROC)(
    GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height
);
typedef void(SOIL_GLAD_API_PTR *PFNGLSCISSORINDEXEDVPROC)(GLuint index, const GLint *v);
typedef void(SOIL_GLAD_API_PTR *PFNGLSHADERBINARYPROC)(
    GLsizei count, const GLuint *shaders, GLenum binaryFormat, const void *binary,
    GLsizei length
);
typedef void(SOIL_GLAD_API_PTR *PFNGLSHADERSOURCEPROC)(
    GLuint shader, GLsizei count, const GLchar *const *string, const GLint *length
);
typedef void(SOIL_GLAD_API_PTR *PFNGLSHADERSTORAGEBLOCKBINDINGPROC)(
    GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding
);
typedef void(SOIL_GLAD_API_PTR *PFNGLSTENCILFUNCPROC)(GLenum func, GLint ref, GLuint mask);
typedef void(SOIL_GLAD_API_PTR *PFNGLSTENCILFUNCSEPARATEPROC)(
    GLenum face, GLenum func, GLint ref, GLuint mask
);
typedef void(SOIL_GLAD_API_PTR *PFNGLSTENCILMASKPROC)(GLuint mask);
typedef void(SOIL_GLAD_API_PTR *PFNGLSTENCILMASKSEPARATEPROC)(GLenum face, GLuint mask);
typedef void(SOIL_GLAD_API_PTR *PFNGLSTENCILOPPROC)(GLenum fail, GLenum zfail, GLenum zpass);
typedef void(SOIL_GLAD_API_PTR *PFNGLSTENCILOPSEPARATEPROC)(
    GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass
);
typedef void(SOIL_GLAD_API_PTR *PFNGLTEXBUFFERPROC)(
    GLenum target, GLenum internalformat, GLuint buffer
);
typedef void(SOIL_GLAD_API_PTR *PFNGLTEXBUFFERRANGEPROC)(
    GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size
);
typedef void(SOIL_GLAD_API_PTR *PFNGLTEXIMAGE1DPROC)(
    GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border,
    GLenum format, GLenum type, const void *pixels
);
typedef void(SOIL_GLAD_API_PTR *PFNGLTEXIMAGE2DPROC)(
    GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height,
    GLint border, GLenum format, GLenum type, const void *pixels
);
typedef void(SOIL_GLAD_API_PTR *PFNGLTEXIMAGE2DMULTISAMPLEPROC)(
    GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height,
    GLboolean fixedsamplelocations
);
typedef void(SOIL_GLAD_API_PTR *PFNGLTEXIMAGE3DPROC)(
    GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height,
    GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels
);
typedef void(SOIL_GLAD_API_PTR *PFNGLTEXIMAGE3DMULTISAMPLEPROC)(
    GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height,
    GLsizei depth, GLboolean fixedsamplelocations
);
typedef void(SOIL_GLAD_API_PTR *PFNGLTEXPARAMETERIIVPROC)(
    GLenum target, GLenum pname, const GLint *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLTEXPARAMETERIUIVPROC)(
    GLenum target, GLenum pname, const GLuint *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLTEXPARAMETERFPROC)(
    GLenum target, GLenum pname, GLfloat param
);
typedef void(SOIL_GLAD_API_PTR *PFNGLTEXPARAMETERFVPROC)(
    GLenum target, GLenum pname, const GLfloat *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLTEXPARAMETERIPROC)(
    GLenum target, GLenum pname, GLint param
);
typedef void(SOIL_GLAD_API_PTR *PFNGLTEXPARAMETERIVPROC)(
    GLenum target, GLenum pname, const GLint *params
);
typedef void(SOIL_GLAD_API_PTR *PFNGLTEXSTORAGE1DPROC)(
    GLenum target, GLsizei levels, GLenum internalformat, GLsizei width
);
typedef void(SOIL_GLAD_API_PTR *PFNGLTEXSTORAGE2DPROC)(
    GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height
);
typedef void(SOIL_GLAD_API_PTR *PFNGLTEXSTORAGE2DMULTISAMPLEPROC)(
    GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height,
    GLboolean fixedsamplelocations
);
typedef void(SOIL_GLAD_API_PTR *PFNGLTEXSTORAGE3DPROC)(
    GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height,
    GLsizei depth
);
typedef void(SOIL_GLAD_API_PTR *PFNGLTEXSTORAGE3DMULTISAMPLEPROC)(
    GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height,
    GLsizei depth, GLboolean fixedsamplelocations
);
typedef void(SOIL_GLAD_API_PTR *PFNGLTEXSTORAGEMEM1DEXTPROC)(
    GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLuint memory,
    GLuint64 offset
);
typedef void(SOIL_GLAD_API_PTR *PFNGLTEXSTORAGEMEM2DEXTPROC)(
    GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height,
    GLuint memory, GLuint64 offset
);
typedef void(SOIL_GLAD_API_PTR *PFNGLTEXSTORAGEMEM2DMULTISAMPLEEXTPROC)(
    GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height,
    GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset
);
typedef void(SOIL_GLAD_API_PTR *PFNGLTEXSTORAGEMEM3DEXTPROC)(
    GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height,
    GLsizei depth, GLuint memory, GLuint64 offset
);
typedef void(SOIL_GLAD_API_PTR *PFNGLTEXSTORAGEMEM3DMULTISAMPLEEXTPROC)(
    GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height,
    GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset
);
typedef void(SOIL_GLAD_API_PTR *PFNGLTEXSUBIMAGE1DPROC)(
    GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type,
    const void *pixels
);
typedef void(SOIL_GLAD_API_PTR *PFNGLTEXSUBIMAGE2DPROC)(
    GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height,
    GLenum format, GLenum type, const void *pixels
);
typedef void(SOIL_GLAD_API_PTR *PFNGLTEXSUBIMAGE3DPROC)(
    GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width,
    GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels
);
typedef void(SOIL_GLAD_API_PTR *PFNGLTEXTURESTORAGEMEM1DEXTPROC)(
    GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLuint memory,
    GLuint64 offset
);
typedef void(SOIL_GLAD_API_PTR *PFNGLTEXTURESTORAGEMEM2DEXTPROC)(
    GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height,
    GLuint memory, GLuint64 offset
);
typedef void(SOIL_GLAD_API_PTR *PFNGLTEXTURESTORAGEMEM2DMULTISAMPLEEXTPROC)(
    GLuint texture, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height,
    GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset
);
typedef void(SOIL_GLAD_API_PTR *PFNGLTEXTURESTORAGEMEM3DEXTPROC)(
    GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height,
    GLsizei depth, GLuint memory, GLuint64 offset
);
typedef void(SOIL_GLAD_API_PTR *PFNGLTEXTURESTORAGEMEM3DMULTISAMPLEEXTPROC)(
    GLuint texture, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height,
    GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset
);
typedef void(SOIL_GLAD_API_PTR *PFNGLTEXTUREVIEWPROC)(
    GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel,
    GLuint numlevels, GLuint minlayer, GLuint numlayers
);
typedef void(SOIL_GLAD_API_PTR *PFNGLTRANSFORMFEEDBACKVARYINGSPROC)(
    GLuint program, GLsizei count, const GLchar *const *varyings, GLenum bufferMode
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORM1DPROC)(GLint location, GLdouble x);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORM1DVPROC)(
    GLint location, GLsizei count, const GLdouble *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORM1FPROC)(GLint location, GLfloat v0);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORM1FVPROC)(
    GLint location, GLsizei count, const GLfloat *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORM1IPROC)(GLint location, GLint v0);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORM1IVPROC)(
    GLint location, GLsizei count, const GLint *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORM1UIPROC)(GLint location, GLuint v0);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORM1UIVPROC)(
    GLint location, GLsizei count, const GLuint *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORM2DPROC)(GLint location, GLdouble x, GLdouble y);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORM2DVPROC)(
    GLint location, GLsizei count, const GLdouble *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORM2FPROC)(GLint location, GLfloat v0, GLfloat v1);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORM2FVPROC)(
    GLint location, GLsizei count, const GLfloat *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORM2IPROC)(GLint location, GLint v0, GLint v1);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORM2IVPROC)(
    GLint location, GLsizei count, const GLint *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORM2UIPROC)(GLint location, GLuint v0, GLuint v1);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORM2UIVPROC)(
    GLint location, GLsizei count, const GLuint *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORM3DPROC)(
    GLint location, GLdouble x, GLdouble y, GLdouble z
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORM3DVPROC)(
    GLint location, GLsizei count, const GLdouble *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORM3FPROC)(
    GLint location, GLfloat v0, GLfloat v1, GLfloat v2
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORM3FVPROC)(
    GLint location, GLsizei count, const GLfloat *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORM3IPROC)(
    GLint location, GLint v0, GLint v1, GLint v2
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORM3IVPROC)(
    GLint location, GLsizei count, const GLint *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORM3UIPROC)(
    GLint location, GLuint v0, GLuint v1, GLuint v2
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORM3UIVPROC)(
    GLint location, GLsizei count, const GLuint *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORM4DPROC)(
    GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORM4DVPROC)(
    GLint location, GLsizei count, const GLdouble *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORM4FPROC)(
    GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORM4FVPROC)(
    GLint location, GLsizei count, const GLfloat *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORM4IPROC)(
    GLint location, GLint v0, GLint v1, GLint v2, GLint v3
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORM4IVPROC)(
    GLint location, GLsizei count, const GLint *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORM4UIPROC)(
    GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORM4UIVPROC)(
    GLint location, GLsizei count, const GLuint *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORMBLOCKBINDINGPROC)(
    GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORMMATRIX2DVPROC)(
    GLint location, GLsizei count, GLboolean transpose, const GLdouble *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORMMATRIX2FVPROC)(
    GLint location, GLsizei count, GLboolean transpose, const GLfloat *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORMMATRIX2X3DVPROC)(
    GLint location, GLsizei count, GLboolean transpose, const GLdouble *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORMMATRIX2X3FVPROC)(
    GLint location, GLsizei count, GLboolean transpose, const GLfloat *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORMMATRIX2X4DVPROC)(
    GLint location, GLsizei count, GLboolean transpose, const GLdouble *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORMMATRIX2X4FVPROC)(
    GLint location, GLsizei count, GLboolean transpose, const GLfloat *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORMMATRIX3DVPROC)(
    GLint location, GLsizei count, GLboolean transpose, const GLdouble *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORMMATRIX3FVPROC)(
    GLint location, GLsizei count, GLboolean transpose, const GLfloat *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORMMATRIX3X2DVPROC)(
    GLint location, GLsizei count, GLboolean transpose, const GLdouble *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORMMATRIX3X2FVPROC)(
    GLint location, GLsizei count, GLboolean transpose, const GLfloat *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORMMATRIX3X4DVPROC)(
    GLint location, GLsizei count, GLboolean transpose, const GLdouble *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORMMATRIX3X4FVPROC)(
    GLint location, GLsizei count, GLboolean transpose, const GLfloat *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORMMATRIX4DVPROC)(
    GLint location, GLsizei count, GLboolean transpose, const GLdouble *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORMMATRIX4FVPROC)(
    GLint location, GLsizei count, GLboolean transpose, const GLfloat *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORMMATRIX4X2DVPROC)(
    GLint location, GLsizei count, GLboolean transpose, const GLdouble *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORMMATRIX4X2FVPROC)(
    GLint location, GLsizei count, GLboolean transpose, const GLfloat *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORMMATRIX4X3DVPROC)(
    GLint location, GLsizei count, GLboolean transpose, const GLdouble *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORMMATRIX4X3FVPROC)(
    GLint location, GLsizei count, GLboolean transpose, const GLfloat *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLUNIFORMSUBROUTINESUIVPROC)(
    GLenum shadertype, GLsizei count, const GLuint *indices
);
typedef GLboolean(SOIL_GLAD_API_PTR *PFNGLUNMAPBUFFERPROC)(GLenum target);
typedef void(SOIL_GLAD_API_PTR *PFNGLUSEPROGRAMPROC)(GLuint program);
typedef void(SOIL_GLAD_API_PTR *PFNGLUSEPROGRAMSTAGESPROC)(
    GLuint pipeline, GLbitfield stages, GLuint program
);
typedef void(SOIL_GLAD_API_PTR *PFNGLVALIDATEPROGRAMPROC)(GLuint program);
typedef void(SOIL_GLAD_API_PTR *PFNGLVALIDATEPROGRAMPIPELINEPROC)(GLuint pipeline);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIB1DPROC)(GLuint index, GLdouble x);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIB1DVPROC)(GLuint index, const GLdouble *v);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIB1FPROC)(GLuint index, GLfloat x);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIB1FVPROC)(GLuint index, const GLfloat *v);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIB1SPROC)(GLuint index, GLshort x);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIB1SVPROC)(GLuint index, const GLshort *v);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIB2DPROC)(GLuint index, GLdouble x, GLdouble y);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIB2DVPROC)(GLuint index, const GLdouble *v);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIB2FPROC)(GLuint index, GLfloat x, GLfloat y);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIB2FVPROC)(GLuint index, const GLfloat *v);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIB2SPROC)(GLuint index, GLshort x, GLshort y);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIB2SVPROC)(GLuint index, const GLshort *v);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIB3DPROC)(
    GLuint index, GLdouble x, GLdouble y, GLdouble z
);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIB3DVPROC)(GLuint index, const GLdouble *v);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIB3FPROC)(
    GLuint index, GLfloat x, GLfloat y, GLfloat z
);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIB3FVPROC)(GLuint index, const GLfloat *v);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIB3SPROC)(
    GLuint index, GLshort x, GLshort y, GLshort z
);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIB3SVPROC)(GLuint index, const GLshort *v);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIB4NBVPROC)(GLuint index, const GLbyte *v);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIB4NIVPROC)(GLuint index, const GLint *v);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIB4NSVPROC)(GLuint index, const GLshort *v);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIB4NUBPROC)(
    GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w
);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIB4NUBVPROC)(GLuint index, const GLubyte *v);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIB4NUIVPROC)(GLuint index, const GLuint *v);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIB4NUSVPROC)(GLuint index, const GLushort *v);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIB4BVPROC)(GLuint index, const GLbyte *v);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIB4DPROC)(
    GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w
);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIB4DVPROC)(GLuint index, const GLdouble *v);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIB4FPROC)(
    GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w
);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIB4FVPROC)(GLuint index, const GLfloat *v);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIB4IVPROC)(GLuint index, const GLint *v);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIB4SPROC)(
    GLuint index, GLshort x, GLshort y, GLshort z, GLshort w
);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIB4SVPROC)(GLuint index, const GLshort *v);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIB4UBVPROC)(GLuint index, const GLubyte *v);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIB4UIVPROC)(GLuint index, const GLuint *v);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIB4USVPROC)(GLuint index, const GLushort *v);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBBINDINGPROC)(
    GLuint attribindex, GLuint bindingindex
);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBDIVISORPROC)(GLuint index, GLuint divisor);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBFORMATPROC)(
    GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset
);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBI1IPROC)(GLuint index, GLint x);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBI1IVPROC)(GLuint index, const GLint *v);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBI1UIPROC)(GLuint index, GLuint x);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBI1UIVPROC)(GLuint index, const GLuint *v);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBI2IPROC)(GLuint index, GLint x, GLint y);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBI2IVPROC)(GLuint index, const GLint *v);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBI2UIPROC)(GLuint index, GLuint x, GLuint y);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBI2UIVPROC)(GLuint index, const GLuint *v);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBI3IPROC)(
    GLuint index, GLint x, GLint y, GLint z
);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBI3IVPROC)(GLuint index, const GLint *v);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBI3UIPROC)(
    GLuint index, GLuint x, GLuint y, GLuint z
);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBI3UIVPROC)(GLuint index, const GLuint *v);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBI4BVPROC)(GLuint index, const GLbyte *v);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBI4IPROC)(
    GLuint index, GLint x, GLint y, GLint z, GLint w
);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBI4IVPROC)(GLuint index, const GLint *v);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBI4SVPROC)(GLuint index, const GLshort *v);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBI4UBVPROC)(GLuint index, const GLubyte *v);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBI4UIPROC)(
    GLuint index, GLuint x, GLuint y, GLuint z, GLuint w
);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBI4UIVPROC)(GLuint index, const GLuint *v);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBI4USVPROC)(GLuint index, const GLushort *v);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBIFORMATPROC)(
    GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset
);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBIPOINTERPROC)(
    GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer
);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBL1DPROC)(GLuint index, GLdouble x);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBL1DVPROC)(GLuint index, const GLdouble *v);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBL2DPROC)(GLuint index, GLdouble x, GLdouble y);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBL2DVPROC)(GLuint index, const GLdouble *v);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBL3DPROC)(
    GLuint index, GLdouble x, GLdouble y, GLdouble z
);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBL3DVPROC)(GLuint index, const GLdouble *v);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBL4DPROC)(
    GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w
);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBL4DVPROC)(GLuint index, const GLdouble *v);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBLFORMATPROC)(
    GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset
);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBLPOINTERPROC)(
    GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer
);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBP1UIPROC)(
    GLuint index, GLenum type, GLboolean normalized, GLuint value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBP1UIVPROC)(
    GLuint index, GLenum type, GLboolean normalized, const GLuint *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBP2UIPROC)(
    GLuint index, GLenum type, GLboolean normalized, GLuint value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBP2UIVPROC)(
    GLuint index, GLenum type, GLboolean normalized, const GLuint *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBP3UIPROC)(
    GLuint index, GLenum type, GLboolean normalized, GLuint value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBP3UIVPROC)(
    GLuint index, GLenum type, GLboolean normalized, const GLuint *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBP4UIPROC)(
    GLuint index, GLenum type, GLboolean normalized, GLuint value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBP4UIVPROC)(
    GLuint index, GLenum type, GLboolean normalized, const GLuint *value
);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXATTRIBPOINTERPROC)(
    GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride,
    const void *pointer
);
typedef void(SOIL_GLAD_API_PTR *PFNGLVERTEXBINDINGDIVISORPROC)(
    GLuint bindingindex, GLuint divisor
);
typedef void(SOIL_GLAD_API_PTR *PFNGLVIEWPORTPROC)(
    GLint x, GLint y, GLsizei width, GLsizei height
);
typedef void(SOIL_GLAD_API_PTR *PFNGLVIEWPORTARRAYVPROC)(
    GLuint first, GLsizei count, const GLfloat *v
);
typedef void(SOIL_GLAD_API_PTR *PFNGLVIEWPORTINDEXEDFPROC)(
    GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h
);
typedef void(SOIL_GLAD_API_PTR *PFNGLVIEWPORTINDEXEDFVPROC)(GLuint index, const GLfloat *v);
typedef void(SOIL_GLAD_API_PTR *PFNGLWAITSYNCPROC)(
    GLsync sync, GLbitfield flags, GLuint64 timeout
);

SOIL_GLAD_API_CALL PFNGLACTIVESHADERPROGRAMPROC soil_glad_glActiveShaderProgram;
#define glActiveShaderProgram soil_glad_glActiveShaderProgram
SOIL_GLAD_API_CALL PFNGLACTIVETEXTUREPROC soil_glad_glActiveTexture;
#define glActiveTexture soil_glad_glActiveTexture
SOIL_GLAD_API_CALL PFNGLATTACHSHADERPROC soil_glad_glAttachShader;
#define glAttachShader soil_glad_glAttachShader
SOIL_GLAD_API_CALL PFNGLBEGINCONDITIONALRENDERPROC soil_glad_glBeginConditionalRender;
#define glBeginConditionalRender soil_glad_glBeginConditionalRender
SOIL_GLAD_API_CALL PFNGLBEGINQUERYPROC soil_glad_glBeginQuery;
#define glBeginQuery soil_glad_glBeginQuery
SOIL_GLAD_API_CALL PFNGLBEGINQUERYINDEXEDPROC soil_glad_glBeginQueryIndexed;
#define glBeginQueryIndexed soil_glad_glBeginQueryIndexed
SOIL_GLAD_API_CALL PFNGLBEGINTRANSFORMFEEDBACKPROC soil_glad_glBeginTransformFeedback;
#define glBeginTransformFeedback soil_glad_glBeginTransformFeedback
SOIL_GLAD_API_CALL PFNGLBINDATTRIBLOCATIONPROC soil_glad_glBindAttribLocation;
#define glBindAttribLocation soil_glad_glBindAttribLocation
SOIL_GLAD_API_CALL PFNGLBINDBUFFERPROC soil_glad_glBindBuffer;
#define glBindBuffer soil_glad_glBindBuffer
SOIL_GLAD_API_CALL PFNGLBINDBUFFERBASEPROC soil_glad_glBindBufferBase;
#define glBindBufferBase soil_glad_glBindBufferBase
SOIL_GLAD_API_CALL PFNGLBINDBUFFERRANGEPROC soil_glad_glBindBufferRange;
#define glBindBufferRange soil_glad_glBindBufferRange
SOIL_GLAD_API_CALL PFNGLBINDFRAGDATALOCATIONPROC soil_glad_glBindFragDataLocation;
#define glBindFragDataLocation soil_glad_glBindFragDataLocation
SOIL_GLAD_API_CALL PFNGLBINDFRAGDATALOCATIONINDEXEDPROC soil_glad_glBindFragDataLocationIndexed;
#define glBindFragDataLocationIndexed soil_glad_glBindFragDataLocationIndexed
SOIL_GLAD_API_CALL PFNGLBINDFRAMEBUFFERPROC soil_glad_glBindFramebuffer;
#define glBindFramebuffer soil_glad_glBindFramebuffer
SOIL_GLAD_API_CALL PFNGLBINDIMAGETEXTUREPROC soil_glad_glBindImageTexture;
#define glBindImageTexture soil_glad_glBindImageTexture
SOIL_GLAD_API_CALL PFNGLBINDPROGRAMPIPELINEPROC soil_glad_glBindProgramPipeline;
#define glBindProgramPipeline soil_glad_glBindProgramPipeline
SOIL_GLAD_API_CALL PFNGLBINDRENDERBUFFERPROC soil_glad_glBindRenderbuffer;
#define glBindRenderbuffer soil_glad_glBindRenderbuffer
SOIL_GLAD_API_CALL PFNGLBINDSAMPLERPROC soil_glad_glBindSampler;
#define glBindSampler soil_glad_glBindSampler
SOIL_GLAD_API_CALL PFNGLBINDTEXTUREPROC soil_glad_glBindTexture;
#define glBindTexture soil_glad_glBindTexture
SOIL_GLAD_API_CALL PFNGLBINDTRANSFORMFEEDBACKPROC soil_glad_glBindTransformFeedback;
#define glBindTransformFeedback soil_glad_glBindTransformFeedback
SOIL_GLAD_API_CALL PFNGLBINDVERTEXARRAYPROC soil_glad_glBindVertexArray;
#define glBindVertexArray soil_glad_glBindVertexArray
SOIL_GLAD_API_CALL PFNGLBINDVERTEXBUFFERPROC soil_glad_glBindVertexBuffer;
#define glBindVertexBuffer soil_glad_glBindVertexBuffer
SOIL_GLAD_API_CALL PFNGLBLENDCOLORPROC soil_glad_glBlendColor;
#define glBlendColor soil_glad_glBlendColor
SOIL_GLAD_API_CALL PFNGLBLENDEQUATIONPROC soil_glad_glBlendEquation;
#define glBlendEquation soil_glad_glBlendEquation
SOIL_GLAD_API_CALL PFNGLBLENDEQUATIONSEPARATEPROC soil_glad_glBlendEquationSeparate;
#define glBlendEquationSeparate soil_glad_glBlendEquationSeparate
SOIL_GLAD_API_CALL PFNGLBLENDEQUATIONSEPARATEIPROC soil_glad_glBlendEquationSeparatei;
#define glBlendEquationSeparatei soil_glad_glBlendEquationSeparatei
SOIL_GLAD_API_CALL PFNGLBLENDEQUATIONIPROC soil_glad_glBlendEquationi;
#define glBlendEquationi soil_glad_glBlendEquationi
SOIL_GLAD_API_CALL PFNGLBLENDFUNCPROC soil_glad_glBlendFunc;
#define glBlendFunc soil_glad_glBlendFunc
SOIL_GLAD_API_CALL PFNGLBLENDFUNCSEPARATEPROC soil_glad_glBlendFuncSeparate;
#define glBlendFuncSeparate soil_glad_glBlendFuncSeparate
SOIL_GLAD_API_CALL PFNGLBLENDFUNCSEPARATEIPROC soil_glad_glBlendFuncSeparatei;
#define glBlendFuncSeparatei soil_glad_glBlendFuncSeparatei
SOIL_GLAD_API_CALL PFNGLBLENDFUNCIPROC soil_glad_glBlendFunci;
#define glBlendFunci soil_glad_glBlendFunci
SOIL_GLAD_API_CALL PFNGLBLITFRAMEBUFFERPROC soil_glad_glBlitFramebuffer;
#define glBlitFramebuffer soil_glad_glBlitFramebuffer
SOIL_GLAD_API_CALL PFNGLBUFFERDATAPROC soil_glad_glBufferData;
#define glBufferData soil_glad_glBufferData
SOIL_GLAD_API_CALL PFNGLBUFFERSTORAGEMEMEXTPROC soil_glad_glBufferStorageMemEXT;
#define glBufferStorageMemEXT soil_glad_glBufferStorageMemEXT
SOIL_GLAD_API_CALL PFNGLBUFFERSUBDATAPROC soil_glad_glBufferSubData;
#define glBufferSubData soil_glad_glBufferSubData
SOIL_GLAD_API_CALL PFNGLCHECKFRAMEBUFFERSTATUSPROC soil_glad_glCheckFramebufferStatus;
#define glCheckFramebufferStatus soil_glad_glCheckFramebufferStatus
SOIL_GLAD_API_CALL PFNGLCLAMPCOLORPROC soil_glad_glClampColor;
#define glClampColor soil_glad_glClampColor
SOIL_GLAD_API_CALL PFNGLCLEARPROC soil_glad_glClear;
#define glClear soil_glad_glClear
SOIL_GLAD_API_CALL PFNGLCLEARBUFFERDATAPROC soil_glad_glClearBufferData;
#define glClearBufferData soil_glad_glClearBufferData
SOIL_GLAD_API_CALL PFNGLCLEARBUFFERSUBDATAPROC soil_glad_glClearBufferSubData;
#define glClearBufferSubData soil_glad_glClearBufferSubData
SOIL_GLAD_API_CALL PFNGLCLEARBUFFERFIPROC soil_glad_glClearBufferfi;
#define glClearBufferfi soil_glad_glClearBufferfi
SOIL_GLAD_API_CALL PFNGLCLEARBUFFERFVPROC soil_glad_glClearBufferfv;
#define glClearBufferfv soil_glad_glClearBufferfv
SOIL_GLAD_API_CALL PFNGLCLEARBUFFERIVPROC soil_glad_glClearBufferiv;
#define glClearBufferiv soil_glad_glClearBufferiv
SOIL_GLAD_API_CALL PFNGLCLEARBUFFERUIVPROC soil_glad_glClearBufferuiv;
#define glClearBufferuiv soil_glad_glClearBufferuiv
SOIL_GLAD_API_CALL PFNGLCLEARCOLORPROC soil_glad_glClearColor;
#define glClearColor soil_glad_glClearColor
SOIL_GLAD_API_CALL PFNGLCLEARDEPTHPROC soil_glad_glClearDepth;
#define glClearDepth soil_glad_glClearDepth
SOIL_GLAD_API_CALL PFNGLCLEARDEPTHFPROC soil_glad_glClearDepthf;
#define glClearDepthf soil_glad_glClearDepthf
SOIL_GLAD_API_CALL PFNGLCLEARSTENCILPROC soil_glad_glClearStencil;
#define glClearStencil soil_glad_glClearStencil
SOIL_GLAD_API_CALL PFNGLCLIENTWAITSYNCPROC soil_glad_glClientWaitSync;
#define glClientWaitSync soil_glad_glClientWaitSync
SOIL_GLAD_API_CALL PFNGLCOLORMASKPROC soil_glad_glColorMask;
#define glColorMask soil_glad_glColorMask
SOIL_GLAD_API_CALL PFNGLCOLORMASKIPROC soil_glad_glColorMaski;
#define glColorMaski soil_glad_glColorMaski
SOIL_GLAD_API_CALL PFNGLCOMPILESHADERPROC soil_glad_glCompileShader;
#define glCompileShader soil_glad_glCompileShader
SOIL_GLAD_API_CALL PFNGLCOMPRESSEDTEXIMAGE1DPROC soil_glad_glCompressedTexImage1D;
#define glCompressedTexImage1D soil_glad_glCompressedTexImage1D
SOIL_GLAD_API_CALL PFNGLCOMPRESSEDTEXIMAGE2DPROC soil_glad_glCompressedTexImage2D;
#define glCompressedTexImage2D soil_glad_glCompressedTexImage2D
SOIL_GLAD_API_CALL PFNGLCOMPRESSEDTEXIMAGE3DPROC soil_glad_glCompressedTexImage3D;
#define glCompressedTexImage3D soil_glad_glCompressedTexImage3D
SOIL_GLAD_API_CALL PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC soil_glad_glCompressedTexSubImage1D;
#define glCompressedTexSubImage1D soil_glad_glCompressedTexSubImage1D
SOIL_GLAD_API_CALL PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC soil_glad_glCompressedTexSubImage2D;
#define glCompressedTexSubImage2D soil_glad_glCompressedTexSubImage2D
SOIL_GLAD_API_CALL PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC soil_glad_glCompressedTexSubImage3D;
#define glCompressedTexSubImage3D soil_glad_glCompressedTexSubImage3D
SOIL_GLAD_API_CALL PFNGLCOPYBUFFERSUBDATAPROC soil_glad_glCopyBufferSubData;
#define glCopyBufferSubData soil_glad_glCopyBufferSubData
SOIL_GLAD_API_CALL PFNGLCOPYIMAGESUBDATAPROC soil_glad_glCopyImageSubData;
#define glCopyImageSubData soil_glad_glCopyImageSubData
SOIL_GLAD_API_CALL PFNGLCOPYTEXIMAGE1DPROC soil_glad_glCopyTexImage1D;
#define glCopyTexImage1D soil_glad_glCopyTexImage1D
SOIL_GLAD_API_CALL PFNGLCOPYTEXIMAGE2DPROC soil_glad_glCopyTexImage2D;
#define glCopyTexImage2D soil_glad_glCopyTexImage2D
SOIL_GLAD_API_CALL PFNGLCOPYTEXSUBIMAGE1DPROC soil_glad_glCopyTexSubImage1D;
#define glCopyTexSubImage1D soil_glad_glCopyTexSubImage1D
SOIL_GLAD_API_CALL PFNGLCOPYTEXSUBIMAGE2DPROC soil_glad_glCopyTexSubImage2D;
#define glCopyTexSubImage2D soil_glad_glCopyTexSubImage2D
SOIL_GLAD_API_CALL PFNGLCOPYTEXSUBIMAGE3DPROC soil_glad_glCopyTexSubImage3D;
#define glCopyTexSubImage3D soil_glad_glCopyTexSubImage3D
SOIL_GLAD_API_CALL PFNGLCREATEMEMORYOBJECTSEXTPROC soil_glad_glCreateMemoryObjectsEXT;
#define glCreateMemoryObjectsEXT soil_glad_glCreateMemoryObjectsEXT
SOIL_GLAD_API_CALL PFNGLCREATEPROGRAMPROC soil_glad_glCreateProgram;
#define glCreateProgram soil_glad_glCreateProgram
SOIL_GLAD_API_CALL PFNGLCREATESHADERPROC soil_glad_glCreateShader;
#define glCreateShader soil_glad_glCreateShader
SOIL_GLAD_API_CALL PFNGLCREATESHADERPROGRAMVPROC soil_glad_glCreateShaderProgramv;
#define glCreateShaderProgramv soil_glad_glCreateShaderProgramv
SOIL_GLAD_API_CALL PFNGLCULLFACEPROC soil_glad_glCullFace;
#define glCullFace soil_glad_glCullFace
SOIL_GLAD_API_CALL PFNGLDEBUGMESSAGECALLBACKPROC soil_glad_glDebugMessageCallback;
#define glDebugMessageCallback soil_glad_glDebugMessageCallback
SOIL_GLAD_API_CALL PFNGLDEBUGMESSAGECONTROLPROC soil_glad_glDebugMessageControl;
#define glDebugMessageControl soil_glad_glDebugMessageControl
SOIL_GLAD_API_CALL PFNGLDEBUGMESSAGEINSERTPROC soil_glad_glDebugMessageInsert;
#define glDebugMessageInsert soil_glad_glDebugMessageInsert
SOIL_GLAD_API_CALL PFNGLDELETEBUFFERSPROC soil_glad_glDeleteBuffers;
#define glDeleteBuffers soil_glad_glDeleteBuffers
SOIL_GLAD_API_CALL PFNGLDELETEFRAMEBUFFERSPROC soil_glad_glDeleteFramebuffers;
#define glDeleteFramebuffers soil_glad_glDeleteFramebuffers
SOIL_GLAD_API_CALL PFNGLDELETEMEMORYOBJECTSEXTPROC soil_glad_glDeleteMemoryObjectsEXT;
#define glDeleteMemoryObjectsEXT soil_glad_glDeleteMemoryObjectsEXT
SOIL_GLAD_API_CALL PFNGLDELETEPROGRAMPROC soil_glad_glDeleteProgram;
#define glDeleteProgram soil_glad_glDeleteProgram
SOIL_GLAD_API_CALL PFNGLDELETEPROGRAMPIPELINESPROC soil_glad_glDeleteProgramPipelines;
#define glDeleteProgramPipelines soil_glad_glDeleteProgramPipelines
SOIL_GLAD_API_CALL PFNGLDELETEQUERIESPROC soil_glad_glDeleteQueries;
#define glDeleteQueries soil_glad_glDeleteQueries
SOIL_GLAD_API_CALL PFNGLDELETERENDERBUFFERSPROC soil_glad_glDeleteRenderbuffers;
#define glDeleteRenderbuffers soil_glad_glDeleteRenderbuffers
SOIL_GLAD_API_CALL PFNGLDELETESAMPLERSPROC soil_glad_glDeleteSamplers;
#define glDeleteSamplers soil_glad_glDeleteSamplers
SOIL_GLAD_API_CALL PFNGLDELETESHADERPROC soil_glad_glDeleteShader;
#define glDeleteShader soil_glad_glDeleteShader
SOIL_GLAD_API_CALL PFNGLDELETESYNCPROC soil_glad_glDeleteSync;
#define glDeleteSync soil_glad_glDeleteSync
SOIL_GLAD_API_CALL PFNGLDELETETEXTURESPROC soil_glad_glDeleteTextures;
#define glDeleteTextures soil_glad_glDeleteTextures
SOIL_GLAD_API_CALL PFNGLDELETETRANSFORMFEEDBACKSPROC soil_glad_glDeleteTransformFeedbacks;
#define glDeleteTransformFeedbacks soil_glad_glDeleteTransformFeedbacks
SOIL_GLAD_API_CALL PFNGLDELETEVERTEXARRAYSPROC soil_glad_glDeleteVertexArrays;
#define glDeleteVertexArrays soil_glad_glDeleteVertexArrays
SOIL_GLAD_API_CALL PFNGLDEPTHFUNCPROC soil_glad_glDepthFunc;
#define glDepthFunc soil_glad_glDepthFunc
SOIL_GLAD_API_CALL PFNGLDEPTHMASKPROC soil_glad_glDepthMask;
#define glDepthMask soil_glad_glDepthMask
SOIL_GLAD_API_CALL PFNGLDEPTHRANGEPROC soil_glad_glDepthRange;
#define glDepthRange soil_glad_glDepthRange
SOIL_GLAD_API_CALL PFNGLDEPTHRANGEARRAYVPROC soil_glad_glDepthRangeArrayv;
#define glDepthRangeArrayv soil_glad_glDepthRangeArrayv
SOIL_GLAD_API_CALL PFNGLDEPTHRANGEINDEXEDPROC soil_glad_glDepthRangeIndexed;
#define glDepthRangeIndexed soil_glad_glDepthRangeIndexed
SOIL_GLAD_API_CALL PFNGLDEPTHRANGEFPROC soil_glad_glDepthRangef;
#define glDepthRangef soil_glad_glDepthRangef
SOIL_GLAD_API_CALL PFNGLDETACHSHADERPROC soil_glad_glDetachShader;
#define glDetachShader soil_glad_glDetachShader
SOIL_GLAD_API_CALL PFNGLDISABLEPROC soil_glad_glDisable;
#define glDisable soil_glad_glDisable
SOIL_GLAD_API_CALL PFNGLDISABLEVERTEXATTRIBARRAYPROC soil_glad_glDisableVertexAttribArray;
#define glDisableVertexAttribArray soil_glad_glDisableVertexAttribArray
SOIL_GLAD_API_CALL PFNGLDISABLEIPROC soil_glad_glDisablei;
#define glDisablei soil_glad_glDisablei
SOIL_GLAD_API_CALL PFNGLDISPATCHCOMPUTEPROC soil_glad_glDispatchCompute;
#define glDispatchCompute soil_glad_glDispatchCompute
SOIL_GLAD_API_CALL PFNGLDISPATCHCOMPUTEINDIRECTPROC soil_glad_glDispatchComputeIndirect;
#define glDispatchComputeIndirect soil_glad_glDispatchComputeIndirect
SOIL_GLAD_API_CALL PFNGLDRAWARRAYSPROC soil_glad_glDrawArrays;
#define glDrawArrays soil_glad_glDrawArrays
SOIL_GLAD_API_CALL PFNGLDRAWARRAYSINDIRECTPROC soil_glad_glDrawArraysIndirect;
#define glDrawArraysIndirect soil_glad_glDrawArraysIndirect
SOIL_GLAD_API_CALL PFNGLDRAWARRAYSINSTANCEDPROC soil_glad_glDrawArraysInstanced;
#define glDrawArraysInstanced soil_glad_glDrawArraysInstanced
SOIL_GLAD_API_CALL PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC
    soil_glad_glDrawArraysInstancedBaseInstance;
#define glDrawArraysInstancedBaseInstance soil_glad_glDrawArraysInstancedBaseInstance
SOIL_GLAD_API_CALL PFNGLDRAWBUFFERPROC soil_glad_glDrawBuffer;
#define glDrawBuffer soil_glad_glDrawBuffer
SOIL_GLAD_API_CALL PFNGLDRAWBUFFERSPROC soil_glad_glDrawBuffers;
#define glDrawBuffers soil_glad_glDrawBuffers
SOIL_GLAD_API_CALL PFNGLDRAWELEMENTSPROC soil_glad_glDrawElements;
#define glDrawElements soil_glad_glDrawElements
SOIL_GLAD_API_CALL PFNGLDRAWELEMENTSBASEVERTEXPROC soil_glad_glDrawElementsBaseVertex;
#define glDrawElementsBaseVertex soil_glad_glDrawElementsBaseVertex
SOIL_GLAD_API_CALL PFNGLDRAWELEMENTSINDIRECTPROC soil_glad_glDrawElementsIndirect;
#define glDrawElementsIndirect soil_glad_glDrawElementsIndirect
SOIL_GLAD_API_CALL PFNGLDRAWELEMENTSINSTANCEDPROC soil_glad_glDrawElementsInstanced;
#define glDrawElementsInstanced soil_glad_glDrawElementsInstanced
SOIL_GLAD_API_CALL PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC
    soil_glad_glDrawElementsInstancedBaseInstance;
#define glDrawElementsInstancedBaseInstance soil_glad_glDrawElementsInstancedBaseInstance
SOIL_GLAD_API_CALL PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC
    soil_glad_glDrawElementsInstancedBaseVertex;
#define glDrawElementsInstancedBaseVertex soil_glad_glDrawElementsInstancedBaseVertex
SOIL_GLAD_API_CALL PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC
    soil_glad_glDrawElementsInstancedBaseVertexBaseInstance;
#define glDrawElementsInstancedBaseVertexBaseInstance                                          \
    soil_glad_glDrawElementsInstancedBaseVertexBaseInstance
SOIL_GLAD_API_CALL PFNGLDRAWRANGEELEMENTSPROC soil_glad_glDrawRangeElements;
#define glDrawRangeElements soil_glad_glDrawRangeElements
SOIL_GLAD_API_CALL PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC soil_glad_glDrawRangeElementsBaseVertex;
#define glDrawRangeElementsBaseVertex soil_glad_glDrawRangeElementsBaseVertex
SOIL_GLAD_API_CALL PFNGLDRAWTRANSFORMFEEDBACKPROC soil_glad_glDrawTransformFeedback;
#define glDrawTransformFeedback soil_glad_glDrawTransformFeedback
SOIL_GLAD_API_CALL PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC
    soil_glad_glDrawTransformFeedbackInstanced;
#define glDrawTransformFeedbackInstanced soil_glad_glDrawTransformFeedbackInstanced
SOIL_GLAD_API_CALL PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC soil_glad_glDrawTransformFeedbackStream;
#define glDrawTransformFeedbackStream soil_glad_glDrawTransformFeedbackStream
SOIL_GLAD_API_CALL PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC
    soil_glad_glDrawTransformFeedbackStreamInstanced;
#define glDrawTransformFeedbackStreamInstanced soil_glad_glDrawTransformFeedbackStreamInstanced
SOIL_GLAD_API_CALL PFNGLENABLEPROC soil_glad_glEnable;
#define glEnable soil_glad_glEnable
SOIL_GLAD_API_CALL PFNGLENABLEVERTEXATTRIBARRAYPROC soil_glad_glEnableVertexAttribArray;
#define glEnableVertexAttribArray soil_glad_glEnableVertexAttribArray
SOIL_GLAD_API_CALL PFNGLENABLEIPROC soil_glad_glEnablei;
#define glEnablei soil_glad_glEnablei
SOIL_GLAD_API_CALL PFNGLENDCONDITIONALRENDERPROC soil_glad_glEndConditionalRender;
#define glEndConditionalRender soil_glad_glEndConditionalRender
SOIL_GLAD_API_CALL PFNGLENDQUERYPROC soil_glad_glEndQuery;
#define glEndQuery soil_glad_glEndQuery
SOIL_GLAD_API_CALL PFNGLENDQUERYINDEXEDPROC soil_glad_glEndQueryIndexed;
#define glEndQueryIndexed soil_glad_glEndQueryIndexed
SOIL_GLAD_API_CALL PFNGLENDTRANSFORMFEEDBACKPROC soil_glad_glEndTransformFeedback;
#define glEndTransformFeedback soil_glad_glEndTransformFeedback
SOIL_GLAD_API_CALL PFNGLFENCESYNCPROC soil_glad_glFenceSync;
#define glFenceSync soil_glad_glFenceSync
SOIL_GLAD_API_CALL PFNGLFINISHPROC soil_glad_glFinish;
#define glFinish soil_glad_glFinish
SOIL_GLAD_API_CALL PFNGLFLUSHPROC soil_glad_glFlush;
#define glFlush soil_glad_glFlush
SOIL_GLAD_API_CALL PFNGLFLUSHMAPPEDBUFFERRANGEPROC soil_glad_glFlushMappedBufferRange;
#define glFlushMappedBufferRange soil_glad_glFlushMappedBufferRange
SOIL_GLAD_API_CALL PFNGLFRAMEBUFFERPARAMETERIPROC soil_glad_glFramebufferParameteri;
#define glFramebufferParameteri soil_glad_glFramebufferParameteri
SOIL_GLAD_API_CALL PFNGLFRAMEBUFFERRENDERBUFFERPROC soil_glad_glFramebufferRenderbuffer;
#define glFramebufferRenderbuffer soil_glad_glFramebufferRenderbuffer
SOIL_GLAD_API_CALL PFNGLFRAMEBUFFERTEXTUREPROC soil_glad_glFramebufferTexture;
#define glFramebufferTexture soil_glad_glFramebufferTexture
SOIL_GLAD_API_CALL PFNGLFRAMEBUFFERTEXTURE1DPROC soil_glad_glFramebufferTexture1D;
#define glFramebufferTexture1D soil_glad_glFramebufferTexture1D
SOIL_GLAD_API_CALL PFNGLFRAMEBUFFERTEXTURE2DPROC soil_glad_glFramebufferTexture2D;
#define glFramebufferTexture2D soil_glad_glFramebufferTexture2D
SOIL_GLAD_API_CALL PFNGLFRAMEBUFFERTEXTURE3DPROC soil_glad_glFramebufferTexture3D;
#define glFramebufferTexture3D soil_glad_glFramebufferTexture3D
SOIL_GLAD_API_CALL PFNGLFRAMEBUFFERTEXTURELAYERPROC soil_glad_glFramebufferTextureLayer;
#define glFramebufferTextureLayer soil_glad_glFramebufferTextureLayer
SOIL_GLAD_API_CALL PFNGLFRONTFACEPROC soil_glad_glFrontFace;
#define glFrontFace soil_glad_glFrontFace
SOIL_GLAD_API_CALL PFNGLGENBUFFERSPROC soil_glad_glGenBuffers;
#define glGenBuffers soil_glad_glGenBuffers
SOIL_GLAD_API_CALL PFNGLGENFRAMEBUFFERSPROC soil_glad_glGenFramebuffers;
#define glGenFramebuffers soil_glad_glGenFramebuffers
SOIL_GLAD_API_CALL PFNGLGENPROGRAMPIPELINESPROC soil_glad_glGenProgramPipelines;
#define glGenProgramPipelines soil_glad_glGenProgramPipelines
SOIL_GLAD_API_CALL PFNGLGENQUERIESPROC soil_glad_glGenQueries;
#define glGenQueries soil_glad_glGenQueries
SOIL_GLAD_API_CALL PFNGLGENRENDERBUFFERSPROC soil_glad_glGenRenderbuffers;
#define glGenRenderbuffers soil_glad_glGenRenderbuffers
SOIL_GLAD_API_CALL PFNGLGENSAMPLERSPROC soil_glad_glGenSamplers;
#define glGenSamplers soil_glad_glGenSamplers
SOIL_GLAD_API_CALL PFNGLGENTEXTURESPROC soil_glad_glGenTextures;
#define glGenTextures soil_glad_glGenTextures
SOIL_GLAD_API_CALL PFNGLGENTRANSFORMFEEDBACKSPROC soil_glad_glGenTransformFeedbacks;
#define glGenTransformFeedbacks soil_glad_glGenTransformFeedbacks
SOIL_GLAD_API_CALL PFNGLGENVERTEXARRAYSPROC soil_glad_glGenVertexArrays;
#define glGenVertexArrays soil_glad_glGenVertexArrays
SOIL_GLAD_API_CALL PFNGLGENERATEMIPMAPPROC soil_glad_glGenerateMipmap;
#define glGenerateMipmap soil_glad_glGenerateMipmap
SOIL_GLAD_API_CALL PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC
    soil_glad_glGetActiveAtomicCounterBufferiv;
#define glGetActiveAtomicCounterBufferiv soil_glad_glGetActiveAtomicCounterBufferiv
SOIL_GLAD_API_CALL PFNGLGETACTIVEATTRIBPROC soil_glad_glGetActiveAttrib;
#define glGetActiveAttrib soil_glad_glGetActiveAttrib
SOIL_GLAD_API_CALL PFNGLGETACTIVESUBROUTINENAMEPROC soil_glad_glGetActiveSubroutineName;
#define glGetActiveSubroutineName soil_glad_glGetActiveSubroutineName
SOIL_GLAD_API_CALL PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC
    soil_glad_glGetActiveSubroutineUniformName;
#define glGetActiveSubroutineUniformName soil_glad_glGetActiveSubroutineUniformName
SOIL_GLAD_API_CALL PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC
    soil_glad_glGetActiveSubroutineUniformiv;
#define glGetActiveSubroutineUniformiv soil_glad_glGetActiveSubroutineUniformiv
SOIL_GLAD_API_CALL PFNGLGETACTIVEUNIFORMPROC soil_glad_glGetActiveUniform;
#define glGetActiveUniform soil_glad_glGetActiveUniform
SOIL_GLAD_API_CALL PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC soil_glad_glGetActiveUniformBlockName;
#define glGetActiveUniformBlockName soil_glad_glGetActiveUniformBlockName
SOIL_GLAD_API_CALL PFNGLGETACTIVEUNIFORMBLOCKIVPROC soil_glad_glGetActiveUniformBlockiv;
#define glGetActiveUniformBlockiv soil_glad_glGetActiveUniformBlockiv
SOIL_GLAD_API_CALL PFNGLGETACTIVEUNIFORMNAMEPROC soil_glad_glGetActiveUniformName;
#define glGetActiveUniformName soil_glad_glGetActiveUniformName
SOIL_GLAD_API_CALL PFNGLGETACTIVEUNIFORMSIVPROC soil_glad_glGetActiveUniformsiv;
#define glGetActiveUniformsiv soil_glad_glGetActiveUniformsiv
SOIL_GLAD_API_CALL PFNGLGETATTACHEDSHADERSPROC soil_glad_glGetAttachedShaders;
#define glGetAttachedShaders soil_glad_glGetAttachedShaders
SOIL_GLAD_API_CALL PFNGLGETATTRIBLOCATIONPROC soil_glad_glGetAttribLocation;
#define glGetAttribLocation soil_glad_glGetAttribLocation
SOIL_GLAD_API_CALL PFNGLGETBOOLEANI_VPROC soil_glad_glGetBooleani_v;
#define glGetBooleani_v soil_glad_glGetBooleani_v
SOIL_GLAD_API_CALL PFNGLGETBOOLEANVPROC soil_glad_glGetBooleanv;
#define glGetBooleanv soil_glad_glGetBooleanv
SOIL_GLAD_API_CALL PFNGLGETBUFFERPARAMETERI64VPROC soil_glad_glGetBufferParameteri64v;
#define glGetBufferParameteri64v soil_glad_glGetBufferParameteri64v
SOIL_GLAD_API_CALL PFNGLGETBUFFERPARAMETERIVPROC soil_glad_glGetBufferParameteriv;
#define glGetBufferParameteriv soil_glad_glGetBufferParameteriv
SOIL_GLAD_API_CALL PFNGLGETBUFFERPOINTERVPROC soil_glad_glGetBufferPointerv;
#define glGetBufferPointerv soil_glad_glGetBufferPointerv
SOIL_GLAD_API_CALL PFNGLGETBUFFERSUBDATAPROC soil_glad_glGetBufferSubData;
#define glGetBufferSubData soil_glad_glGetBufferSubData
SOIL_GLAD_API_CALL PFNGLGETCOMPRESSEDTEXIMAGEPROC soil_glad_glGetCompressedTexImage;
#define glGetCompressedTexImage soil_glad_glGetCompressedTexImage
SOIL_GLAD_API_CALL PFNGLGETDEBUGMESSAGELOGPROC soil_glad_glGetDebugMessageLog;
#define glGetDebugMessageLog soil_glad_glGetDebugMessageLog
SOIL_GLAD_API_CALL PFNGLGETDOUBLEI_VPROC soil_glad_glGetDoublei_v;
#define glGetDoublei_v soil_glad_glGetDoublei_v
SOIL_GLAD_API_CALL PFNGLGETDOUBLEVPROC soil_glad_glGetDoublev;
#define glGetDoublev soil_glad_glGetDoublev
SOIL_GLAD_API_CALL PFNGLGETERRORPROC soil_glad_glGetError;
#define glGetError soil_glad_glGetError
SOIL_GLAD_API_CALL PFNGLGETFLOATI_VPROC soil_glad_glGetFloati_v;
#define glGetFloati_v soil_glad_glGetFloati_v
SOIL_GLAD_API_CALL PFNGLGETFLOATVPROC soil_glad_glGetFloatv;
#define glGetFloatv soil_glad_glGetFloatv
SOIL_GLAD_API_CALL PFNGLGETFRAGDATAINDEXPROC soil_glad_glGetFragDataIndex;
#define glGetFragDataIndex soil_glad_glGetFragDataIndex
SOIL_GLAD_API_CALL PFNGLGETFRAGDATALOCATIONPROC soil_glad_glGetFragDataLocation;
#define glGetFragDataLocation soil_glad_glGetFragDataLocation
SOIL_GLAD_API_CALL PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC
    soil_glad_glGetFramebufferAttachmentParameteriv;
#define glGetFramebufferAttachmentParameteriv soil_glad_glGetFramebufferAttachmentParameteriv
SOIL_GLAD_API_CALL PFNGLGETFRAMEBUFFERPARAMETERIVPROC soil_glad_glGetFramebufferParameteriv;
#define glGetFramebufferParameteriv soil_glad_glGetFramebufferParameteriv
SOIL_GLAD_API_CALL PFNGLGETINTEGER64I_VPROC soil_glad_glGetInteger64i_v;
#define glGetInteger64i_v soil_glad_glGetInteger64i_v
SOIL_GLAD_API_CALL PFNGLGETINTEGER64VPROC soil_glad_glGetInteger64v;
#define glGetInteger64v soil_glad_glGetInteger64v
SOIL_GLAD_API_CALL PFNGLGETINTEGERI_VPROC soil_glad_glGetIntegeri_v;
#define glGetIntegeri_v soil_glad_glGetIntegeri_v
SOIL_GLAD_API_CALL PFNGLGETINTEGERVPROC soil_glad_glGetIntegerv;
#define glGetIntegerv soil_glad_glGetIntegerv
SOIL_GLAD_API_CALL PFNGLGETINTERNALFORMATI64VPROC soil_glad_glGetInternalformati64v;
#define glGetInternalformati64v soil_glad_glGetInternalformati64v
SOIL_GLAD_API_CALL PFNGLGETINTERNALFORMATIVPROC soil_glad_glGetInternalformativ;
#define glGetInternalformativ soil_glad_glGetInternalformativ
SOIL_GLAD_API_CALL PFNGLGETMEMORYOBJECTPARAMETERIVEXTPROC
    soil_glad_glGetMemoryObjectParameterivEXT;
#define glGetMemoryObjectParameterivEXT soil_glad_glGetMemoryObjectParameterivEXT
SOIL_GLAD_API_CALL PFNGLGETMULTISAMPLEFVPROC soil_glad_glGetMultisamplefv;
#define glGetMultisamplefv soil_glad_glGetMultisamplefv
SOIL_GLAD_API_CALL PFNGLGETOBJECTLABELPROC soil_glad_glGetObjectLabel;
#define glGetObjectLabel soil_glad_glGetObjectLabel
SOIL_GLAD_API_CALL PFNGLGETOBJECTPTRLABELPROC soil_glad_glGetObjectPtrLabel;
#define glGetObjectPtrLabel soil_glad_glGetObjectPtrLabel
SOIL_GLAD_API_CALL PFNGLGETPOINTERVPROC soil_glad_glGetPointerv;
#define glGetPointerv soil_glad_glGetPointerv
SOIL_GLAD_API_CALL PFNGLGETPROGRAMBINARYPROC soil_glad_glGetProgramBinary;
#define glGetProgramBinary soil_glad_glGetProgramBinary
SOIL_GLAD_API_CALL PFNGLGETPROGRAMINFOLOGPROC soil_glad_glGetProgramInfoLog;
#define glGetProgramInfoLog soil_glad_glGetProgramInfoLog
SOIL_GLAD_API_CALL PFNGLGETPROGRAMINTERFACEIVPROC soil_glad_glGetProgramInterfaceiv;
#define glGetProgramInterfaceiv soil_glad_glGetProgramInterfaceiv
SOIL_GLAD_API_CALL PFNGLGETPROGRAMPIPELINEINFOLOGPROC soil_glad_glGetProgramPipelineInfoLog;
#define glGetProgramPipelineInfoLog soil_glad_glGetProgramPipelineInfoLog
SOIL_GLAD_API_CALL PFNGLGETPROGRAMPIPELINEIVPROC soil_glad_glGetProgramPipelineiv;
#define glGetProgramPipelineiv soil_glad_glGetProgramPipelineiv
SOIL_GLAD_API_CALL PFNGLGETPROGRAMRESOURCEINDEXPROC soil_glad_glGetProgramResourceIndex;
#define glGetProgramResourceIndex soil_glad_glGetProgramResourceIndex
SOIL_GLAD_API_CALL PFNGLGETPROGRAMRESOURCELOCATIONPROC soil_glad_glGetProgramResourceLocation;
#define glGetProgramResourceLocation soil_glad_glGetProgramResourceLocation
SOIL_GLAD_API_CALL PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC
    soil_glad_glGetProgramResourceLocationIndex;
#define glGetProgramResourceLocationIndex soil_glad_glGetProgramResourceLocationIndex
SOIL_GLAD_API_CALL PFNGLGETPROGRAMRESOURCENAMEPROC soil_glad_glGetProgramResourceName;
#define glGetProgramResourceName soil_glad_glGetProgramResourceName
SOIL_GLAD_API_CALL PFNGLGETPROGRAMRESOURCEIVPROC soil_glad_glGetProgramResourceiv;
#define glGetProgramResourceiv soil_glad_glGetProgramResourceiv
SOIL_GLAD_API_CALL PFNGLGETPROGRAMSTAGEIVPROC soil_glad_glGetProgramStageiv;
#define glGetProgramStageiv soil_glad_glGetProgramStageiv
SOIL_GLAD_API_CALL PFNGLGETPROGRAMIVPROC soil_glad_glGetProgramiv;
#define glGetProgramiv soil_glad_glGetProgramiv
SOIL_GLAD_API_CALL PFNGLGETQUERYINDEXEDIVPROC soil_glad_glGetQueryIndexediv;
#define glGetQueryIndexediv soil_glad_glGetQueryIndexediv
SOIL_GLAD_API_CALL PFNGLGETQUERYOBJECTI64VPROC soil_glad_glGetQueryObjecti64v;
#define glGetQueryObjecti64v soil_glad_glGetQueryObjecti64v
SOIL_GLAD_API_CALL PFNGLGETQUERYOBJECTIVPROC soil_glad_glGetQueryObjectiv;
#define glGetQueryObjectiv soil_glad_glGetQueryObjectiv
SOIL_GLAD_API_CALL PFNGLGETQUERYOBJECTUI64VPROC soil_glad_glGetQueryObjectui64v;
#define glGetQueryObjectui64v soil_glad_glGetQueryObjectui64v
SOIL_GLAD_API_CALL PFNGLGETQUERYOBJECTUIVPROC soil_glad_glGetQueryObjectuiv;
#define glGetQueryObjectuiv soil_glad_glGetQueryObjectuiv
SOIL_GLAD_API_CALL PFNGLGETQUERYIVPROC soil_glad_glGetQueryiv;
#define glGetQueryiv soil_glad_glGetQueryiv
SOIL_GLAD_API_CALL PFNGLGETRENDERBUFFERPARAMETERIVPROC soil_glad_glGetRenderbufferParameteriv;
#define glGetRenderbufferParameteriv soil_glad_glGetRenderbufferParameteriv
SOIL_GLAD_API_CALL PFNGLGETSAMPLERPARAMETERIIVPROC soil_glad_glGetSamplerParameterIiv;
#define glGetSamplerParameterIiv soil_glad_glGetSamplerParameterIiv
SOIL_GLAD_API_CALL PFNGLGETSAMPLERPARAMETERIUIVPROC soil_glad_glGetSamplerParameterIuiv;
#define glGetSamplerParameterIuiv soil_glad_glGetSamplerParameterIuiv
SOIL_GLAD_API_CALL PFNGLGETSAMPLERPARAMETERFVPROC soil_glad_glGetSamplerParameterfv;
#define glGetSamplerParameterfv soil_glad_glGetSamplerParameterfv
SOIL_GLAD_API_CALL PFNGLGETSAMPLERPARAMETERIVPROC soil_glad_glGetSamplerParameteriv;
#define glGetSamplerParameteriv soil_glad_glGetSamplerParameteriv
SOIL_GLAD_API_CALL PFNGLGETSHADERINFOLOGPROC soil_glad_glGetShaderInfoLog;
#define glGetShaderInfoLog soil_glad_glGetShaderInfoLog
SOIL_GLAD_API_CALL PFNGLGETSHADERPRECISIONFORMATPROC soil_glad_glGetShaderPrecisionFormat;
#define glGetShaderPrecisionFormat soil_glad_glGetShaderPrecisionFormat
SOIL_GLAD_API_CALL PFNGLGETSHADERSOURCEPROC soil_glad_glGetShaderSource;
#define glGetShaderSource soil_glad_glGetShaderSource
SOIL_GLAD_API_CALL PFNGLGETSHADERIVPROC soil_glad_glGetShaderiv;
#define glGetShaderiv soil_glad_glGetShaderiv
SOIL_GLAD_API_CALL PFNGLGETSTRINGPROC soil_glad_glGetString;
#define glGetString soil_glad_glGetString
SOIL_GLAD_API_CALL PFNGLGETSTRINGIPROC soil_glad_glGetStringi;
#define glGetStringi soil_glad_glGetStringi
SOIL_GLAD_API_CALL PFNGLGETSUBROUTINEINDEXPROC soil_glad_glGetSubroutineIndex;
#define glGetSubroutineIndex soil_glad_glGetSubroutineIndex
SOIL_GLAD_API_CALL PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC
    soil_glad_glGetSubroutineUniformLocation;
#define glGetSubroutineUniformLocation soil_glad_glGetSubroutineUniformLocation
SOIL_GLAD_API_CALL PFNGLGETSYNCIVPROC soil_glad_glGetSynciv;
#define glGetSynciv soil_glad_glGetSynciv
SOIL_GLAD_API_CALL PFNGLGETTEXIMAGEPROC soil_glad_glGetTexImage;
#define glGetTexImage soil_glad_glGetTexImage
SOIL_GLAD_API_CALL PFNGLGETTEXLEVELPARAMETERFVPROC soil_glad_glGetTexLevelParameterfv;
#define glGetTexLevelParameterfv soil_glad_glGetTexLevelParameterfv
SOIL_GLAD_API_CALL PFNGLGETTEXLEVELPARAMETERIVPROC soil_glad_glGetTexLevelParameteriv;
#define glGetTexLevelParameteriv soil_glad_glGetTexLevelParameteriv
SOIL_GLAD_API_CALL PFNGLGETTEXPARAMETERIIVPROC soil_glad_glGetTexParameterIiv;
#define glGetTexParameterIiv soil_glad_glGetTexParameterIiv
SOIL_GLAD_API_CALL PFNGLGETTEXPARAMETERIUIVPROC soil_glad_glGetTexParameterIuiv;
#define glGetTexParameterIuiv soil_glad_glGetTexParameterIuiv
SOIL_GLAD_API_CALL PFNGLGETTEXPARAMETERFVPROC soil_glad_glGetTexParameterfv;
#define glGetTexParameterfv soil_glad_glGetTexParameterfv
SOIL_GLAD_API_CALL PFNGLGETTEXPARAMETERIVPROC soil_glad_glGetTexParameteriv;
#define glGetTexParameteriv soil_glad_glGetTexParameteriv
SOIL_GLAD_API_CALL PFNGLGETTRANSFORMFEEDBACKVARYINGPROC soil_glad_glGetTransformFeedbackVarying;
#define glGetTransformFeedbackVarying soil_glad_glGetTransformFeedbackVarying
SOIL_GLAD_API_CALL PFNGLGETUNIFORMBLOCKINDEXPROC soil_glad_glGetUniformBlockIndex;
#define glGetUniformBlockIndex soil_glad_glGetUniformBlockIndex
SOIL_GLAD_API_CALL PFNGLGETUNIFORMINDICESPROC soil_glad_glGetUniformIndices;
#define glGetUniformIndices soil_glad_glGetUniformIndices
SOIL_GLAD_API_CALL PFNGLGETUNIFORMLOCATIONPROC soil_glad_glGetUniformLocation;
#define glGetUniformLocation soil_glad_glGetUniformLocation
SOIL_GLAD_API_CALL PFNGLGETUNIFORMSUBROUTINEUIVPROC soil_glad_glGetUniformSubroutineuiv;
#define glGetUniformSubroutineuiv soil_glad_glGetUniformSubroutineuiv
SOIL_GLAD_API_CALL PFNGLGETUNIFORMDVPROC soil_glad_glGetUniformdv;
#define glGetUniformdv soil_glad_glGetUniformdv
SOIL_GLAD_API_CALL PFNGLGETUNIFORMFVPROC soil_glad_glGetUniformfv;
#define glGetUniformfv soil_glad_glGetUniformfv
SOIL_GLAD_API_CALL PFNGLGETUNIFORMIVPROC soil_glad_glGetUniformiv;
#define glGetUniformiv soil_glad_glGetUniformiv
SOIL_GLAD_API_CALL PFNGLGETUNIFORMUIVPROC soil_glad_glGetUniformuiv;
#define glGetUniformuiv soil_glad_glGetUniformuiv
SOIL_GLAD_API_CALL PFNGLGETUNSIGNEDBYTEI_VEXTPROC soil_glad_glGetUnsignedBytei_vEXT;
#define glGetUnsignedBytei_vEXT soil_glad_glGetUnsignedBytei_vEXT
SOIL_GLAD_API_CALL PFNGLGETUNSIGNEDBYTEVEXTPROC soil_glad_glGetUnsignedBytevEXT;
#define glGetUnsignedBytevEXT soil_glad_glGetUnsignedBytevEXT
SOIL_GLAD_API_CALL PFNGLGETVERTEXATTRIBIIVPROC soil_glad_glGetVertexAttribIiv;
#define glGetVertexAttribIiv soil_glad_glGetVertexAttribIiv
SOIL_GLAD_API_CALL PFNGLGETVERTEXATTRIBIUIVPROC soil_glad_glGetVertexAttribIuiv;
#define glGetVertexAttribIuiv soil_glad_glGetVertexAttribIuiv
SOIL_GLAD_API_CALL PFNGLGETVERTEXATTRIBLDVPROC soil_glad_glGetVertexAttribLdv;
#define glGetVertexAttribLdv soil_glad_glGetVertexAttribLdv
SOIL_GLAD_API_CALL PFNGLGETVERTEXATTRIBPOINTERVPROC soil_glad_glGetVertexAttribPointerv;
#define glGetVertexAttribPointerv soil_glad_glGetVertexAttribPointerv
SOIL_GLAD_API_CALL PFNGLGETVERTEXATTRIBDVPROC soil_glad_glGetVertexAttribdv;
#define glGetVertexAttribdv soil_glad_glGetVertexAttribdv
SOIL_GLAD_API_CALL PFNGLGETVERTEXATTRIBFVPROC soil_glad_glGetVertexAttribfv;
#define glGetVertexAttribfv soil_glad_glGetVertexAttribfv
SOIL_GLAD_API_CALL PFNGLGETVERTEXATTRIBIVPROC soil_glad_glGetVertexAttribiv;
#define glGetVertexAttribiv soil_glad_glGetVertexAttribiv
SOIL_GLAD_API_CALL PFNGLHINTPROC soil_glad_glHint;
#define glHint soil_glad_glHint
SOIL_GLAD_API_CALL PFNGLIMPORTMEMORYWIN32HANDLEEXTPROC soil_glad_glImportMemoryWin32HandleEXT;
#define glImportMemoryWin32HandleEXT soil_glad_glImportMemoryWin32HandleEXT
SOIL_GLAD_API_CALL PFNGLIMPORTMEMORYWIN32NAMEEXTPROC soil_glad_glImportMemoryWin32NameEXT;
#define glImportMemoryWin32NameEXT soil_glad_glImportMemoryWin32NameEXT
SOIL_GLAD_API_CALL PFNGLINVALIDATEBUFFERDATAPROC soil_glad_glInvalidateBufferData;
#define glInvalidateBufferData soil_glad_glInvalidateBufferData
SOIL_GLAD_API_CALL PFNGLINVALIDATEBUFFERSUBDATAPROC soil_glad_glInvalidateBufferSubData;
#define glInvalidateBufferSubData soil_glad_glInvalidateBufferSubData
SOIL_GLAD_API_CALL PFNGLINVALIDATEFRAMEBUFFERPROC soil_glad_glInvalidateFramebuffer;
#define glInvalidateFramebuffer soil_glad_glInvalidateFramebuffer
SOIL_GLAD_API_CALL PFNGLINVALIDATESUBFRAMEBUFFERPROC soil_glad_glInvalidateSubFramebuffer;
#define glInvalidateSubFramebuffer soil_glad_glInvalidateSubFramebuffer
SOIL_GLAD_API_CALL PFNGLINVALIDATETEXIMAGEPROC soil_glad_glInvalidateTexImage;
#define glInvalidateTexImage soil_glad_glInvalidateTexImage
SOIL_GLAD_API_CALL PFNGLINVALIDATETEXSUBIMAGEPROC soil_glad_glInvalidateTexSubImage;
#define glInvalidateTexSubImage soil_glad_glInvalidateTexSubImage
SOIL_GLAD_API_CALL PFNGLISBUFFERPROC soil_glad_glIsBuffer;
#define glIsBuffer soil_glad_glIsBuffer
SOIL_GLAD_API_CALL PFNGLISENABLEDPROC soil_glad_glIsEnabled;
#define glIsEnabled soil_glad_glIsEnabled
SOIL_GLAD_API_CALL PFNGLISENABLEDIPROC soil_glad_glIsEnabledi;
#define glIsEnabledi soil_glad_glIsEnabledi
SOIL_GLAD_API_CALL PFNGLISFRAMEBUFFERPROC soil_glad_glIsFramebuffer;
#define glIsFramebuffer soil_glad_glIsFramebuffer
SOIL_GLAD_API_CALL PFNGLISMEMORYOBJECTEXTPROC soil_glad_glIsMemoryObjectEXT;
#define glIsMemoryObjectEXT soil_glad_glIsMemoryObjectEXT
SOIL_GLAD_API_CALL PFNGLISPROGRAMPROC soil_glad_glIsProgram;
#define glIsProgram soil_glad_glIsProgram
SOIL_GLAD_API_CALL PFNGLISPROGRAMPIPELINEPROC soil_glad_glIsProgramPipeline;
#define glIsProgramPipeline soil_glad_glIsProgramPipeline
SOIL_GLAD_API_CALL PFNGLISQUERYPROC soil_glad_glIsQuery;
#define glIsQuery soil_glad_glIsQuery
SOIL_GLAD_API_CALL PFNGLISRENDERBUFFERPROC soil_glad_glIsRenderbuffer;
#define glIsRenderbuffer soil_glad_glIsRenderbuffer
SOIL_GLAD_API_CALL PFNGLISSAMPLERPROC soil_glad_glIsSampler;
#define glIsSampler soil_glad_glIsSampler
SOIL_GLAD_API_CALL PFNGLISSHADERPROC soil_glad_glIsShader;
#define glIsShader soil_glad_glIsShader
SOIL_GLAD_API_CALL PFNGLISSYNCPROC soil_glad_glIsSync;
#define glIsSync soil_glad_glIsSync
SOIL_GLAD_API_CALL PFNGLISTEXTUREPROC soil_glad_glIsTexture;
#define glIsTexture soil_glad_glIsTexture
SOIL_GLAD_API_CALL PFNGLISTRANSFORMFEEDBACKPROC soil_glad_glIsTransformFeedback;
#define glIsTransformFeedback soil_glad_glIsTransformFeedback
SOIL_GLAD_API_CALL PFNGLISVERTEXARRAYPROC soil_glad_glIsVertexArray;
#define glIsVertexArray soil_glad_glIsVertexArray
SOIL_GLAD_API_CALL PFNGLLINEWIDTHPROC soil_glad_glLineWidth;
#define glLineWidth soil_glad_glLineWidth
SOIL_GLAD_API_CALL PFNGLLINKPROGRAMPROC soil_glad_glLinkProgram;
#define glLinkProgram soil_glad_glLinkProgram
SOIL_GLAD_API_CALL PFNGLLOGICOPPROC soil_glad_glLogicOp;
#define glLogicOp soil_glad_glLogicOp
SOIL_GLAD_API_CALL PFNGLMAPBUFFERPROC soil_glad_glMapBuffer;
#define glMapBuffer soil_glad_glMapBuffer
SOIL_GLAD_API_CALL PFNGLMAPBUFFERRANGEPROC soil_glad_glMapBufferRange;
#define glMapBufferRange soil_glad_glMapBufferRange
SOIL_GLAD_API_CALL PFNGLMEMORYBARRIERPROC soil_glad_glMemoryBarrier;
#define glMemoryBarrier soil_glad_glMemoryBarrier
SOIL_GLAD_API_CALL PFNGLMEMORYOBJECTPARAMETERIVEXTPROC soil_glad_glMemoryObjectParameterivEXT;
#define glMemoryObjectParameterivEXT soil_glad_glMemoryObjectParameterivEXT
SOIL_GLAD_API_CALL PFNGLMINSAMPLESHADINGPROC soil_glad_glMinSampleShading;
#define glMinSampleShading soil_glad_glMinSampleShading
SOIL_GLAD_API_CALL PFNGLMULTIDRAWARRAYSPROC soil_glad_glMultiDrawArrays;
#define glMultiDrawArrays soil_glad_glMultiDrawArrays
SOIL_GLAD_API_CALL PFNGLMULTIDRAWARRAYSINDIRECTPROC soil_glad_glMultiDrawArraysIndirect;
#define glMultiDrawArraysIndirect soil_glad_glMultiDrawArraysIndirect
SOIL_GLAD_API_CALL PFNGLMULTIDRAWELEMENTSPROC soil_glad_glMultiDrawElements;
#define glMultiDrawElements soil_glad_glMultiDrawElements
SOIL_GLAD_API_CALL PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC soil_glad_glMultiDrawElementsBaseVertex;
#define glMultiDrawElementsBaseVertex soil_glad_glMultiDrawElementsBaseVertex
SOIL_GLAD_API_CALL PFNGLMULTIDRAWELEMENTSINDIRECTPROC soil_glad_glMultiDrawElementsIndirect;
#define glMultiDrawElementsIndirect soil_glad_glMultiDrawElementsIndirect
SOIL_GLAD_API_CALL PFNGLNAMEDBUFFERSTORAGEMEMEXTPROC soil_glad_glNamedBufferStorageMemEXT;
#define glNamedBufferStorageMemEXT soil_glad_glNamedBufferStorageMemEXT
SOIL_GLAD_API_CALL PFNGLOBJECTLABELPROC soil_glad_glObjectLabel;
#define glObjectLabel soil_glad_glObjectLabel
SOIL_GLAD_API_CALL PFNGLOBJECTPTRLABELPROC soil_glad_glObjectPtrLabel;
#define glObjectPtrLabel soil_glad_glObjectPtrLabel
SOIL_GLAD_API_CALL PFNGLPATCHPARAMETERFVPROC soil_glad_glPatchParameterfv;
#define glPatchParameterfv soil_glad_glPatchParameterfv
SOIL_GLAD_API_CALL PFNGLPATCHPARAMETERIPROC soil_glad_glPatchParameteri;
#define glPatchParameteri soil_glad_glPatchParameteri
SOIL_GLAD_API_CALL PFNGLPAUSETRANSFORMFEEDBACKPROC soil_glad_glPauseTransformFeedback;
#define glPauseTransformFeedback soil_glad_glPauseTransformFeedback
SOIL_GLAD_API_CALL PFNGLPIXELSTOREFPROC soil_glad_glPixelStoref;
#define glPixelStoref soil_glad_glPixelStoref
SOIL_GLAD_API_CALL PFNGLPIXELSTOREIPROC soil_glad_glPixelStorei;
#define glPixelStorei soil_glad_glPixelStorei
SOIL_GLAD_API_CALL PFNGLPOINTPARAMETERFPROC soil_glad_glPointParameterf;
#define glPointParameterf soil_glad_glPointParameterf
SOIL_GLAD_API_CALL PFNGLPOINTPARAMETERFVPROC soil_glad_glPointParameterfv;
#define glPointParameterfv soil_glad_glPointParameterfv
SOIL_GLAD_API_CALL PFNGLPOINTPARAMETERIPROC soil_glad_glPointParameteri;
#define glPointParameteri soil_glad_glPointParameteri
SOIL_GLAD_API_CALL PFNGLPOINTPARAMETERIVPROC soil_glad_glPointParameteriv;
#define glPointParameteriv soil_glad_glPointParameteriv
SOIL_GLAD_API_CALL PFNGLPOINTSIZEPROC soil_glad_glPointSize;
#define glPointSize soil_glad_glPointSize
SOIL_GLAD_API_CALL PFNGLPOLYGONMODEPROC soil_glad_glPolygonMode;
#define glPolygonMode soil_glad_glPolygonMode
SOIL_GLAD_API_CALL PFNGLPOLYGONOFFSETPROC soil_glad_glPolygonOffset;
#define glPolygonOffset soil_glad_glPolygonOffset
SOIL_GLAD_API_CALL PFNGLPOPDEBUGGROUPPROC soil_glad_glPopDebugGroup;
#define glPopDebugGroup soil_glad_glPopDebugGroup
SOIL_GLAD_API_CALL PFNGLPRIMITIVERESTARTINDEXPROC soil_glad_glPrimitiveRestartIndex;
#define glPrimitiveRestartIndex soil_glad_glPrimitiveRestartIndex
SOIL_GLAD_API_CALL PFNGLPROGRAMBINARYPROC soil_glad_glProgramBinary;
#define glProgramBinary soil_glad_glProgramBinary
SOIL_GLAD_API_CALL PFNGLPROGRAMPARAMETERIPROC soil_glad_glProgramParameteri;
#define glProgramParameteri soil_glad_glProgramParameteri
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORM1DPROC soil_glad_glProgramUniform1d;
#define glProgramUniform1d soil_glad_glProgramUniform1d
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORM1DVPROC soil_glad_glProgramUniform1dv;
#define glProgramUniform1dv soil_glad_glProgramUniform1dv
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORM1FPROC soil_glad_glProgramUniform1f;
#define glProgramUniform1f soil_glad_glProgramUniform1f
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORM1FVPROC soil_glad_glProgramUniform1fv;
#define glProgramUniform1fv soil_glad_glProgramUniform1fv
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORM1IPROC soil_glad_glProgramUniform1i;
#define glProgramUniform1i soil_glad_glProgramUniform1i
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORM1IVPROC soil_glad_glProgramUniform1iv;
#define glProgramUniform1iv soil_glad_glProgramUniform1iv
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORM1UIPROC soil_glad_glProgramUniform1ui;
#define glProgramUniform1ui soil_glad_glProgramUniform1ui
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORM1UIVPROC soil_glad_glProgramUniform1uiv;
#define glProgramUniform1uiv soil_glad_glProgramUniform1uiv
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORM2DPROC soil_glad_glProgramUniform2d;
#define glProgramUniform2d soil_glad_glProgramUniform2d
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORM2DVPROC soil_glad_glProgramUniform2dv;
#define glProgramUniform2dv soil_glad_glProgramUniform2dv
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORM2FPROC soil_glad_glProgramUniform2f;
#define glProgramUniform2f soil_glad_glProgramUniform2f
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORM2FVPROC soil_glad_glProgramUniform2fv;
#define glProgramUniform2fv soil_glad_glProgramUniform2fv
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORM2IPROC soil_glad_glProgramUniform2i;
#define glProgramUniform2i soil_glad_glProgramUniform2i
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORM2IVPROC soil_glad_glProgramUniform2iv;
#define glProgramUniform2iv soil_glad_glProgramUniform2iv
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORM2UIPROC soil_glad_glProgramUniform2ui;
#define glProgramUniform2ui soil_glad_glProgramUniform2ui
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORM2UIVPROC soil_glad_glProgramUniform2uiv;
#define glProgramUniform2uiv soil_glad_glProgramUniform2uiv
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORM3DPROC soil_glad_glProgramUniform3d;
#define glProgramUniform3d soil_glad_glProgramUniform3d
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORM3DVPROC soil_glad_glProgramUniform3dv;
#define glProgramUniform3dv soil_glad_glProgramUniform3dv
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORM3FPROC soil_glad_glProgramUniform3f;
#define glProgramUniform3f soil_glad_glProgramUniform3f
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORM3FVPROC soil_glad_glProgramUniform3fv;
#define glProgramUniform3fv soil_glad_glProgramUniform3fv
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORM3IPROC soil_glad_glProgramUniform3i;
#define glProgramUniform3i soil_glad_glProgramUniform3i
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORM3IVPROC soil_glad_glProgramUniform3iv;
#define glProgramUniform3iv soil_glad_glProgramUniform3iv
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORM3UIPROC soil_glad_glProgramUniform3ui;
#define glProgramUniform3ui soil_glad_glProgramUniform3ui
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORM3UIVPROC soil_glad_glProgramUniform3uiv;
#define glProgramUniform3uiv soil_glad_glProgramUniform3uiv
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORM4DPROC soil_glad_glProgramUniform4d;
#define glProgramUniform4d soil_glad_glProgramUniform4d
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORM4DVPROC soil_glad_glProgramUniform4dv;
#define glProgramUniform4dv soil_glad_glProgramUniform4dv
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORM4FPROC soil_glad_glProgramUniform4f;
#define glProgramUniform4f soil_glad_glProgramUniform4f
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORM4FVPROC soil_glad_glProgramUniform4fv;
#define glProgramUniform4fv soil_glad_glProgramUniform4fv
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORM4IPROC soil_glad_glProgramUniform4i;
#define glProgramUniform4i soil_glad_glProgramUniform4i
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORM4IVPROC soil_glad_glProgramUniform4iv;
#define glProgramUniform4iv soil_glad_glProgramUniform4iv
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORM4UIPROC soil_glad_glProgramUniform4ui;
#define glProgramUniform4ui soil_glad_glProgramUniform4ui
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORM4UIVPROC soil_glad_glProgramUniform4uiv;
#define glProgramUniform4uiv soil_glad_glProgramUniform4uiv
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX2DVPROC soil_glad_glProgramUniformMatrix2dv;
#define glProgramUniformMatrix2dv soil_glad_glProgramUniformMatrix2dv
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX2FVPROC soil_glad_glProgramUniformMatrix2fv;
#define glProgramUniformMatrix2fv soil_glad_glProgramUniformMatrix2fv
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC soil_glad_glProgramUniformMatrix2x3dv;
#define glProgramUniformMatrix2x3dv soil_glad_glProgramUniformMatrix2x3dv
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC soil_glad_glProgramUniformMatrix2x3fv;
#define glProgramUniformMatrix2x3fv soil_glad_glProgramUniformMatrix2x3fv
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC soil_glad_glProgramUniformMatrix2x4dv;
#define glProgramUniformMatrix2x4dv soil_glad_glProgramUniformMatrix2x4dv
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC soil_glad_glProgramUniformMatrix2x4fv;
#define glProgramUniformMatrix2x4fv soil_glad_glProgramUniformMatrix2x4fv
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX3DVPROC soil_glad_glProgramUniformMatrix3dv;
#define glProgramUniformMatrix3dv soil_glad_glProgramUniformMatrix3dv
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX3FVPROC soil_glad_glProgramUniformMatrix3fv;
#define glProgramUniformMatrix3fv soil_glad_glProgramUniformMatrix3fv
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC soil_glad_glProgramUniformMatrix3x2dv;
#define glProgramUniformMatrix3x2dv soil_glad_glProgramUniformMatrix3x2dv
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC soil_glad_glProgramUniformMatrix3x2fv;
#define glProgramUniformMatrix3x2fv soil_glad_glProgramUniformMatrix3x2fv
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC soil_glad_glProgramUniformMatrix3x4dv;
#define glProgramUniformMatrix3x4dv soil_glad_glProgramUniformMatrix3x4dv
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC soil_glad_glProgramUniformMatrix3x4fv;
#define glProgramUniformMatrix3x4fv soil_glad_glProgramUniformMatrix3x4fv
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX4DVPROC soil_glad_glProgramUniformMatrix4dv;
#define glProgramUniformMatrix4dv soil_glad_glProgramUniformMatrix4dv
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX4FVPROC soil_glad_glProgramUniformMatrix4fv;
#define glProgramUniformMatrix4fv soil_glad_glProgramUniformMatrix4fv
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC soil_glad_glProgramUniformMatrix4x2dv;
#define glProgramUniformMatrix4x2dv soil_glad_glProgramUniformMatrix4x2dv
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC soil_glad_glProgramUniformMatrix4x2fv;
#define glProgramUniformMatrix4x2fv soil_glad_glProgramUniformMatrix4x2fv
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC soil_glad_glProgramUniformMatrix4x3dv;
#define glProgramUniformMatrix4x3dv soil_glad_glProgramUniformMatrix4x3dv
SOIL_GLAD_API_CALL PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC soil_glad_glProgramUniformMatrix4x3fv;
#define glProgramUniformMatrix4x3fv soil_glad_glProgramUniformMatrix4x3fv
SOIL_GLAD_API_CALL PFNGLPROVOKINGVERTEXPROC soil_glad_glProvokingVertex;
#define glProvokingVertex soil_glad_glProvokingVertex
SOIL_GLAD_API_CALL PFNGLPUSHDEBUGGROUPPROC soil_glad_glPushDebugGroup;
#define glPushDebugGroup soil_glad_glPushDebugGroup
SOIL_GLAD_API_CALL PFNGLQUERYCOUNTERPROC soil_glad_glQueryCounter;
#define glQueryCounter soil_glad_glQueryCounter
SOIL_GLAD_API_CALL PFNGLREADBUFFERPROC soil_glad_glReadBuffer;
#define glReadBuffer soil_glad_glReadBuffer
SOIL_GLAD_API_CALL PFNGLREADPIXELSPROC soil_glad_glReadPixels;
#define glReadPixels soil_glad_glReadPixels
SOIL_GLAD_API_CALL PFNGLRELEASESHADERCOMPILERPROC soil_glad_glReleaseShaderCompiler;
#define glReleaseShaderCompiler soil_glad_glReleaseShaderCompiler
SOIL_GLAD_API_CALL PFNGLRENDERBUFFERSTORAGEPROC soil_glad_glRenderbufferStorage;
#define glRenderbufferStorage soil_glad_glRenderbufferStorage
SOIL_GLAD_API_CALL PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC
    soil_glad_glRenderbufferStorageMultisample;
#define glRenderbufferStorageMultisample soil_glad_glRenderbufferStorageMultisample
SOIL_GLAD_API_CALL PFNGLRESUMETRANSFORMFEEDBACKPROC soil_glad_glResumeTransformFeedback;
#define glResumeTransformFeedback soil_glad_glResumeTransformFeedback
SOIL_GLAD_API_CALL PFNGLSAMPLECOVERAGEPROC soil_glad_glSampleCoverage;
#define glSampleCoverage soil_glad_glSampleCoverage
SOIL_GLAD_API_CALL PFNGLSAMPLEMASKIPROC soil_glad_glSampleMaski;
#define glSampleMaski soil_glad_glSampleMaski
SOIL_GLAD_API_CALL PFNGLSAMPLERPARAMETERIIVPROC soil_glad_glSamplerParameterIiv;
#define glSamplerParameterIiv soil_glad_glSamplerParameterIiv
SOIL_GLAD_API_CALL PFNGLSAMPLERPARAMETERIUIVPROC soil_glad_glSamplerParameterIuiv;
#define glSamplerParameterIuiv soil_glad_glSamplerParameterIuiv
SOIL_GLAD_API_CALL PFNGLSAMPLERPARAMETERFPROC soil_glad_glSamplerParameterf;
#define glSamplerParameterf soil_glad_glSamplerParameterf
SOIL_GLAD_API_CALL PFNGLSAMPLERPARAMETERFVPROC soil_glad_glSamplerParameterfv;
#define glSamplerParameterfv soil_glad_glSamplerParameterfv
SOIL_GLAD_API_CALL PFNGLSAMPLERPARAMETERIPROC soil_glad_glSamplerParameteri;
#define glSamplerParameteri soil_glad_glSamplerParameteri
SOIL_GLAD_API_CALL PFNGLSAMPLERPARAMETERIVPROC soil_glad_glSamplerParameteriv;
#define glSamplerParameteriv soil_glad_glSamplerParameteriv
SOIL_GLAD_API_CALL PFNGLSCISSORPROC soil_glad_glScissor;
#define glScissor soil_glad_glScissor
SOIL_GLAD_API_CALL PFNGLSCISSORARRAYVPROC soil_glad_glScissorArrayv;
#define glScissorArrayv soil_glad_glScissorArrayv
SOIL_GLAD_API_CALL PFNGLSCISSORINDEXEDPROC soil_glad_glScissorIndexed;
#define glScissorIndexed soil_glad_glScissorIndexed
SOIL_GLAD_API_CALL PFNGLSCISSORINDEXEDVPROC soil_glad_glScissorIndexedv;
#define glScissorIndexedv soil_glad_glScissorIndexedv
SOIL_GLAD_API_CALL PFNGLSHADERBINARYPROC soil_glad_glShaderBinary;
#define glShaderBinary soil_glad_glShaderBinary
SOIL_GLAD_API_CALL PFNGLSHADERSOURCEPROC soil_glad_glShaderSource;
#define glShaderSource soil_glad_glShaderSource
SOIL_GLAD_API_CALL PFNGLSHADERSTORAGEBLOCKBINDINGPROC soil_glad_glShaderStorageBlockBinding;
#define glShaderStorageBlockBinding soil_glad_glShaderStorageBlockBinding
SOIL_GLAD_API_CALL PFNGLSTENCILFUNCPROC soil_glad_glStencilFunc;
#define glStencilFunc soil_glad_glStencilFunc
SOIL_GLAD_API_CALL PFNGLSTENCILFUNCSEPARATEPROC soil_glad_glStencilFuncSeparate;
#define glStencilFuncSeparate soil_glad_glStencilFuncSeparate
SOIL_GLAD_API_CALL PFNGLSTENCILMASKPROC soil_glad_glStencilMask;
#define glStencilMask soil_glad_glStencilMask
SOIL_GLAD_API_CALL PFNGLSTENCILMASKSEPARATEPROC soil_glad_glStencilMaskSeparate;
#define glStencilMaskSeparate soil_glad_glStencilMaskSeparate
SOIL_GLAD_API_CALL PFNGLSTENCILOPPROC soil_glad_glStencilOp;
#define glStencilOp soil_glad_glStencilOp
SOIL_GLAD_API_CALL PFNGLSTENCILOPSEPARATEPROC soil_glad_glStencilOpSeparate;
#define glStencilOpSeparate soil_glad_glStencilOpSeparate
SOIL_GLAD_API_CALL PFNGLTEXBUFFERPROC soil_glad_glTexBuffer;
#define glTexBuffer soil_glad_glTexBuffer
SOIL_GLAD_API_CALL PFNGLTEXBUFFERRANGEPROC soil_glad_glTexBufferRange;
#define glTexBufferRange soil_glad_glTexBufferRange
SOIL_GLAD_API_CALL PFNGLTEXIMAGE1DPROC soil_glad_glTexImage1D;
#define glTexImage1D soil_glad_glTexImage1D
SOIL_GLAD_API_CALL PFNGLTEXIMAGE2DPROC soil_glad_glTexImage2D;
#define glTexImage2D soil_glad_glTexImage2D
SOIL_GLAD_API_CALL PFNGLTEXIMAGE2DMULTISAMPLEPROC soil_glad_glTexImage2DMultisample;
#define glTexImage2DMultisample soil_glad_glTexImage2DMultisample
SOIL_GLAD_API_CALL PFNGLTEXIMAGE3DPROC soil_glad_glTexImage3D;
#define glTexImage3D soil_glad_glTexImage3D
SOIL_GLAD_API_CALL PFNGLTEXIMAGE3DMULTISAMPLEPROC soil_glad_glTexImage3DMultisample;
#define glTexImage3DMultisample soil_glad_glTexImage3DMultisample
SOIL_GLAD_API_CALL PFNGLTEXPARAMETERIIVPROC soil_glad_glTexParameterIiv;
#define glTexParameterIiv soil_glad_glTexParameterIiv
SOIL_GLAD_API_CALL PFNGLTEXPARAMETERIUIVPROC soil_glad_glTexParameterIuiv;
#define glTexParameterIuiv soil_glad_glTexParameterIuiv
SOIL_GLAD_API_CALL PFNGLTEXPARAMETERFPROC soil_glad_glTexParameterf;
#define glTexParameterf soil_glad_glTexParameterf
SOIL_GLAD_API_CALL PFNGLTEXPARAMETERFVPROC soil_glad_glTexParameterfv;
#define glTexParameterfv soil_glad_glTexParameterfv
SOIL_GLAD_API_CALL PFNGLTEXPARAMETERIPROC soil_glad_glTexParameteri;
#define glTexParameteri soil_glad_glTexParameteri
SOIL_GLAD_API_CALL PFNGLTEXPARAMETERIVPROC soil_glad_glTexParameteriv;
#define glTexParameteriv soil_glad_glTexParameteriv
SOIL_GLAD_API_CALL PFNGLTEXSTORAGE1DPROC soil_glad_glTexStorage1D;
#define glTexStorage1D soil_glad_glTexStorage1D
SOIL_GLAD_API_CALL PFNGLTEXSTORAGE2DPROC soil_glad_glTexStorage2D;
#define glTexStorage2D soil_glad_glTexStorage2D
SOIL_GLAD_API_CALL PFNGLTEXSTORAGE2DMULTISAMPLEPROC soil_glad_glTexStorage2DMultisample;
#define glTexStorage2DMultisample soil_glad_glTexStorage2DMultisample
SOIL_GLAD_API_CALL PFNGLTEXSTORAGE3DPROC soil_glad_glTexStorage3D;
#define glTexStorage3D soil_glad_glTexStorage3D
SOIL_GLAD_API_CALL PFNGLTEXSTORAGE3DMULTISAMPLEPROC soil_glad_glTexStorage3DMultisample;
#define glTexStorage3DMultisample soil_glad_glTexStorage3DMultisample
SOIL_GLAD_API_CALL PFNGLTEXSTORAGEMEM1DEXTPROC soil_glad_glTexStorageMem1DEXT;
#define glTexStorageMem1DEXT soil_glad_glTexStorageMem1DEXT
SOIL_GLAD_API_CALL PFNGLTEXSTORAGEMEM2DEXTPROC soil_glad_glTexStorageMem2DEXT;
#define glTexStorageMem2DEXT soil_glad_glTexStorageMem2DEXT
SOIL_GLAD_API_CALL PFNGLTEXSTORAGEMEM2DMULTISAMPLEEXTPROC
    soil_glad_glTexStorageMem2DMultisampleEXT;
#define glTexStorageMem2DMultisampleEXT soil_glad_glTexStorageMem2DMultisampleEXT
SOIL_GLAD_API_CALL PFNGLTEXSTORAGEMEM3DEXTPROC soil_glad_glTexStorageMem3DEXT;
#define glTexStorageMem3DEXT soil_glad_glTexStorageMem3DEXT
SOIL_GLAD_API_CALL PFNGLTEXSTORAGEMEM3DMULTISAMPLEEXTPROC
    soil_glad_glTexStorageMem3DMultisampleEXT;
#define glTexStorageMem3DMultisampleEXT soil_glad_glTexStorageMem3DMultisampleEXT
SOIL_GLAD_API_CALL PFNGLTEXSUBIMAGE1DPROC soil_glad_glTexSubImage1D;
#define glTexSubImage1D soil_glad_glTexSubImage1D
SOIL_GLAD_API_CALL PFNGLTEXSUBIMAGE2DPROC soil_glad_glTexSubImage2D;
#define glTexSubImage2D soil_glad_glTexSubImage2D
SOIL_GLAD_API_CALL PFNGLTEXSUBIMAGE3DPROC soil_glad_glTexSubImage3D;
#define glTexSubImage3D soil_glad_glTexSubImage3D
SOIL_GLAD_API_CALL PFNGLTEXTURESTORAGEMEM1DEXTPROC soil_glad_glTextureStorageMem1DEXT;
#define glTextureStorageMem1DEXT soil_glad_glTextureStorageMem1DEXT
SOIL_GLAD_API_CALL PFNGLTEXTURESTORAGEMEM2DEXTPROC soil_glad_glTextureStorageMem2DEXT;
#define glTextureStorageMem2DEXT soil_glad_glTextureStorageMem2DEXT
SOIL_GLAD_API_CALL PFNGLTEXTURESTORAGEMEM2DMULTISAMPLEEXTPROC
    soil_glad_glTextureStorageMem2DMultisampleEXT;
#define glTextureStorageMem2DMultisampleEXT soil_glad_glTextureStorageMem2DMultisampleEXT
SOIL_GLAD_API_CALL PFNGLTEXTURESTORAGEMEM3DEXTPROC soil_glad_glTextureStorageMem3DEXT;
#define glTextureStorageMem3DEXT soil_glad_glTextureStorageMem3DEXT
SOIL_GLAD_API_CALL PFNGLTEXTURESTORAGEMEM3DMULTISAMPLEEXTPROC
    soil_glad_glTextureStorageMem3DMultisampleEXT;
#define glTextureStorageMem3DMultisampleEXT soil_glad_glTextureStorageMem3DMultisampleEXT
SOIL_GLAD_API_CALL PFNGLTEXTUREVIEWPROC soil_glad_glTextureView;
#define glTextureView soil_glad_glTextureView
SOIL_GLAD_API_CALL PFNGLTRANSFORMFEEDBACKVARYINGSPROC soil_glad_glTransformFeedbackVaryings;
#define glTransformFeedbackVaryings soil_glad_glTransformFeedbackVaryings
SOIL_GLAD_API_CALL PFNGLUNIFORM1DPROC soil_glad_glUniform1d;
#define glUniform1d soil_glad_glUniform1d
SOIL_GLAD_API_CALL PFNGLUNIFORM1DVPROC soil_glad_glUniform1dv;
#define glUniform1dv soil_glad_glUniform1dv
SOIL_GLAD_API_CALL PFNGLUNIFORM1FPROC soil_glad_glUniform1f;
#define glUniform1f soil_glad_glUniform1f
SOIL_GLAD_API_CALL PFNGLUNIFORM1FVPROC soil_glad_glUniform1fv;
#define glUniform1fv soil_glad_glUniform1fv
SOIL_GLAD_API_CALL PFNGLUNIFORM1IPROC soil_glad_glUniform1i;
#define glUniform1i soil_glad_glUniform1i
SOIL_GLAD_API_CALL PFNGLUNIFORM1IVPROC soil_glad_glUniform1iv;
#define glUniform1iv soil_glad_glUniform1iv
SOIL_GLAD_API_CALL PFNGLUNIFORM1UIPROC soil_glad_glUniform1ui;
#define glUniform1ui soil_glad_glUniform1ui
SOIL_GLAD_API_CALL PFNGLUNIFORM1UIVPROC soil_glad_glUniform1uiv;
#define glUniform1uiv soil_glad_glUniform1uiv
SOIL_GLAD_API_CALL PFNGLUNIFORM2DPROC soil_glad_glUniform2d;
#define glUniform2d soil_glad_glUniform2d
SOIL_GLAD_API_CALL PFNGLUNIFORM2DVPROC soil_glad_glUniform2dv;
#define glUniform2dv soil_glad_glUniform2dv
SOIL_GLAD_API_CALL PFNGLUNIFORM2FPROC soil_glad_glUniform2f;
#define glUniform2f soil_glad_glUniform2f
SOIL_GLAD_API_CALL PFNGLUNIFORM2FVPROC soil_glad_glUniform2fv;
#define glUniform2fv soil_glad_glUniform2fv
SOIL_GLAD_API_CALL PFNGLUNIFORM2IPROC soil_glad_glUniform2i;
#define glUniform2i soil_glad_glUniform2i
SOIL_GLAD_API_CALL PFNGLUNIFORM2IVPROC soil_glad_glUniform2iv;
#define glUniform2iv soil_glad_glUniform2iv
SOIL_GLAD_API_CALL PFNGLUNIFORM2UIPROC soil_glad_glUniform2ui;
#define glUniform2ui soil_glad_glUniform2ui
SOIL_GLAD_API_CALL PFNGLUNIFORM2UIVPROC soil_glad_glUniform2uiv;
#define glUniform2uiv soil_glad_glUniform2uiv
SOIL_GLAD_API_CALL PFNGLUNIFORM3DPROC soil_glad_glUniform3d;
#define glUniform3d soil_glad_glUniform3d
SOIL_GLAD_API_CALL PFNGLUNIFORM3DVPROC soil_glad_glUniform3dv;
#define glUniform3dv soil_glad_glUniform3dv
SOIL_GLAD_API_CALL PFNGLUNIFORM3FPROC soil_glad_glUniform3f;
#define glUniform3f soil_glad_glUniform3f
SOIL_GLAD_API_CALL PFNGLUNIFORM3FVPROC soil_glad_glUniform3fv;
#define glUniform3fv soil_glad_glUniform3fv
SOIL_GLAD_API_CALL PFNGLUNIFORM3IPROC soil_glad_glUniform3i;
#define glUniform3i soil_glad_glUniform3i
SOIL_GLAD_API_CALL PFNGLUNIFORM3IVPROC soil_glad_glUniform3iv;
#define glUniform3iv soil_glad_glUniform3iv
SOIL_GLAD_API_CALL PFNGLUNIFORM3UIPROC soil_glad_glUniform3ui;
#define glUniform3ui soil_glad_glUniform3ui
SOIL_GLAD_API_CALL PFNGLUNIFORM3UIVPROC soil_glad_glUniform3uiv;
#define glUniform3uiv soil_glad_glUniform3uiv
SOIL_GLAD_API_CALL PFNGLUNIFORM4DPROC soil_glad_glUniform4d;
#define glUniform4d soil_glad_glUniform4d
SOIL_GLAD_API_CALL PFNGLUNIFORM4DVPROC soil_glad_glUniform4dv;
#define glUniform4dv soil_glad_glUniform4dv
SOIL_GLAD_API_CALL PFNGLUNIFORM4FPROC soil_glad_glUniform4f;
#define glUniform4f soil_glad_glUniform4f
SOIL_GLAD_API_CALL PFNGLUNIFORM4FVPROC soil_glad_glUniform4fv;
#define glUniform4fv soil_glad_glUniform4fv
SOIL_GLAD_API_CALL PFNGLUNIFORM4IPROC soil_glad_glUniform4i;
#define glUniform4i soil_glad_glUniform4i
SOIL_GLAD_API_CALL PFNGLUNIFORM4IVPROC soil_glad_glUniform4iv;
#define glUniform4iv soil_glad_glUniform4iv
SOIL_GLAD_API_CALL PFNGLUNIFORM4UIPROC soil_glad_glUniform4ui;
#define glUniform4ui soil_glad_glUniform4ui
SOIL_GLAD_API_CALL PFNGLUNIFORM4UIVPROC soil_glad_glUniform4uiv;
#define glUniform4uiv soil_glad_glUniform4uiv
SOIL_GLAD_API_CALL PFNGLUNIFORMBLOCKBINDINGPROC soil_glad_glUniformBlockBinding;
#define glUniformBlockBinding soil_glad_glUniformBlockBinding
SOIL_GLAD_API_CALL PFNGLUNIFORMMATRIX2DVPROC soil_glad_glUniformMatrix2dv;
#define glUniformMatrix2dv soil_glad_glUniformMatrix2dv
SOIL_GLAD_API_CALL PFNGLUNIFORMMATRIX2FVPROC soil_glad_glUniformMatrix2fv;
#define glUniformMatrix2fv soil_glad_glUniformMatrix2fv
SOIL_GLAD_API_CALL PFNGLUNIFORMMATRIX2X3DVPROC soil_glad_glUniformMatrix2x3dv;
#define glUniformMatrix2x3dv soil_glad_glUniformMatrix2x3dv
SOIL_GLAD_API_CALL PFNGLUNIFORMMATRIX2X3FVPROC soil_glad_glUniformMatrix2x3fv;
#define glUniformMatrix2x3fv soil_glad_glUniformMatrix2x3fv
SOIL_GLAD_API_CALL PFNGLUNIFORMMATRIX2X4DVPROC soil_glad_glUniformMatrix2x4dv;
#define glUniformMatrix2x4dv soil_glad_glUniformMatrix2x4dv
SOIL_GLAD_API_CALL PFNGLUNIFORMMATRIX2X4FVPROC soil_glad_glUniformMatrix2x4fv;
#define glUniformMatrix2x4fv soil_glad_glUniformMatrix2x4fv
SOIL_GLAD_API_CALL PFNGLUNIFORMMATRIX3DVPROC soil_glad_glUniformMatrix3dv;
#define glUniformMatrix3dv soil_glad_glUniformMatrix3dv
SOIL_GLAD_API_CALL PFNGLUNIFORMMATRIX3FVPROC soil_glad_glUniformMatrix3fv;
#define glUniformMatrix3fv soil_glad_glUniformMatrix3fv
SOIL_GLAD_API_CALL PFNGLUNIFORMMATRIX3X2DVPROC soil_glad_glUniformMatrix3x2dv;
#define glUniformMatrix3x2dv soil_glad_glUniformMatrix3x2dv
SOIL_GLAD_API_CALL PFNGLUNIFORMMATRIX3X2FVPROC soil_glad_glUniformMatrix3x2fv;
#define glUniformMatrix3x2fv soil_glad_glUniformMatrix3x2fv
SOIL_GLAD_API_CALL PFNGLUNIFORMMATRIX3X4DVPROC soil_glad_glUniformMatrix3x4dv;
#define glUniformMatrix3x4dv soil_glad_glUniformMatrix3x4dv
SOIL_GLAD_API_CALL PFNGLUNIFORMMATRIX3X4FVPROC soil_glad_glUniformMatrix3x4fv;
#define glUniformMatrix3x4fv soil_glad_glUniformMatrix3x4fv
SOIL_GLAD_API_CALL PFNGLUNIFORMMATRIX4DVPROC soil_glad_glUniformMatrix4dv;
#define glUniformMatrix4dv soil_glad_glUniformMatrix4dv
SOIL_GLAD_API_CALL PFNGLUNIFORMMATRIX4FVPROC soil_glad_glUniformMatrix4fv;
#define glUniformMatrix4fv soil_glad_glUniformMatrix4fv
SOIL_GLAD_API_CALL PFNGLUNIFORMMATRIX4X2DVPROC soil_glad_glUniformMatrix4x2dv;
#define glUniformMatrix4x2dv soil_glad_glUniformMatrix4x2dv
SOIL_GLAD_API_CALL PFNGLUNIFORMMATRIX4X2FVPROC soil_glad_glUniformMatrix4x2fv;
#define glUniformMatrix4x2fv soil_glad_glUniformMatrix4x2fv
SOIL_GLAD_API_CALL PFNGLUNIFORMMATRIX4X3DVPROC soil_glad_glUniformMatrix4x3dv;
#define glUniformMatrix4x3dv soil_glad_glUniformMatrix4x3dv
SOIL_GLAD_API_CALL PFNGLUNIFORMMATRIX4X3FVPROC soil_glad_glUniformMatrix4x3fv;
#define glUniformMatrix4x3fv soil_glad_glUniformMatrix4x3fv
SOIL_GLAD_API_CALL PFNGLUNIFORMSUBROUTINESUIVPROC soil_glad_glUniformSubroutinesuiv;
#define glUniformSubroutinesuiv soil_glad_glUniformSubroutinesuiv
SOIL_GLAD_API_CALL PFNGLUNMAPBUFFERPROC soil_glad_glUnmapBuffer;
#define glUnmapBuffer soil_glad_glUnmapBuffer
SOIL_GLAD_API_CALL PFNGLUSEPROGRAMPROC soil_glad_glUseProgram;
#define glUseProgram soil_glad_glUseProgram
SOIL_GLAD_API_CALL PFNGLUSEPROGRAMSTAGESPROC soil_glad_glUseProgramStages;
#define glUseProgramStages soil_glad_glUseProgramStages
SOIL_GLAD_API_CALL PFNGLVALIDATEPROGRAMPROC soil_glad_glValidateProgram;
#define glValidateProgram soil_glad_glValidateProgram
SOIL_GLAD_API_CALL PFNGLVALIDATEPROGRAMPIPELINEPROC soil_glad_glValidateProgramPipeline;
#define glValidateProgramPipeline soil_glad_glValidateProgramPipeline
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIB1DPROC soil_glad_glVertexAttrib1d;
#define glVertexAttrib1d soil_glad_glVertexAttrib1d
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIB1DVPROC soil_glad_glVertexAttrib1dv;
#define glVertexAttrib1dv soil_glad_glVertexAttrib1dv
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIB1FPROC soil_glad_glVertexAttrib1f;
#define glVertexAttrib1f soil_glad_glVertexAttrib1f
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIB1FVPROC soil_glad_glVertexAttrib1fv;
#define glVertexAttrib1fv soil_glad_glVertexAttrib1fv
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIB1SPROC soil_glad_glVertexAttrib1s;
#define glVertexAttrib1s soil_glad_glVertexAttrib1s
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIB1SVPROC soil_glad_glVertexAttrib1sv;
#define glVertexAttrib1sv soil_glad_glVertexAttrib1sv
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIB2DPROC soil_glad_glVertexAttrib2d;
#define glVertexAttrib2d soil_glad_glVertexAttrib2d
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIB2DVPROC soil_glad_glVertexAttrib2dv;
#define glVertexAttrib2dv soil_glad_glVertexAttrib2dv
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIB2FPROC soil_glad_glVertexAttrib2f;
#define glVertexAttrib2f soil_glad_glVertexAttrib2f
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIB2FVPROC soil_glad_glVertexAttrib2fv;
#define glVertexAttrib2fv soil_glad_glVertexAttrib2fv
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIB2SPROC soil_glad_glVertexAttrib2s;
#define glVertexAttrib2s soil_glad_glVertexAttrib2s
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIB2SVPROC soil_glad_glVertexAttrib2sv;
#define glVertexAttrib2sv soil_glad_glVertexAttrib2sv
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIB3DPROC soil_glad_glVertexAttrib3d;
#define glVertexAttrib3d soil_glad_glVertexAttrib3d
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIB3DVPROC soil_glad_glVertexAttrib3dv;
#define glVertexAttrib3dv soil_glad_glVertexAttrib3dv
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIB3FPROC soil_glad_glVertexAttrib3f;
#define glVertexAttrib3f soil_glad_glVertexAttrib3f
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIB3FVPROC soil_glad_glVertexAttrib3fv;
#define glVertexAttrib3fv soil_glad_glVertexAttrib3fv
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIB3SPROC soil_glad_glVertexAttrib3s;
#define glVertexAttrib3s soil_glad_glVertexAttrib3s
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIB3SVPROC soil_glad_glVertexAttrib3sv;
#define glVertexAttrib3sv soil_glad_glVertexAttrib3sv
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIB4NBVPROC soil_glad_glVertexAttrib4Nbv;
#define glVertexAttrib4Nbv soil_glad_glVertexAttrib4Nbv
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIB4NIVPROC soil_glad_glVertexAttrib4Niv;
#define glVertexAttrib4Niv soil_glad_glVertexAttrib4Niv
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIB4NSVPROC soil_glad_glVertexAttrib4Nsv;
#define glVertexAttrib4Nsv soil_glad_glVertexAttrib4Nsv
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIB4NUBPROC soil_glad_glVertexAttrib4Nub;
#define glVertexAttrib4Nub soil_glad_glVertexAttrib4Nub
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIB4NUBVPROC soil_glad_glVertexAttrib4Nubv;
#define glVertexAttrib4Nubv soil_glad_glVertexAttrib4Nubv
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIB4NUIVPROC soil_glad_glVertexAttrib4Nuiv;
#define glVertexAttrib4Nuiv soil_glad_glVertexAttrib4Nuiv
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIB4NUSVPROC soil_glad_glVertexAttrib4Nusv;
#define glVertexAttrib4Nusv soil_glad_glVertexAttrib4Nusv
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIB4BVPROC soil_glad_glVertexAttrib4bv;
#define glVertexAttrib4bv soil_glad_glVertexAttrib4bv
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIB4DPROC soil_glad_glVertexAttrib4d;
#define glVertexAttrib4d soil_glad_glVertexAttrib4d
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIB4DVPROC soil_glad_glVertexAttrib4dv;
#define glVertexAttrib4dv soil_glad_glVertexAttrib4dv
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIB4FPROC soil_glad_glVertexAttrib4f;
#define glVertexAttrib4f soil_glad_glVertexAttrib4f
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIB4FVPROC soil_glad_glVertexAttrib4fv;
#define glVertexAttrib4fv soil_glad_glVertexAttrib4fv
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIB4IVPROC soil_glad_glVertexAttrib4iv;
#define glVertexAttrib4iv soil_glad_glVertexAttrib4iv
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIB4SPROC soil_glad_glVertexAttrib4s;
#define glVertexAttrib4s soil_glad_glVertexAttrib4s
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIB4SVPROC soil_glad_glVertexAttrib4sv;
#define glVertexAttrib4sv soil_glad_glVertexAttrib4sv
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIB4UBVPROC soil_glad_glVertexAttrib4ubv;
#define glVertexAttrib4ubv soil_glad_glVertexAttrib4ubv
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIB4UIVPROC soil_glad_glVertexAttrib4uiv;
#define glVertexAttrib4uiv soil_glad_glVertexAttrib4uiv
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIB4USVPROC soil_glad_glVertexAttrib4usv;
#define glVertexAttrib4usv soil_glad_glVertexAttrib4usv
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBBINDINGPROC soil_glad_glVertexAttribBinding;
#define glVertexAttribBinding soil_glad_glVertexAttribBinding
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBDIVISORPROC soil_glad_glVertexAttribDivisor;
#define glVertexAttribDivisor soil_glad_glVertexAttribDivisor
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBFORMATPROC soil_glad_glVertexAttribFormat;
#define glVertexAttribFormat soil_glad_glVertexAttribFormat
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBI1IPROC soil_glad_glVertexAttribI1i;
#define glVertexAttribI1i soil_glad_glVertexAttribI1i
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBI1IVPROC soil_glad_glVertexAttribI1iv;
#define glVertexAttribI1iv soil_glad_glVertexAttribI1iv
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBI1UIPROC soil_glad_glVertexAttribI1ui;
#define glVertexAttribI1ui soil_glad_glVertexAttribI1ui
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBI1UIVPROC soil_glad_glVertexAttribI1uiv;
#define glVertexAttribI1uiv soil_glad_glVertexAttribI1uiv
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBI2IPROC soil_glad_glVertexAttribI2i;
#define glVertexAttribI2i soil_glad_glVertexAttribI2i
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBI2IVPROC soil_glad_glVertexAttribI2iv;
#define glVertexAttribI2iv soil_glad_glVertexAttribI2iv
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBI2UIPROC soil_glad_glVertexAttribI2ui;
#define glVertexAttribI2ui soil_glad_glVertexAttribI2ui
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBI2UIVPROC soil_glad_glVertexAttribI2uiv;
#define glVertexAttribI2uiv soil_glad_glVertexAttribI2uiv
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBI3IPROC soil_glad_glVertexAttribI3i;
#define glVertexAttribI3i soil_glad_glVertexAttribI3i
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBI3IVPROC soil_glad_glVertexAttribI3iv;
#define glVertexAttribI3iv soil_glad_glVertexAttribI3iv
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBI3UIPROC soil_glad_glVertexAttribI3ui;
#define glVertexAttribI3ui soil_glad_glVertexAttribI3ui
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBI3UIVPROC soil_glad_glVertexAttribI3uiv;
#define glVertexAttribI3uiv soil_glad_glVertexAttribI3uiv
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBI4BVPROC soil_glad_glVertexAttribI4bv;
#define glVertexAttribI4bv soil_glad_glVertexAttribI4bv
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBI4IPROC soil_glad_glVertexAttribI4i;
#define glVertexAttribI4i soil_glad_glVertexAttribI4i
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBI4IVPROC soil_glad_glVertexAttribI4iv;
#define glVertexAttribI4iv soil_glad_glVertexAttribI4iv
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBI4SVPROC soil_glad_glVertexAttribI4sv;
#define glVertexAttribI4sv soil_glad_glVertexAttribI4sv
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBI4UBVPROC soil_glad_glVertexAttribI4ubv;
#define glVertexAttribI4ubv soil_glad_glVertexAttribI4ubv
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBI4UIPROC soil_glad_glVertexAttribI4ui;
#define glVertexAttribI4ui soil_glad_glVertexAttribI4ui
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBI4UIVPROC soil_glad_glVertexAttribI4uiv;
#define glVertexAttribI4uiv soil_glad_glVertexAttribI4uiv
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBI4USVPROC soil_glad_glVertexAttribI4usv;
#define glVertexAttribI4usv soil_glad_glVertexAttribI4usv
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBIFORMATPROC soil_glad_glVertexAttribIFormat;
#define glVertexAttribIFormat soil_glad_glVertexAttribIFormat
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBIPOINTERPROC soil_glad_glVertexAttribIPointer;
#define glVertexAttribIPointer soil_glad_glVertexAttribIPointer
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBL1DPROC soil_glad_glVertexAttribL1d;
#define glVertexAttribL1d soil_glad_glVertexAttribL1d
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBL1DVPROC soil_glad_glVertexAttribL1dv;
#define glVertexAttribL1dv soil_glad_glVertexAttribL1dv
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBL2DPROC soil_glad_glVertexAttribL2d;
#define glVertexAttribL2d soil_glad_glVertexAttribL2d
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBL2DVPROC soil_glad_glVertexAttribL2dv;
#define glVertexAttribL2dv soil_glad_glVertexAttribL2dv
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBL3DPROC soil_glad_glVertexAttribL3d;
#define glVertexAttribL3d soil_glad_glVertexAttribL3d
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBL3DVPROC soil_glad_glVertexAttribL3dv;
#define glVertexAttribL3dv soil_glad_glVertexAttribL3dv
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBL4DPROC soil_glad_glVertexAttribL4d;
#define glVertexAttribL4d soil_glad_glVertexAttribL4d
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBL4DVPROC soil_glad_glVertexAttribL4dv;
#define glVertexAttribL4dv soil_glad_glVertexAttribL4dv
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBLFORMATPROC soil_glad_glVertexAttribLFormat;
#define glVertexAttribLFormat soil_glad_glVertexAttribLFormat
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBLPOINTERPROC soil_glad_glVertexAttribLPointer;
#define glVertexAttribLPointer soil_glad_glVertexAttribLPointer
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBP1UIPROC soil_glad_glVertexAttribP1ui;
#define glVertexAttribP1ui soil_glad_glVertexAttribP1ui
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBP1UIVPROC soil_glad_glVertexAttribP1uiv;
#define glVertexAttribP1uiv soil_glad_glVertexAttribP1uiv
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBP2UIPROC soil_glad_glVertexAttribP2ui;
#define glVertexAttribP2ui soil_glad_glVertexAttribP2ui
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBP2UIVPROC soil_glad_glVertexAttribP2uiv;
#define glVertexAttribP2uiv soil_glad_glVertexAttribP2uiv
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBP3UIPROC soil_glad_glVertexAttribP3ui;
#define glVertexAttribP3ui soil_glad_glVertexAttribP3ui
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBP3UIVPROC soil_glad_glVertexAttribP3uiv;
#define glVertexAttribP3uiv soil_glad_glVertexAttribP3uiv
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBP4UIPROC soil_glad_glVertexAttribP4ui;
#define glVertexAttribP4ui soil_glad_glVertexAttribP4ui
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBP4UIVPROC soil_glad_glVertexAttribP4uiv;
#define glVertexAttribP4uiv soil_glad_glVertexAttribP4uiv
SOIL_GLAD_API_CALL PFNGLVERTEXATTRIBPOINTERPROC soil_glad_glVertexAttribPointer;
#define glVertexAttribPointer soil_glad_glVertexAttribPointer
SOIL_GLAD_API_CALL PFNGLVERTEXBINDINGDIVISORPROC soil_glad_glVertexBindingDivisor;
#define glVertexBindingDivisor soil_glad_glVertexBindingDivisor
SOIL_GLAD_API_CALL PFNGLVIEWPORTPROC soil_glad_glViewport;
#define glViewport soil_glad_glViewport
SOIL_GLAD_API_CALL PFNGLVIEWPORTARRAYVPROC soil_glad_glViewportArrayv;
#define glViewportArrayv soil_glad_glViewportArrayv
SOIL_GLAD_API_CALL PFNGLVIEWPORTINDEXEDFPROC soil_glad_glViewportIndexedf;
#define glViewportIndexedf soil_glad_glViewportIndexedf
SOIL_GLAD_API_CALL PFNGLVIEWPORTINDEXEDFVPROC soil_glad_glViewportIndexedfv;
#define glViewportIndexedfv soil_glad_glViewportIndexedfv
SOIL_GLAD_API_CALL PFNGLWAITSYNCPROC soil_glad_glWaitSync;
#define glWaitSync soil_glad_glWaitSync

SOIL_GLAD_API_CALL int soil_gladLoadGLUserPtr(GLADuserptrloadfunc load, void *userptr);
SOIL_GLAD_API_CALL int soil_gladLoadGL(GLADloadfunc load);

#ifdef __cplusplus
}
#endif
#endif

/* Source */
#ifdef SOIL_GLAD_GL_IMPLEMENTATION
/**
 * SPDX-License-Identifier: (WTFPL OR CC0-1.0) AND Apache-2.0
 */
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#ifndef SOIL_GLAD_IMPL_UTIL_C_
#define SOIL_GLAD_IMPL_UTIL_C_

#ifdef _MSC_VER
#define SOIL_GLAD_IMPL_UTIL_SSCANF sscanf_s
#else
#define SOIL_GLAD_IMPL_UTIL_SSCANF sscanf
#endif

#endif /* SOIL_GLAD_IMPL_UTIL_C_ */

#ifdef __cplusplus
extern "C" {
#endif

int SOIL_GLAD_GL_VERSION_1_0             = 0;
int SOIL_GLAD_GL_VERSION_1_1             = 0;
int SOIL_GLAD_GL_VERSION_1_2             = 0;
int SOIL_GLAD_GL_VERSION_1_3             = 0;
int SOIL_GLAD_GL_VERSION_1_4             = 0;
int SOIL_GLAD_GL_VERSION_1_5             = 0;
int SOIL_GLAD_GL_VERSION_2_0             = 0;
int SOIL_GLAD_GL_VERSION_2_1             = 0;
int SOIL_GLAD_GL_VERSION_3_0             = 0;
int SOIL_GLAD_GL_VERSION_3_1             = 0;
int SOIL_GLAD_GL_VERSION_3_2             = 0;
int SOIL_GLAD_GL_VERSION_3_3             = 0;
int SOIL_GLAD_GL_VERSION_4_0             = 0;
int SOIL_GLAD_GL_VERSION_4_1             = 0;
int SOIL_GLAD_GL_VERSION_4_2             = 0;
int SOIL_GLAD_GL_VERSION_4_3             = 0;
int SOIL_GLAD_GL_EXT_memory_object       = 0;
int SOIL_GLAD_GL_EXT_memory_object_win32 = 0;

PFNGLACTIVESHADERPROGRAMPROC               soil_glad_glActiveShaderProgram               = NULL;
PFNGLACTIVETEXTUREPROC                     soil_glad_glActiveTexture                     = NULL;
PFNGLATTACHSHADERPROC                      soil_glad_glAttachShader                      = NULL;
PFNGLBEGINCONDITIONALRENDERPROC            soil_glad_glBeginConditionalRender            = NULL;
PFNGLBEGINQUERYPROC                        soil_glad_glBeginQuery                        = NULL;
PFNGLBEGINQUERYINDEXEDPROC                 soil_glad_glBeginQueryIndexed                 = NULL;
PFNGLBEGINTRANSFORMFEEDBACKPROC            soil_glad_glBeginTransformFeedback            = NULL;
PFNGLBINDATTRIBLOCATIONPROC                soil_glad_glBindAttribLocation                = NULL;
PFNGLBINDBUFFERPROC                        soil_glad_glBindBuffer                        = NULL;
PFNGLBINDBUFFERBASEPROC                    soil_glad_glBindBufferBase                    = NULL;
PFNGLBINDBUFFERRANGEPROC                   soil_glad_glBindBufferRange                   = NULL;
PFNGLBINDFRAGDATALOCATIONPROC              soil_glad_glBindFragDataLocation              = NULL;
PFNGLBINDFRAGDATALOCATIONINDEXEDPROC       soil_glad_glBindFragDataLocationIndexed       = NULL;
PFNGLBINDFRAMEBUFFERPROC                   soil_glad_glBindFramebuffer                   = NULL;
PFNGLBINDIMAGETEXTUREPROC                  soil_glad_glBindImageTexture                  = NULL;
PFNGLBINDPROGRAMPIPELINEPROC               soil_glad_glBindProgramPipeline               = NULL;
PFNGLBINDRENDERBUFFERPROC                  soil_glad_glBindRenderbuffer                  = NULL;
PFNGLBINDSAMPLERPROC                       soil_glad_glBindSampler                       = NULL;
PFNGLBINDTEXTUREPROC                       soil_glad_glBindTexture                       = NULL;
PFNGLBINDTRANSFORMFEEDBACKPROC             soil_glad_glBindTransformFeedback             = NULL;
PFNGLBINDVERTEXARRAYPROC                   soil_glad_glBindVertexArray                   = NULL;
PFNGLBINDVERTEXBUFFERPROC                  soil_glad_glBindVertexBuffer                  = NULL;
PFNGLBLENDCOLORPROC                        soil_glad_glBlendColor                        = NULL;
PFNGLBLENDEQUATIONPROC                     soil_glad_glBlendEquation                     = NULL;
PFNGLBLENDEQUATIONSEPARATEPROC             soil_glad_glBlendEquationSeparate             = NULL;
PFNGLBLENDEQUATIONSEPARATEIPROC            soil_glad_glBlendEquationSeparatei            = NULL;
PFNGLBLENDEQUATIONIPROC                    soil_glad_glBlendEquationi                    = NULL;
PFNGLBLENDFUNCPROC                         soil_glad_glBlendFunc                         = NULL;
PFNGLBLENDFUNCSEPARATEPROC                 soil_glad_glBlendFuncSeparate                 = NULL;
PFNGLBLENDFUNCSEPARATEIPROC                soil_glad_glBlendFuncSeparatei                = NULL;
PFNGLBLENDFUNCIPROC                        soil_glad_glBlendFunci                        = NULL;
PFNGLBLITFRAMEBUFFERPROC                   soil_glad_glBlitFramebuffer                   = NULL;
PFNGLBUFFERDATAPROC                        soil_glad_glBufferData                        = NULL;
PFNGLBUFFERSTORAGEMEMEXTPROC               soil_glad_glBufferStorageMemEXT               = NULL;
PFNGLBUFFERSUBDATAPROC                     soil_glad_glBufferSubData                     = NULL;
PFNGLCHECKFRAMEBUFFERSTATUSPROC            soil_glad_glCheckFramebufferStatus            = NULL;
PFNGLCLAMPCOLORPROC                        soil_glad_glClampColor                        = NULL;
PFNGLCLEARPROC                             soil_glad_glClear                             = NULL;
PFNGLCLEARBUFFERDATAPROC                   soil_glad_glClearBufferData                   = NULL;
PFNGLCLEARBUFFERSUBDATAPROC                soil_glad_glClearBufferSubData                = NULL;
PFNGLCLEARBUFFERFIPROC                     soil_glad_glClearBufferfi                     = NULL;
PFNGLCLEARBUFFERFVPROC                     soil_glad_glClearBufferfv                     = NULL;
PFNGLCLEARBUFFERIVPROC                     soil_glad_glClearBufferiv                     = NULL;
PFNGLCLEARBUFFERUIVPROC                    soil_glad_glClearBufferuiv                    = NULL;
PFNGLCLEARCOLORPROC                        soil_glad_glClearColor                        = NULL;
PFNGLCLEARDEPTHPROC                        soil_glad_glClearDepth                        = NULL;
PFNGLCLEARDEPTHFPROC                       soil_glad_glClearDepthf                       = NULL;
PFNGLCLEARSTENCILPROC                      soil_glad_glClearStencil                      = NULL;
PFNGLCLIENTWAITSYNCPROC                    soil_glad_glClientWaitSync                    = NULL;
PFNGLCOLORMASKPROC                         soil_glad_glColorMask                         = NULL;
PFNGLCOLORMASKIPROC                        soil_glad_glColorMaski                        = NULL;
PFNGLCOMPILESHADERPROC                     soil_glad_glCompileShader                     = NULL;
PFNGLCOMPRESSEDTEXIMAGE1DPROC              soil_glad_glCompressedTexImage1D              = NULL;
PFNGLCOMPRESSEDTEXIMAGE2DPROC              soil_glad_glCompressedTexImage2D              = NULL;
PFNGLCOMPRESSEDTEXIMAGE3DPROC              soil_glad_glCompressedTexImage3D              = NULL;
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC           soil_glad_glCompressedTexSubImage1D           = NULL;
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC           soil_glad_glCompressedTexSubImage2D           = NULL;
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC           soil_glad_glCompressedTexSubImage3D           = NULL;
PFNGLCOPYBUFFERSUBDATAPROC                 soil_glad_glCopyBufferSubData                 = NULL;
PFNGLCOPYIMAGESUBDATAPROC                  soil_glad_glCopyImageSubData                  = NULL;
PFNGLCOPYTEXIMAGE1DPROC                    soil_glad_glCopyTexImage1D                    = NULL;
PFNGLCOPYTEXIMAGE2DPROC                    soil_glad_glCopyTexImage2D                    = NULL;
PFNGLCOPYTEXSUBIMAGE1DPROC                 soil_glad_glCopyTexSubImage1D                 = NULL;
PFNGLCOPYTEXSUBIMAGE2DPROC                 soil_glad_glCopyTexSubImage2D                 = NULL;
PFNGLCOPYTEXSUBIMAGE3DPROC                 soil_glad_glCopyTexSubImage3D                 = NULL;
PFNGLCREATEMEMORYOBJECTSEXTPROC            soil_glad_glCreateMemoryObjectsEXT            = NULL;
PFNGLCREATEPROGRAMPROC                     soil_glad_glCreateProgram                     = NULL;
PFNGLCREATESHADERPROC                      soil_glad_glCreateShader                      = NULL;
PFNGLCREATESHADERPROGRAMVPROC              soil_glad_glCreateShaderProgramv              = NULL;
PFNGLCULLFACEPROC                          soil_glad_glCullFace                          = NULL;
PFNGLDEBUGMESSAGECALLBACKPROC              soil_glad_glDebugMessageCallback              = NULL;
PFNGLDEBUGMESSAGECONTROLPROC               soil_glad_glDebugMessageControl               = NULL;
PFNGLDEBUGMESSAGEINSERTPROC                soil_glad_glDebugMessageInsert                = NULL;
PFNGLDELETEBUFFERSPROC                     soil_glad_glDeleteBuffers                     = NULL;
PFNGLDELETEFRAMEBUFFERSPROC                soil_glad_glDeleteFramebuffers                = NULL;
PFNGLDELETEMEMORYOBJECTSEXTPROC            soil_glad_glDeleteMemoryObjectsEXT            = NULL;
PFNGLDELETEPROGRAMPROC                     soil_glad_glDeleteProgram                     = NULL;
PFNGLDELETEPROGRAMPIPELINESPROC            soil_glad_glDeleteProgramPipelines            = NULL;
PFNGLDELETEQUERIESPROC                     soil_glad_glDeleteQueries                     = NULL;
PFNGLDELETERENDERBUFFERSPROC               soil_glad_glDeleteRenderbuffers               = NULL;
PFNGLDELETESAMPLERSPROC                    soil_glad_glDeleteSamplers                    = NULL;
PFNGLDELETESHADERPROC                      soil_glad_glDeleteShader                      = NULL;
PFNGLDELETESYNCPROC                        soil_glad_glDeleteSync                        = NULL;
PFNGLDELETETEXTURESPROC                    soil_glad_glDeleteTextures                    = NULL;
PFNGLDELETETRANSFORMFEEDBACKSPROC          soil_glad_glDeleteTransformFeedbacks          = NULL;
PFNGLDELETEVERTEXARRAYSPROC                soil_glad_glDeleteVertexArrays                = NULL;
PFNGLDEPTHFUNCPROC                         soil_glad_glDepthFunc                         = NULL;
PFNGLDEPTHMASKPROC                         soil_glad_glDepthMask                         = NULL;
PFNGLDEPTHRANGEPROC                        soil_glad_glDepthRange                        = NULL;
PFNGLDEPTHRANGEARRAYVPROC                  soil_glad_glDepthRangeArrayv                  = NULL;
PFNGLDEPTHRANGEINDEXEDPROC                 soil_glad_glDepthRangeIndexed                 = NULL;
PFNGLDEPTHRANGEFPROC                       soil_glad_glDepthRangef                       = NULL;
PFNGLDETACHSHADERPROC                      soil_glad_glDetachShader                      = NULL;
PFNGLDISABLEPROC                           soil_glad_glDisable                           = NULL;
PFNGLDISABLEVERTEXATTRIBARRAYPROC          soil_glad_glDisableVertexAttribArray          = NULL;
PFNGLDISABLEIPROC                          soil_glad_glDisablei                          = NULL;
PFNGLDISPATCHCOMPUTEPROC                   soil_glad_glDispatchCompute                   = NULL;
PFNGLDISPATCHCOMPUTEINDIRECTPROC           soil_glad_glDispatchComputeIndirect           = NULL;
PFNGLDRAWARRAYSPROC                        soil_glad_glDrawArrays                        = NULL;
PFNGLDRAWARRAYSINDIRECTPROC                soil_glad_glDrawArraysIndirect                = NULL;
PFNGLDRAWARRAYSINSTANCEDPROC               soil_glad_glDrawArraysInstanced               = NULL;
PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC   soil_glad_glDrawArraysInstancedBaseInstance   = NULL;
PFNGLDRAWBUFFERPROC                        soil_glad_glDrawBuffer                        = NULL;
PFNGLDRAWBUFFERSPROC                       soil_glad_glDrawBuffers                       = NULL;
PFNGLDRAWELEMENTSPROC                      soil_glad_glDrawElements                      = NULL;
PFNGLDRAWELEMENTSBASEVERTEXPROC            soil_glad_glDrawElementsBaseVertex            = NULL;
PFNGLDRAWELEMENTSINDIRECTPROC              soil_glad_glDrawElementsIndirect              = NULL;
PFNGLDRAWELEMENTSINSTANCEDPROC             soil_glad_glDrawElementsInstanced             = NULL;
PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC soil_glad_glDrawElementsInstancedBaseInstance = NULL;
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC   soil_glad_glDrawElementsInstancedBaseVertex   = NULL;
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC
soil_glad_glDrawElementsInstancedBaseVertexBaseInstance                                  = NULL;
PFNGLDRAWRANGEELEMENTSPROC                    soil_glad_glDrawRangeElements              = NULL;
PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC          soil_glad_glDrawRangeElementsBaseVertex    = NULL;
PFNGLDRAWTRANSFORMFEEDBACKPROC                soil_glad_glDrawTransformFeedback          = NULL;
PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC       soil_glad_glDrawTransformFeedbackInstanced = NULL;
PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC          soil_glad_glDrawTransformFeedbackStream    = NULL;
PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC soil_glad_glDrawTransformFeedbackStreamInstanced =
    NULL;
PFNGLENABLEPROC                              soil_glad_glEnable                         = NULL;
PFNGLENABLEVERTEXATTRIBARRAYPROC             soil_glad_glEnableVertexAttribArray        = NULL;
PFNGLENABLEIPROC                             soil_glad_glEnablei                        = NULL;
PFNGLENDCONDITIONALRENDERPROC                soil_glad_glEndConditionalRender           = NULL;
PFNGLENDQUERYPROC                            soil_glad_glEndQuery                       = NULL;
PFNGLENDQUERYINDEXEDPROC                     soil_glad_glEndQueryIndexed                = NULL;
PFNGLENDTRANSFORMFEEDBACKPROC                soil_glad_glEndTransformFeedback           = NULL;
PFNGLFENCESYNCPROC                           soil_glad_glFenceSync                      = NULL;
PFNGLFINISHPROC                              soil_glad_glFinish                         = NULL;
PFNGLFLUSHPROC                               soil_glad_glFlush                          = NULL;
PFNGLFLUSHMAPPEDBUFFERRANGEPROC              soil_glad_glFlushMappedBufferRange         = NULL;
PFNGLFRAMEBUFFERPARAMETERIPROC               soil_glad_glFramebufferParameteri          = NULL;
PFNGLFRAMEBUFFERRENDERBUFFERPROC             soil_glad_glFramebufferRenderbuffer        = NULL;
PFNGLFRAMEBUFFERTEXTUREPROC                  soil_glad_glFramebufferTexture             = NULL;
PFNGLFRAMEBUFFERTEXTURE1DPROC                soil_glad_glFramebufferTexture1D           = NULL;
PFNGLFRAMEBUFFERTEXTURE2DPROC                soil_glad_glFramebufferTexture2D           = NULL;
PFNGLFRAMEBUFFERTEXTURE3DPROC                soil_glad_glFramebufferTexture3D           = NULL;
PFNGLFRAMEBUFFERTEXTURELAYERPROC             soil_glad_glFramebufferTextureLayer        = NULL;
PFNGLFRONTFACEPROC                           soil_glad_glFrontFace                      = NULL;
PFNGLGENBUFFERSPROC                          soil_glad_glGenBuffers                     = NULL;
PFNGLGENFRAMEBUFFERSPROC                     soil_glad_glGenFramebuffers                = NULL;
PFNGLGENPROGRAMPIPELINESPROC                 soil_glad_glGenProgramPipelines            = NULL;
PFNGLGENQUERIESPROC                          soil_glad_glGenQueries                     = NULL;
PFNGLGENRENDERBUFFERSPROC                    soil_glad_glGenRenderbuffers               = NULL;
PFNGLGENSAMPLERSPROC                         soil_glad_glGenSamplers                    = NULL;
PFNGLGENTEXTURESPROC                         soil_glad_glGenTextures                    = NULL;
PFNGLGENTRANSFORMFEEDBACKSPROC               soil_glad_glGenTransformFeedbacks          = NULL;
PFNGLGENVERTEXARRAYSPROC                     soil_glad_glGenVertexArrays                = NULL;
PFNGLGENERATEMIPMAPPROC                      soil_glad_glGenerateMipmap                 = NULL;
PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC      soil_glad_glGetActiveAtomicCounterBufferiv = NULL;
PFNGLGETACTIVEATTRIBPROC                     soil_glad_glGetActiveAttrib                = NULL;
PFNGLGETACTIVESUBROUTINENAMEPROC             soil_glad_glGetActiveSubroutineName        = NULL;
PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC      soil_glad_glGetActiveSubroutineUniformName = NULL;
PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC        soil_glad_glGetActiveSubroutineUniformiv   = NULL;
PFNGLGETACTIVEUNIFORMPROC                    soil_glad_glGetActiveUniform               = NULL;
PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC           soil_glad_glGetActiveUniformBlockName      = NULL;
PFNGLGETACTIVEUNIFORMBLOCKIVPROC             soil_glad_glGetActiveUniformBlockiv        = NULL;
PFNGLGETACTIVEUNIFORMNAMEPROC                soil_glad_glGetActiveUniformName           = NULL;
PFNGLGETACTIVEUNIFORMSIVPROC                 soil_glad_glGetActiveUniformsiv            = NULL;
PFNGLGETATTACHEDSHADERSPROC                  soil_glad_glGetAttachedShaders             = NULL;
PFNGLGETATTRIBLOCATIONPROC                   soil_glad_glGetAttribLocation              = NULL;
PFNGLGETBOOLEANI_VPROC                       soil_glad_glGetBooleani_v                  = NULL;
PFNGLGETBOOLEANVPROC                         soil_glad_glGetBooleanv                    = NULL;
PFNGLGETBUFFERPARAMETERI64VPROC              soil_glad_glGetBufferParameteri64v         = NULL;
PFNGLGETBUFFERPARAMETERIVPROC                soil_glad_glGetBufferParameteriv           = NULL;
PFNGLGETBUFFERPOINTERVPROC                   soil_glad_glGetBufferPointerv              = NULL;
PFNGLGETBUFFERSUBDATAPROC                    soil_glad_glGetBufferSubData               = NULL;
PFNGLGETCOMPRESSEDTEXIMAGEPROC               soil_glad_glGetCompressedTexImage          = NULL;
PFNGLGETDEBUGMESSAGELOGPROC                  soil_glad_glGetDebugMessageLog             = NULL;
PFNGLGETDOUBLEI_VPROC                        soil_glad_glGetDoublei_v                   = NULL;
PFNGLGETDOUBLEVPROC                          soil_glad_glGetDoublev                     = NULL;
PFNGLGETERRORPROC                            soil_glad_glGetError                       = NULL;
PFNGLGETFLOATI_VPROC                         soil_glad_glGetFloati_v                    = NULL;
PFNGLGETFLOATVPROC                           soil_glad_glGetFloatv                      = NULL;
PFNGLGETFRAGDATAINDEXPROC                    soil_glad_glGetFragDataIndex               = NULL;
PFNGLGETFRAGDATALOCATIONPROC                 soil_glad_glGetFragDataLocation            = NULL;
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC soil_glad_glGetFramebufferAttachmentParameteriv =
    NULL;
PFNGLGETFRAMEBUFFERPARAMETERIVPROC         soil_glad_glGetFramebufferParameteriv         = NULL;
PFNGLGETINTEGER64I_VPROC                   soil_glad_glGetInteger64i_v                   = NULL;
PFNGLGETINTEGER64VPROC                     soil_glad_glGetInteger64v                     = NULL;
PFNGLGETINTEGERI_VPROC                     soil_glad_glGetIntegeri_v                     = NULL;
PFNGLGETINTEGERVPROC                       soil_glad_glGetIntegerv                       = NULL;
PFNGLGETINTERNALFORMATI64VPROC             soil_glad_glGetInternalformati64v             = NULL;
PFNGLGETINTERNALFORMATIVPROC               soil_glad_glGetInternalformativ               = NULL;
PFNGLGETMEMORYOBJECTPARAMETERIVEXTPROC     soil_glad_glGetMemoryObjectParameterivEXT     = NULL;
PFNGLGETMULTISAMPLEFVPROC                  soil_glad_glGetMultisamplefv                  = NULL;
PFNGLGETOBJECTLABELPROC                    soil_glad_glGetObjectLabel                    = NULL;
PFNGLGETOBJECTPTRLABELPROC                 soil_glad_glGetObjectPtrLabel                 = NULL;
PFNGLGETPOINTERVPROC                       soil_glad_glGetPointerv                       = NULL;
PFNGLGETPROGRAMBINARYPROC                  soil_glad_glGetProgramBinary                  = NULL;
PFNGLGETPROGRAMINFOLOGPROC                 soil_glad_glGetProgramInfoLog                 = NULL;
PFNGLGETPROGRAMINTERFACEIVPROC             soil_glad_glGetProgramInterfaceiv             = NULL;
PFNGLGETPROGRAMPIPELINEINFOLOGPROC         soil_glad_glGetProgramPipelineInfoLog         = NULL;
PFNGLGETPROGRAMPIPELINEIVPROC              soil_glad_glGetProgramPipelineiv              = NULL;
PFNGLGETPROGRAMRESOURCEINDEXPROC           soil_glad_glGetProgramResourceIndex           = NULL;
PFNGLGETPROGRAMRESOURCELOCATIONPROC        soil_glad_glGetProgramResourceLocation        = NULL;
PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC   soil_glad_glGetProgramResourceLocationIndex   = NULL;
PFNGLGETPROGRAMRESOURCENAMEPROC            soil_glad_glGetProgramResourceName            = NULL;
PFNGLGETPROGRAMRESOURCEIVPROC              soil_glad_glGetProgramResourceiv              = NULL;
PFNGLGETPROGRAMSTAGEIVPROC                 soil_glad_glGetProgramStageiv                 = NULL;
PFNGLGETPROGRAMIVPROC                      soil_glad_glGetProgramiv                      = NULL;
PFNGLGETQUERYINDEXEDIVPROC                 soil_glad_glGetQueryIndexediv                 = NULL;
PFNGLGETQUERYOBJECTI64VPROC                soil_glad_glGetQueryObjecti64v                = NULL;
PFNGLGETQUERYOBJECTIVPROC                  soil_glad_glGetQueryObjectiv                  = NULL;
PFNGLGETQUERYOBJECTUI64VPROC               soil_glad_glGetQueryObjectui64v               = NULL;
PFNGLGETQUERYOBJECTUIVPROC                 soil_glad_glGetQueryObjectuiv                 = NULL;
PFNGLGETQUERYIVPROC                        soil_glad_glGetQueryiv                        = NULL;
PFNGLGETRENDERBUFFERPARAMETERIVPROC        soil_glad_glGetRenderbufferParameteriv        = NULL;
PFNGLGETSAMPLERPARAMETERIIVPROC            soil_glad_glGetSamplerParameterIiv            = NULL;
PFNGLGETSAMPLERPARAMETERIUIVPROC           soil_glad_glGetSamplerParameterIuiv           = NULL;
PFNGLGETSAMPLERPARAMETERFVPROC             soil_glad_glGetSamplerParameterfv             = NULL;
PFNGLGETSAMPLERPARAMETERIVPROC             soil_glad_glGetSamplerParameteriv             = NULL;
PFNGLGETSHADERINFOLOGPROC                  soil_glad_glGetShaderInfoLog                  = NULL;
PFNGLGETSHADERPRECISIONFORMATPROC          soil_glad_glGetShaderPrecisionFormat          = NULL;
PFNGLGETSHADERSOURCEPROC                   soil_glad_glGetShaderSource                   = NULL;
PFNGLGETSHADERIVPROC                       soil_glad_glGetShaderiv                       = NULL;
PFNGLGETSTRINGPROC                         soil_glad_glGetString                         = NULL;
PFNGLGETSTRINGIPROC                        soil_glad_glGetStringi                        = NULL;
PFNGLGETSUBROUTINEINDEXPROC                soil_glad_glGetSubroutineIndex                = NULL;
PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC      soil_glad_glGetSubroutineUniformLocation      = NULL;
PFNGLGETSYNCIVPROC                         soil_glad_glGetSynciv                         = NULL;
PFNGLGETTEXIMAGEPROC                       soil_glad_glGetTexImage                       = NULL;
PFNGLGETTEXLEVELPARAMETERFVPROC            soil_glad_glGetTexLevelParameterfv            = NULL;
PFNGLGETTEXLEVELPARAMETERIVPROC            soil_glad_glGetTexLevelParameteriv            = NULL;
PFNGLGETTEXPARAMETERIIVPROC                soil_glad_glGetTexParameterIiv                = NULL;
PFNGLGETTEXPARAMETERIUIVPROC               soil_glad_glGetTexParameterIuiv               = NULL;
PFNGLGETTEXPARAMETERFVPROC                 soil_glad_glGetTexParameterfv                 = NULL;
PFNGLGETTEXPARAMETERIVPROC                 soil_glad_glGetTexParameteriv                 = NULL;
PFNGLGETTRANSFORMFEEDBACKVARYINGPROC       soil_glad_glGetTransformFeedbackVarying       = NULL;
PFNGLGETUNIFORMBLOCKINDEXPROC              soil_glad_glGetUniformBlockIndex              = NULL;
PFNGLGETUNIFORMINDICESPROC                 soil_glad_glGetUniformIndices                 = NULL;
PFNGLGETUNIFORMLOCATIONPROC                soil_glad_glGetUniformLocation                = NULL;
PFNGLGETUNIFORMSUBROUTINEUIVPROC           soil_glad_glGetUniformSubroutineuiv           = NULL;
PFNGLGETUNIFORMDVPROC                      soil_glad_glGetUniformdv                      = NULL;
PFNGLGETUNIFORMFVPROC                      soil_glad_glGetUniformfv                      = NULL;
PFNGLGETUNIFORMIVPROC                      soil_glad_glGetUniformiv                      = NULL;
PFNGLGETUNIFORMUIVPROC                     soil_glad_glGetUniformuiv                     = NULL;
PFNGLGETUNSIGNEDBYTEI_VEXTPROC             soil_glad_glGetUnsignedBytei_vEXT             = NULL;
PFNGLGETUNSIGNEDBYTEVEXTPROC               soil_glad_glGetUnsignedBytevEXT               = NULL;
PFNGLGETVERTEXATTRIBIIVPROC                soil_glad_glGetVertexAttribIiv                = NULL;
PFNGLGETVERTEXATTRIBIUIVPROC               soil_glad_glGetVertexAttribIuiv               = NULL;
PFNGLGETVERTEXATTRIBLDVPROC                soil_glad_glGetVertexAttribLdv                = NULL;
PFNGLGETVERTEXATTRIBPOINTERVPROC           soil_glad_glGetVertexAttribPointerv           = NULL;
PFNGLGETVERTEXATTRIBDVPROC                 soil_glad_glGetVertexAttribdv                 = NULL;
PFNGLGETVERTEXATTRIBFVPROC                 soil_glad_glGetVertexAttribfv                 = NULL;
PFNGLGETVERTEXATTRIBIVPROC                 soil_glad_glGetVertexAttribiv                 = NULL;
PFNGLHINTPROC                              soil_glad_glHint                              = NULL;
PFNGLIMPORTMEMORYWIN32HANDLEEXTPROC        soil_glad_glImportMemoryWin32HandleEXT        = NULL;
PFNGLIMPORTMEMORYWIN32NAMEEXTPROC          soil_glad_glImportMemoryWin32NameEXT          = NULL;
PFNGLINVALIDATEBUFFERDATAPROC              soil_glad_glInvalidateBufferData              = NULL;
PFNGLINVALIDATEBUFFERSUBDATAPROC           soil_glad_glInvalidateBufferSubData           = NULL;
PFNGLINVALIDATEFRAMEBUFFERPROC             soil_glad_glInvalidateFramebuffer             = NULL;
PFNGLINVALIDATESUBFRAMEBUFFERPROC          soil_glad_glInvalidateSubFramebuffer          = NULL;
PFNGLINVALIDATETEXIMAGEPROC                soil_glad_glInvalidateTexImage                = NULL;
PFNGLINVALIDATETEXSUBIMAGEPROC             soil_glad_glInvalidateTexSubImage             = NULL;
PFNGLISBUFFERPROC                          soil_glad_glIsBuffer                          = NULL;
PFNGLISENABLEDPROC                         soil_glad_glIsEnabled                         = NULL;
PFNGLISENABLEDIPROC                        soil_glad_glIsEnabledi                        = NULL;
PFNGLISFRAMEBUFFERPROC                     soil_glad_glIsFramebuffer                     = NULL;
PFNGLISMEMORYOBJECTEXTPROC                 soil_glad_glIsMemoryObjectEXT                 = NULL;
PFNGLISPROGRAMPROC                         soil_glad_glIsProgram                         = NULL;
PFNGLISPROGRAMPIPELINEPROC                 soil_glad_glIsProgramPipeline                 = NULL;
PFNGLISQUERYPROC                           soil_glad_glIsQuery                           = NULL;
PFNGLISRENDERBUFFERPROC                    soil_glad_glIsRenderbuffer                    = NULL;
PFNGLISSAMPLERPROC                         soil_glad_glIsSampler                         = NULL;
PFNGLISSHADERPROC                          soil_glad_glIsShader                          = NULL;
PFNGLISSYNCPROC                            soil_glad_glIsSync                            = NULL;
PFNGLISTEXTUREPROC                         soil_glad_glIsTexture                         = NULL;
PFNGLISTRANSFORMFEEDBACKPROC               soil_glad_glIsTransformFeedback               = NULL;
PFNGLISVERTEXARRAYPROC                     soil_glad_glIsVertexArray                     = NULL;
PFNGLLINEWIDTHPROC                         soil_glad_glLineWidth                         = NULL;
PFNGLLINKPROGRAMPROC                       soil_glad_glLinkProgram                       = NULL;
PFNGLLOGICOPPROC                           soil_glad_glLogicOp                           = NULL;
PFNGLMAPBUFFERPROC                         soil_glad_glMapBuffer                         = NULL;
PFNGLMAPBUFFERRANGEPROC                    soil_glad_glMapBufferRange                    = NULL;
PFNGLMEMORYBARRIERPROC                     soil_glad_glMemoryBarrier                     = NULL;
PFNGLMEMORYOBJECTPARAMETERIVEXTPROC        soil_glad_glMemoryObjectParameterivEXT        = NULL;
PFNGLMINSAMPLESHADINGPROC                  soil_glad_glMinSampleShading                  = NULL;
PFNGLMULTIDRAWARRAYSPROC                   soil_glad_glMultiDrawArrays                   = NULL;
PFNGLMULTIDRAWARRAYSINDIRECTPROC           soil_glad_glMultiDrawArraysIndirect           = NULL;
PFNGLMULTIDRAWELEMENTSPROC                 soil_glad_glMultiDrawElements                 = NULL;
PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC       soil_glad_glMultiDrawElementsBaseVertex       = NULL;
PFNGLMULTIDRAWELEMENTSINDIRECTPROC         soil_glad_glMultiDrawElementsIndirect         = NULL;
PFNGLNAMEDBUFFERSTORAGEMEMEXTPROC          soil_glad_glNamedBufferStorageMemEXT          = NULL;
PFNGLOBJECTLABELPROC                       soil_glad_glObjectLabel                       = NULL;
PFNGLOBJECTPTRLABELPROC                    soil_glad_glObjectPtrLabel                    = NULL;
PFNGLPATCHPARAMETERFVPROC                  soil_glad_glPatchParameterfv                  = NULL;
PFNGLPATCHPARAMETERIPROC                   soil_glad_glPatchParameteri                   = NULL;
PFNGLPAUSETRANSFORMFEEDBACKPROC            soil_glad_glPauseTransformFeedback            = NULL;
PFNGLPIXELSTOREFPROC                       soil_glad_glPixelStoref                       = NULL;
PFNGLPIXELSTOREIPROC                       soil_glad_glPixelStorei                       = NULL;
PFNGLPOINTPARAMETERFPROC                   soil_glad_glPointParameterf                   = NULL;
PFNGLPOINTPARAMETERFVPROC                  soil_glad_glPointParameterfv                  = NULL;
PFNGLPOINTPARAMETERIPROC                   soil_glad_glPointParameteri                   = NULL;
PFNGLPOINTPARAMETERIVPROC                  soil_glad_glPointParameteriv                  = NULL;
PFNGLPOINTSIZEPROC                         soil_glad_glPointSize                         = NULL;
PFNGLPOLYGONMODEPROC                       soil_glad_glPolygonMode                       = NULL;
PFNGLPOLYGONOFFSETPROC                     soil_glad_glPolygonOffset                     = NULL;
PFNGLPOPDEBUGGROUPPROC                     soil_glad_glPopDebugGroup                     = NULL;
PFNGLPRIMITIVERESTARTINDEXPROC             soil_glad_glPrimitiveRestartIndex             = NULL;
PFNGLPROGRAMBINARYPROC                     soil_glad_glProgramBinary                     = NULL;
PFNGLPROGRAMPARAMETERIPROC                 soil_glad_glProgramParameteri                 = NULL;
PFNGLPROGRAMUNIFORM1DPROC                  soil_glad_glProgramUniform1d                  = NULL;
PFNGLPROGRAMUNIFORM1DVPROC                 soil_glad_glProgramUniform1dv                 = NULL;
PFNGLPROGRAMUNIFORM1FPROC                  soil_glad_glProgramUniform1f                  = NULL;
PFNGLPROGRAMUNIFORM1FVPROC                 soil_glad_glProgramUniform1fv                 = NULL;
PFNGLPROGRAMUNIFORM1IPROC                  soil_glad_glProgramUniform1i                  = NULL;
PFNGLPROGRAMUNIFORM1IVPROC                 soil_glad_glProgramUniform1iv                 = NULL;
PFNGLPROGRAMUNIFORM1UIPROC                 soil_glad_glProgramUniform1ui                 = NULL;
PFNGLPROGRAMUNIFORM1UIVPROC                soil_glad_glProgramUniform1uiv                = NULL;
PFNGLPROGRAMUNIFORM2DPROC                  soil_glad_glProgramUniform2d                  = NULL;
PFNGLPROGRAMUNIFORM2DVPROC                 soil_glad_glProgramUniform2dv                 = NULL;
PFNGLPROGRAMUNIFORM2FPROC                  soil_glad_glProgramUniform2f                  = NULL;
PFNGLPROGRAMUNIFORM2FVPROC                 soil_glad_glProgramUniform2fv                 = NULL;
PFNGLPROGRAMUNIFORM2IPROC                  soil_glad_glProgramUniform2i                  = NULL;
PFNGLPROGRAMUNIFORM2IVPROC                 soil_glad_glProgramUniform2iv                 = NULL;
PFNGLPROGRAMUNIFORM2UIPROC                 soil_glad_glProgramUniform2ui                 = NULL;
PFNGLPROGRAMUNIFORM2UIVPROC                soil_glad_glProgramUniform2uiv                = NULL;
PFNGLPROGRAMUNIFORM3DPROC                  soil_glad_glProgramUniform3d                  = NULL;
PFNGLPROGRAMUNIFORM3DVPROC                 soil_glad_glProgramUniform3dv                 = NULL;
PFNGLPROGRAMUNIFORM3FPROC                  soil_glad_glProgramUniform3f                  = NULL;
PFNGLPROGRAMUNIFORM3FVPROC                 soil_glad_glProgramUniform3fv                 = NULL;
PFNGLPROGRAMUNIFORM3IPROC                  soil_glad_glProgramUniform3i                  = NULL;
PFNGLPROGRAMUNIFORM3IVPROC                 soil_glad_glProgramUniform3iv                 = NULL;
PFNGLPROGRAMUNIFORM3UIPROC                 soil_glad_glProgramUniform3ui                 = NULL;
PFNGLPROGRAMUNIFORM3UIVPROC                soil_glad_glProgramUniform3uiv                = NULL;
PFNGLPROGRAMUNIFORM4DPROC                  soil_glad_glProgramUniform4d                  = NULL;
PFNGLPROGRAMUNIFORM4DVPROC                 soil_glad_glProgramUniform4dv                 = NULL;
PFNGLPROGRAMUNIFORM4FPROC                  soil_glad_glProgramUniform4f                  = NULL;
PFNGLPROGRAMUNIFORM4FVPROC                 soil_glad_glProgramUniform4fv                 = NULL;
PFNGLPROGRAMUNIFORM4IPROC                  soil_glad_glProgramUniform4i                  = NULL;
PFNGLPROGRAMUNIFORM4IVPROC                 soil_glad_glProgramUniform4iv                 = NULL;
PFNGLPROGRAMUNIFORM4UIPROC                 soil_glad_glProgramUniform4ui                 = NULL;
PFNGLPROGRAMUNIFORM4UIVPROC                soil_glad_glProgramUniform4uiv                = NULL;
PFNGLPROGRAMUNIFORMMATRIX2DVPROC           soil_glad_glProgramUniformMatrix2dv           = NULL;
PFNGLPROGRAMUNIFORMMATRIX2FVPROC           soil_glad_glProgramUniformMatrix2fv           = NULL;
PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC         soil_glad_glProgramUniformMatrix2x3dv         = NULL;
PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC         soil_glad_glProgramUniformMatrix2x3fv         = NULL;
PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC         soil_glad_glProgramUniformMatrix2x4dv         = NULL;
PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC         soil_glad_glProgramUniformMatrix2x4fv         = NULL;
PFNGLPROGRAMUNIFORMMATRIX3DVPROC           soil_glad_glProgramUniformMatrix3dv           = NULL;
PFNGLPROGRAMUNIFORMMATRIX3FVPROC           soil_glad_glProgramUniformMatrix3fv           = NULL;
PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC         soil_glad_glProgramUniformMatrix3x2dv         = NULL;
PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC         soil_glad_glProgramUniformMatrix3x2fv         = NULL;
PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC         soil_glad_glProgramUniformMatrix3x4dv         = NULL;
PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC         soil_glad_glProgramUniformMatrix3x4fv         = NULL;
PFNGLPROGRAMUNIFORMMATRIX4DVPROC           soil_glad_glProgramUniformMatrix4dv           = NULL;
PFNGLPROGRAMUNIFORMMATRIX4FVPROC           soil_glad_glProgramUniformMatrix4fv           = NULL;
PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC         soil_glad_glProgramUniformMatrix4x2dv         = NULL;
PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC         soil_glad_glProgramUniformMatrix4x2fv         = NULL;
PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC         soil_glad_glProgramUniformMatrix4x3dv         = NULL;
PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC         soil_glad_glProgramUniformMatrix4x3fv         = NULL;
PFNGLPROVOKINGVERTEXPROC                   soil_glad_glProvokingVertex                   = NULL;
PFNGLPUSHDEBUGGROUPPROC                    soil_glad_glPushDebugGroup                    = NULL;
PFNGLQUERYCOUNTERPROC                      soil_glad_glQueryCounter                      = NULL;
PFNGLREADBUFFERPROC                        soil_glad_glReadBuffer                        = NULL;
PFNGLREADPIXELSPROC                        soil_glad_glReadPixels                        = NULL;
PFNGLRELEASESHADERCOMPILERPROC             soil_glad_glReleaseShaderCompiler             = NULL;
PFNGLRENDERBUFFERSTORAGEPROC               soil_glad_glRenderbufferStorage               = NULL;
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC    soil_glad_glRenderbufferStorageMultisample    = NULL;
PFNGLRESUMETRANSFORMFEEDBACKPROC           soil_glad_glResumeTransformFeedback           = NULL;
PFNGLSAMPLECOVERAGEPROC                    soil_glad_glSampleCoverage                    = NULL;
PFNGLSAMPLEMASKIPROC                       soil_glad_glSampleMaski                       = NULL;
PFNGLSAMPLERPARAMETERIIVPROC               soil_glad_glSamplerParameterIiv               = NULL;
PFNGLSAMPLERPARAMETERIUIVPROC              soil_glad_glSamplerParameterIuiv              = NULL;
PFNGLSAMPLERPARAMETERFPROC                 soil_glad_glSamplerParameterf                 = NULL;
PFNGLSAMPLERPARAMETERFVPROC                soil_glad_glSamplerParameterfv                = NULL;
PFNGLSAMPLERPARAMETERIPROC                 soil_glad_glSamplerParameteri                 = NULL;
PFNGLSAMPLERPARAMETERIVPROC                soil_glad_glSamplerParameteriv                = NULL;
PFNGLSCISSORPROC                           soil_glad_glScissor                           = NULL;
PFNGLSCISSORARRAYVPROC                     soil_glad_glScissorArrayv                     = NULL;
PFNGLSCISSORINDEXEDPROC                    soil_glad_glScissorIndexed                    = NULL;
PFNGLSCISSORINDEXEDVPROC                   soil_glad_glScissorIndexedv                   = NULL;
PFNGLSHADERBINARYPROC                      soil_glad_glShaderBinary                      = NULL;
PFNGLSHADERSOURCEPROC                      soil_glad_glShaderSource                      = NULL;
PFNGLSHADERSTORAGEBLOCKBINDINGPROC         soil_glad_glShaderStorageBlockBinding         = NULL;
PFNGLSTENCILFUNCPROC                       soil_glad_glStencilFunc                       = NULL;
PFNGLSTENCILFUNCSEPARATEPROC               soil_glad_glStencilFuncSeparate               = NULL;
PFNGLSTENCILMASKPROC                       soil_glad_glStencilMask                       = NULL;
PFNGLSTENCILMASKSEPARATEPROC               soil_glad_glStencilMaskSeparate               = NULL;
PFNGLSTENCILOPPROC                         soil_glad_glStencilOp                         = NULL;
PFNGLSTENCILOPSEPARATEPROC                 soil_glad_glStencilOpSeparate                 = NULL;
PFNGLTEXBUFFERPROC                         soil_glad_glTexBuffer                         = NULL;
PFNGLTEXBUFFERRANGEPROC                    soil_glad_glTexBufferRange                    = NULL;
PFNGLTEXIMAGE1DPROC                        soil_glad_glTexImage1D                        = NULL;
PFNGLTEXIMAGE2DPROC                        soil_glad_glTexImage2D                        = NULL;
PFNGLTEXIMAGE2DMULTISAMPLEPROC             soil_glad_glTexImage2DMultisample             = NULL;
PFNGLTEXIMAGE3DPROC                        soil_glad_glTexImage3D                        = NULL;
PFNGLTEXIMAGE3DMULTISAMPLEPROC             soil_glad_glTexImage3DMultisample             = NULL;
PFNGLTEXPARAMETERIIVPROC                   soil_glad_glTexParameterIiv                   = NULL;
PFNGLTEXPARAMETERIUIVPROC                  soil_glad_glTexParameterIuiv                  = NULL;
PFNGLTEXPARAMETERFPROC                     soil_glad_glTexParameterf                     = NULL;
PFNGLTEXPARAMETERFVPROC                    soil_glad_glTexParameterfv                    = NULL;
PFNGLTEXPARAMETERIPROC                     soil_glad_glTexParameteri                     = NULL;
PFNGLTEXPARAMETERIVPROC                    soil_glad_glTexParameteriv                    = NULL;
PFNGLTEXSTORAGE1DPROC                      soil_glad_glTexStorage1D                      = NULL;
PFNGLTEXSTORAGE2DPROC                      soil_glad_glTexStorage2D                      = NULL;
PFNGLTEXSTORAGE2DMULTISAMPLEPROC           soil_glad_glTexStorage2DMultisample           = NULL;
PFNGLTEXSTORAGE3DPROC                      soil_glad_glTexStorage3D                      = NULL;
PFNGLTEXSTORAGE3DMULTISAMPLEPROC           soil_glad_glTexStorage3DMultisample           = NULL;
PFNGLTEXSTORAGEMEM1DEXTPROC                soil_glad_glTexStorageMem1DEXT                = NULL;
PFNGLTEXSTORAGEMEM2DEXTPROC                soil_glad_glTexStorageMem2DEXT                = NULL;
PFNGLTEXSTORAGEMEM2DMULTISAMPLEEXTPROC     soil_glad_glTexStorageMem2DMultisampleEXT     = NULL;
PFNGLTEXSTORAGEMEM3DEXTPROC                soil_glad_glTexStorageMem3DEXT                = NULL;
PFNGLTEXSTORAGEMEM3DMULTISAMPLEEXTPROC     soil_glad_glTexStorageMem3DMultisampleEXT     = NULL;
PFNGLTEXSUBIMAGE1DPROC                     soil_glad_glTexSubImage1D                     = NULL;
PFNGLTEXSUBIMAGE2DPROC                     soil_glad_glTexSubImage2D                     = NULL;
PFNGLTEXSUBIMAGE3DPROC                     soil_glad_glTexSubImage3D                     = NULL;
PFNGLTEXTURESTORAGEMEM1DEXTPROC            soil_glad_glTextureStorageMem1DEXT            = NULL;
PFNGLTEXTURESTORAGEMEM2DEXTPROC            soil_glad_glTextureStorageMem2DEXT            = NULL;
PFNGLTEXTURESTORAGEMEM2DMULTISAMPLEEXTPROC soil_glad_glTextureStorageMem2DMultisampleEXT = NULL;
PFNGLTEXTURESTORAGEMEM3DEXTPROC            soil_glad_glTextureStorageMem3DEXT            = NULL;
PFNGLTEXTURESTORAGEMEM3DMULTISAMPLEEXTPROC soil_glad_glTextureStorageMem3DMultisampleEXT = NULL;
PFNGLTEXTUREVIEWPROC                       soil_glad_glTextureView                       = NULL;
PFNGLTRANSFORMFEEDBACKVARYINGSPROC         soil_glad_glTransformFeedbackVaryings         = NULL;
PFNGLUNIFORM1DPROC                         soil_glad_glUniform1d                         = NULL;
PFNGLUNIFORM1DVPROC                        soil_glad_glUniform1dv                        = NULL;
PFNGLUNIFORM1FPROC                         soil_glad_glUniform1f                         = NULL;
PFNGLUNIFORM1FVPROC                        soil_glad_glUniform1fv                        = NULL;
PFNGLUNIFORM1IPROC                         soil_glad_glUniform1i                         = NULL;
PFNGLUNIFORM1IVPROC                        soil_glad_glUniform1iv                        = NULL;
PFNGLUNIFORM1UIPROC                        soil_glad_glUniform1ui                        = NULL;
PFNGLUNIFORM1UIVPROC                       soil_glad_glUniform1uiv                       = NULL;
PFNGLUNIFORM2DPROC                         soil_glad_glUniform2d                         = NULL;
PFNGLUNIFORM2DVPROC                        soil_glad_glUniform2dv                        = NULL;
PFNGLUNIFORM2FPROC                         soil_glad_glUniform2f                         = NULL;
PFNGLUNIFORM2FVPROC                        soil_glad_glUniform2fv                        = NULL;
PFNGLUNIFORM2IPROC                         soil_glad_glUniform2i                         = NULL;
PFNGLUNIFORM2IVPROC                        soil_glad_glUniform2iv                        = NULL;
PFNGLUNIFORM2UIPROC                        soil_glad_glUniform2ui                        = NULL;
PFNGLUNIFORM2UIVPROC                       soil_glad_glUniform2uiv                       = NULL;
PFNGLUNIFORM3DPROC                         soil_glad_glUniform3d                         = NULL;
PFNGLUNIFORM3DVPROC                        soil_glad_glUniform3dv                        = NULL;
PFNGLUNIFORM3FPROC                         soil_glad_glUniform3f                         = NULL;
PFNGLUNIFORM3FVPROC                        soil_glad_glUniform3fv                        = NULL;
PFNGLUNIFORM3IPROC                         soil_glad_glUniform3i                         = NULL;
PFNGLUNIFORM3IVPROC                        soil_glad_glUniform3iv                        = NULL;
PFNGLUNIFORM3UIPROC                        soil_glad_glUniform3ui                        = NULL;
PFNGLUNIFORM3UIVPROC                       soil_glad_glUniform3uiv                       = NULL;
PFNGLUNIFORM4DPROC                         soil_glad_glUniform4d                         = NULL;
PFNGLUNIFORM4DVPROC                        soil_glad_glUniform4dv                        = NULL;
PFNGLUNIFORM4FPROC                         soil_glad_glUniform4f                         = NULL;
PFNGLUNIFORM4FVPROC                        soil_glad_glUniform4fv                        = NULL;
PFNGLUNIFORM4IPROC                         soil_glad_glUniform4i                         = NULL;
PFNGLUNIFORM4IVPROC                        soil_glad_glUniform4iv                        = NULL;
PFNGLUNIFORM4UIPROC                        soil_glad_glUniform4ui                        = NULL;
PFNGLUNIFORM4UIVPROC                       soil_glad_glUniform4uiv                       = NULL;
PFNGLUNIFORMBLOCKBINDINGPROC               soil_glad_glUniformBlockBinding               = NULL;
PFNGLUNIFORMMATRIX2DVPROC                  soil_glad_glUniformMatrix2dv                  = NULL;
PFNGLUNIFORMMATRIX2FVPROC                  soil_glad_glUniformMatrix2fv                  = NULL;
PFNGLUNIFORMMATRIX2X3DVPROC                soil_glad_glUniformMatrix2x3dv                = NULL;
PFNGLUNIFORMMATRIX2X3FVPROC                soil_glad_glUniformMatrix2x3fv                = NULL;
PFNGLUNIFORMMATRIX2X4DVPROC                soil_glad_glUniformMatrix2x4dv                = NULL;
PFNGLUNIFORMMATRIX2X4FVPROC                soil_glad_glUniformMatrix2x4fv                = NULL;
PFNGLUNIFORMMATRIX3DVPROC                  soil_glad_glUniformMatrix3dv                  = NULL;
PFNGLUNIFORMMATRIX3FVPROC                  soil_glad_glUniformMatrix3fv                  = NULL;
PFNGLUNIFORMMATRIX3X2DVPROC                soil_glad_glUniformMatrix3x2dv                = NULL;
PFNGLUNIFORMMATRIX3X2FVPROC                soil_glad_glUniformMatrix3x2fv                = NULL;
PFNGLUNIFORMMATRIX3X4DVPROC                soil_glad_glUniformMatrix3x4dv                = NULL;
PFNGLUNIFORMMATRIX3X4FVPROC                soil_glad_glUniformMatrix3x4fv                = NULL;
PFNGLUNIFORMMATRIX4DVPROC                  soil_glad_glUniformMatrix4dv                  = NULL;
PFNGLUNIFORMMATRIX4FVPROC                  soil_glad_glUniformMatrix4fv                  = NULL;
PFNGLUNIFORMMATRIX4X2DVPROC                soil_glad_glUniformMatrix4x2dv                = NULL;
PFNGLUNIFORMMATRIX4X2FVPROC                soil_glad_glUniformMatrix4x2fv                = NULL;
PFNGLUNIFORMMATRIX4X3DVPROC                soil_glad_glUniformMatrix4x3dv                = NULL;
PFNGLUNIFORMMATRIX4X3FVPROC                soil_glad_glUniformMatrix4x3fv                = NULL;
PFNGLUNIFORMSUBROUTINESUIVPROC             soil_glad_glUniformSubroutinesuiv             = NULL;
PFNGLUNMAPBUFFERPROC                       soil_glad_glUnmapBuffer                       = NULL;
PFNGLUSEPROGRAMPROC                        soil_glad_glUseProgram                        = NULL;
PFNGLUSEPROGRAMSTAGESPROC                  soil_glad_glUseProgramStages                  = NULL;
PFNGLVALIDATEPROGRAMPROC                   soil_glad_glValidateProgram                   = NULL;
PFNGLVALIDATEPROGRAMPIPELINEPROC           soil_glad_glValidateProgramPipeline           = NULL;
PFNGLVERTEXATTRIB1DPROC                    soil_glad_glVertexAttrib1d                    = NULL;
PFNGLVERTEXATTRIB1DVPROC                   soil_glad_glVertexAttrib1dv                   = NULL;
PFNGLVERTEXATTRIB1FPROC                    soil_glad_glVertexAttrib1f                    = NULL;
PFNGLVERTEXATTRIB1FVPROC                   soil_glad_glVertexAttrib1fv                   = NULL;
PFNGLVERTEXATTRIB1SPROC                    soil_glad_glVertexAttrib1s                    = NULL;
PFNGLVERTEXATTRIB1SVPROC                   soil_glad_glVertexAttrib1sv                   = NULL;
PFNGLVERTEXATTRIB2DPROC                    soil_glad_glVertexAttrib2d                    = NULL;
PFNGLVERTEXATTRIB2DVPROC                   soil_glad_glVertexAttrib2dv                   = NULL;
PFNGLVERTEXATTRIB2FPROC                    soil_glad_glVertexAttrib2f                    = NULL;
PFNGLVERTEXATTRIB2FVPROC                   soil_glad_glVertexAttrib2fv                   = NULL;
PFNGLVERTEXATTRIB2SPROC                    soil_glad_glVertexAttrib2s                    = NULL;
PFNGLVERTEXATTRIB2SVPROC                   soil_glad_glVertexAttrib2sv                   = NULL;
PFNGLVERTEXATTRIB3DPROC                    soil_glad_glVertexAttrib3d                    = NULL;
PFNGLVERTEXATTRIB3DVPROC                   soil_glad_glVertexAttrib3dv                   = NULL;
PFNGLVERTEXATTRIB3FPROC                    soil_glad_glVertexAttrib3f                    = NULL;
PFNGLVERTEXATTRIB3FVPROC                   soil_glad_glVertexAttrib3fv                   = NULL;
PFNGLVERTEXATTRIB3SPROC                    soil_glad_glVertexAttrib3s                    = NULL;
PFNGLVERTEXATTRIB3SVPROC                   soil_glad_glVertexAttrib3sv                   = NULL;
PFNGLVERTEXATTRIB4NBVPROC                  soil_glad_glVertexAttrib4Nbv                  = NULL;
PFNGLVERTEXATTRIB4NIVPROC                  soil_glad_glVertexAttrib4Niv                  = NULL;
PFNGLVERTEXATTRIB4NSVPROC                  soil_glad_glVertexAttrib4Nsv                  = NULL;
PFNGLVERTEXATTRIB4NUBPROC                  soil_glad_glVertexAttrib4Nub                  = NULL;
PFNGLVERTEXATTRIB4NUBVPROC                 soil_glad_glVertexAttrib4Nubv                 = NULL;
PFNGLVERTEXATTRIB4NUIVPROC                 soil_glad_glVertexAttrib4Nuiv                 = NULL;
PFNGLVERTEXATTRIB4NUSVPROC                 soil_glad_glVertexAttrib4Nusv                 = NULL;
PFNGLVERTEXATTRIB4BVPROC                   soil_glad_glVertexAttrib4bv                   = NULL;
PFNGLVERTEXATTRIB4DPROC                    soil_glad_glVertexAttrib4d                    = NULL;
PFNGLVERTEXATTRIB4DVPROC                   soil_glad_glVertexAttrib4dv                   = NULL;
PFNGLVERTEXATTRIB4FPROC                    soil_glad_glVertexAttrib4f                    = NULL;
PFNGLVERTEXATTRIB4FVPROC                   soil_glad_glVertexAttrib4fv                   = NULL;
PFNGLVERTEXATTRIB4IVPROC                   soil_glad_glVertexAttrib4iv                   = NULL;
PFNGLVERTEXATTRIB4SPROC                    soil_glad_glVertexAttrib4s                    = NULL;
PFNGLVERTEXATTRIB4SVPROC                   soil_glad_glVertexAttrib4sv                   = NULL;
PFNGLVERTEXATTRIB4UBVPROC                  soil_glad_glVertexAttrib4ubv                  = NULL;
PFNGLVERTEXATTRIB4UIVPROC                  soil_glad_glVertexAttrib4uiv                  = NULL;
PFNGLVERTEXATTRIB4USVPROC                  soil_glad_glVertexAttrib4usv                  = NULL;
PFNGLVERTEXATTRIBBINDINGPROC               soil_glad_glVertexAttribBinding               = NULL;
PFNGLVERTEXATTRIBDIVISORPROC               soil_glad_glVertexAttribDivisor               = NULL;
PFNGLVERTEXATTRIBFORMATPROC                soil_glad_glVertexAttribFormat                = NULL;
PFNGLVERTEXATTRIBI1IPROC                   soil_glad_glVertexAttribI1i                   = NULL;
PFNGLVERTEXATTRIBI1IVPROC                  soil_glad_glVertexAttribI1iv                  = NULL;
PFNGLVERTEXATTRIBI1UIPROC                  soil_glad_glVertexAttribI1ui                  = NULL;
PFNGLVERTEXATTRIBI1UIVPROC                 soil_glad_glVertexAttribI1uiv                 = NULL;
PFNGLVERTEXATTRIBI2IPROC                   soil_glad_glVertexAttribI2i                   = NULL;
PFNGLVERTEXATTRIBI2IVPROC                  soil_glad_glVertexAttribI2iv                  = NULL;
PFNGLVERTEXATTRIBI2UIPROC                  soil_glad_glVertexAttribI2ui                  = NULL;
PFNGLVERTEXATTRIBI2UIVPROC                 soil_glad_glVertexAttribI2uiv                 = NULL;
PFNGLVERTEXATTRIBI3IPROC                   soil_glad_glVertexAttribI3i                   = NULL;
PFNGLVERTEXATTRIBI3IVPROC                  soil_glad_glVertexAttribI3iv                  = NULL;
PFNGLVERTEXATTRIBI3UIPROC                  soil_glad_glVertexAttribI3ui                  = NULL;
PFNGLVERTEXATTRIBI3UIVPROC                 soil_glad_glVertexAttribI3uiv                 = NULL;
PFNGLVERTEXATTRIBI4BVPROC                  soil_glad_glVertexAttribI4bv                  = NULL;
PFNGLVERTEXATTRIBI4IPROC                   soil_glad_glVertexAttribI4i                   = NULL;
PFNGLVERTEXATTRIBI4IVPROC                  soil_glad_glVertexAttribI4iv                  = NULL;
PFNGLVERTEXATTRIBI4SVPROC                  soil_glad_glVertexAttribI4sv                  = NULL;
PFNGLVERTEXATTRIBI4UBVPROC                 soil_glad_glVertexAttribI4ubv                 = NULL;
PFNGLVERTEXATTRIBI4UIPROC                  soil_glad_glVertexAttribI4ui                  = NULL;
PFNGLVERTEXATTRIBI4UIVPROC                 soil_glad_glVertexAttribI4uiv                 = NULL;
PFNGLVERTEXATTRIBI4USVPROC                 soil_glad_glVertexAttribI4usv                 = NULL;
PFNGLVERTEXATTRIBIFORMATPROC               soil_glad_glVertexAttribIFormat               = NULL;
PFNGLVERTEXATTRIBIPOINTERPROC              soil_glad_glVertexAttribIPointer              = NULL;
PFNGLVERTEXATTRIBL1DPROC                   soil_glad_glVertexAttribL1d                   = NULL;
PFNGLVERTEXATTRIBL1DVPROC                  soil_glad_glVertexAttribL1dv                  = NULL;
PFNGLVERTEXATTRIBL2DPROC                   soil_glad_glVertexAttribL2d                   = NULL;
PFNGLVERTEXATTRIBL2DVPROC                  soil_glad_glVertexAttribL2dv                  = NULL;
PFNGLVERTEXATTRIBL3DPROC                   soil_glad_glVertexAttribL3d                   = NULL;
PFNGLVERTEXATTRIBL3DVPROC                  soil_glad_glVertexAttribL3dv                  = NULL;
PFNGLVERTEXATTRIBL4DPROC                   soil_glad_glVertexAttribL4d                   = NULL;
PFNGLVERTEXATTRIBL4DVPROC                  soil_glad_glVertexAttribL4dv                  = NULL;
PFNGLVERTEXATTRIBLFORMATPROC               soil_glad_glVertexAttribLFormat               = NULL;
PFNGLVERTEXATTRIBLPOINTERPROC              soil_glad_glVertexAttribLPointer              = NULL;
PFNGLVERTEXATTRIBP1UIPROC                  soil_glad_glVertexAttribP1ui                  = NULL;
PFNGLVERTEXATTRIBP1UIVPROC                 soil_glad_glVertexAttribP1uiv                 = NULL;
PFNGLVERTEXATTRIBP2UIPROC                  soil_glad_glVertexAttribP2ui                  = NULL;
PFNGLVERTEXATTRIBP2UIVPROC                 soil_glad_glVertexAttribP2uiv                 = NULL;
PFNGLVERTEXATTRIBP3UIPROC                  soil_glad_glVertexAttribP3ui                  = NULL;
PFNGLVERTEXATTRIBP3UIVPROC                 soil_glad_glVertexAttribP3uiv                 = NULL;
PFNGLVERTEXATTRIBP4UIPROC                  soil_glad_glVertexAttribP4ui                  = NULL;
PFNGLVERTEXATTRIBP4UIVPROC                 soil_glad_glVertexAttribP4uiv                 = NULL;
PFNGLVERTEXATTRIBPOINTERPROC               soil_glad_glVertexAttribPointer               = NULL;
PFNGLVERTEXBINDINGDIVISORPROC              soil_glad_glVertexBindingDivisor              = NULL;
PFNGLVIEWPORTPROC                          soil_glad_glViewport                          = NULL;
PFNGLVIEWPORTARRAYVPROC                    soil_glad_glViewportArrayv                    = NULL;
PFNGLVIEWPORTINDEXEDFPROC                  soil_glad_glViewportIndexedf                  = NULL;
PFNGLVIEWPORTINDEXEDFVPROC                 soil_glad_glViewportIndexedfv                 = NULL;
PFNGLWAITSYNCPROC                          soil_glad_glWaitSync                          = NULL;

static void soil_glad_gl_load_GL_VERSION_1_0(GLADuserptrloadfunc load, void *userptr) {
    if (!SOIL_GLAD_GL_VERSION_1_0) return;
    soil_glad_glBlendFunc    = (PFNGLBLENDFUNCPROC)load(userptr, "glBlendFunc");
    soil_glad_glClear        = (PFNGLCLEARPROC)load(userptr, "glClear");
    soil_glad_glClearColor   = (PFNGLCLEARCOLORPROC)load(userptr, "glClearColor");
    soil_glad_glClearDepth   = (PFNGLCLEARDEPTHPROC)load(userptr, "glClearDepth");
    soil_glad_glClearStencil = (PFNGLCLEARSTENCILPROC)load(userptr, "glClearStencil");
    soil_glad_glColorMask    = (PFNGLCOLORMASKPROC)load(userptr, "glColorMask");
    soil_glad_glCullFace     = (PFNGLCULLFACEPROC)load(userptr, "glCullFace");
    soil_glad_glDepthFunc    = (PFNGLDEPTHFUNCPROC)load(userptr, "glDepthFunc");
    soil_glad_glDepthMask    = (PFNGLDEPTHMASKPROC)load(userptr, "glDepthMask");
    soil_glad_glDepthRange   = (PFNGLDEPTHRANGEPROC)load(userptr, "glDepthRange");
    soil_glad_glDisable      = (PFNGLDISABLEPROC)load(userptr, "glDisable");
    soil_glad_glDrawBuffer   = (PFNGLDRAWBUFFERPROC)load(userptr, "glDrawBuffer");
    soil_glad_glEnable       = (PFNGLENABLEPROC)load(userptr, "glEnable");
    soil_glad_glFinish       = (PFNGLFINISHPROC)load(userptr, "glFinish");
    soil_glad_glFlush        = (PFNGLFLUSHPROC)load(userptr, "glFlush");
    soil_glad_glFrontFace    = (PFNGLFRONTFACEPROC)load(userptr, "glFrontFace");
    soil_glad_glGetBooleanv  = (PFNGLGETBOOLEANVPROC)load(userptr, "glGetBooleanv");
    soil_glad_glGetDoublev   = (PFNGLGETDOUBLEVPROC)load(userptr, "glGetDoublev");
    soil_glad_glGetError     = (PFNGLGETERRORPROC)load(userptr, "glGetError");
    soil_glad_glGetFloatv    = (PFNGLGETFLOATVPROC)load(userptr, "glGetFloatv");
    soil_glad_glGetIntegerv  = (PFNGLGETINTEGERVPROC)load(userptr, "glGetIntegerv");
    soil_glad_glGetString    = (PFNGLGETSTRINGPROC)load(userptr, "glGetString");
    soil_glad_glGetTexImage  = (PFNGLGETTEXIMAGEPROC)load(userptr, "glGetTexImage");
    soil_glad_glGetTexLevelParameterfv =
        (PFNGLGETTEXLEVELPARAMETERFVPROC)load(userptr, "glGetTexLevelParameterfv");
    soil_glad_glGetTexLevelParameteriv =
        (PFNGLGETTEXLEVELPARAMETERIVPROC)load(userptr, "glGetTexLevelParameteriv");
    soil_glad_glGetTexParameterfv =
        (PFNGLGETTEXPARAMETERFVPROC)load(userptr, "glGetTexParameterfv");
    soil_glad_glGetTexParameteriv =
        (PFNGLGETTEXPARAMETERIVPROC)load(userptr, "glGetTexParameteriv");
    soil_glad_glHint           = (PFNGLHINTPROC)load(userptr, "glHint");
    soil_glad_glIsEnabled      = (PFNGLISENABLEDPROC)load(userptr, "glIsEnabled");
    soil_glad_glLineWidth      = (PFNGLLINEWIDTHPROC)load(userptr, "glLineWidth");
    soil_glad_glLogicOp        = (PFNGLLOGICOPPROC)load(userptr, "glLogicOp");
    soil_glad_glPixelStoref    = (PFNGLPIXELSTOREFPROC)load(userptr, "glPixelStoref");
    soil_glad_glPixelStorei    = (PFNGLPIXELSTOREIPROC)load(userptr, "glPixelStorei");
    soil_glad_glPointSize      = (PFNGLPOINTSIZEPROC)load(userptr, "glPointSize");
    soil_glad_glPolygonMode    = (PFNGLPOLYGONMODEPROC)load(userptr, "glPolygonMode");
    soil_glad_glReadBuffer     = (PFNGLREADBUFFERPROC)load(userptr, "glReadBuffer");
    soil_glad_glReadPixels     = (PFNGLREADPIXELSPROC)load(userptr, "glReadPixels");
    soil_glad_glScissor        = (PFNGLSCISSORPROC)load(userptr, "glScissor");
    soil_glad_glStencilFunc    = (PFNGLSTENCILFUNCPROC)load(userptr, "glStencilFunc");
    soil_glad_glStencilMask    = (PFNGLSTENCILMASKPROC)load(userptr, "glStencilMask");
    soil_glad_glStencilOp      = (PFNGLSTENCILOPPROC)load(userptr, "glStencilOp");
    soil_glad_glTexImage1D     = (PFNGLTEXIMAGE1DPROC)load(userptr, "glTexImage1D");
    soil_glad_glTexImage2D     = (PFNGLTEXIMAGE2DPROC)load(userptr, "glTexImage2D");
    soil_glad_glTexParameterf  = (PFNGLTEXPARAMETERFPROC)load(userptr, "glTexParameterf");
    soil_glad_glTexParameterfv = (PFNGLTEXPARAMETERFVPROC)load(userptr, "glTexParameterfv");
    soil_glad_glTexParameteri  = (PFNGLTEXPARAMETERIPROC)load(userptr, "glTexParameteri");
    soil_glad_glTexParameteriv = (PFNGLTEXPARAMETERIVPROC)load(userptr, "glTexParameteriv");
    soil_glad_glViewport       = (PFNGLVIEWPORTPROC)load(userptr, "glViewport");
}
static void soil_glad_gl_load_GL_VERSION_1_1(GLADuserptrloadfunc load, void *userptr) {
    if (!SOIL_GLAD_GL_VERSION_1_1) return;
    soil_glad_glBindTexture    = (PFNGLBINDTEXTUREPROC)load(userptr, "glBindTexture");
    soil_glad_glCopyTexImage1D = (PFNGLCOPYTEXIMAGE1DPROC)load(userptr, "glCopyTexImage1D");
    soil_glad_glCopyTexImage2D = (PFNGLCOPYTEXIMAGE2DPROC)load(userptr, "glCopyTexImage2D");
    soil_glad_glCopyTexSubImage1D =
        (PFNGLCOPYTEXSUBIMAGE1DPROC)load(userptr, "glCopyTexSubImage1D");
    soil_glad_glCopyTexSubImage2D =
        (PFNGLCOPYTEXSUBIMAGE2DPROC)load(userptr, "glCopyTexSubImage2D");
    soil_glad_glDeleteTextures = (PFNGLDELETETEXTURESPROC)load(userptr, "glDeleteTextures");
    soil_glad_glDrawArrays     = (PFNGLDRAWARRAYSPROC)load(userptr, "glDrawArrays");
    soil_glad_glDrawElements   = (PFNGLDRAWELEMENTSPROC)load(userptr, "glDrawElements");
    soil_glad_glGenTextures    = (PFNGLGENTEXTURESPROC)load(userptr, "glGenTextures");
    soil_glad_glGetPointerv    = (PFNGLGETPOINTERVPROC)load(userptr, "glGetPointerv");
    soil_glad_glIsTexture      = (PFNGLISTEXTUREPROC)load(userptr, "glIsTexture");
    soil_glad_glPolygonOffset  = (PFNGLPOLYGONOFFSETPROC)load(userptr, "glPolygonOffset");
    soil_glad_glTexSubImage1D  = (PFNGLTEXSUBIMAGE1DPROC)load(userptr, "glTexSubImage1D");
    soil_glad_glTexSubImage2D  = (PFNGLTEXSUBIMAGE2DPROC)load(userptr, "glTexSubImage2D");
}
static void soil_glad_gl_load_GL_VERSION_1_2(GLADuserptrloadfunc load, void *userptr) {
    if (!SOIL_GLAD_GL_VERSION_1_2) return;
    soil_glad_glCopyTexSubImage3D =
        (PFNGLCOPYTEXSUBIMAGE3DPROC)load(userptr, "glCopyTexSubImage3D");
    soil_glad_glDrawRangeElements =
        (PFNGLDRAWRANGEELEMENTSPROC)load(userptr, "glDrawRangeElements");
    soil_glad_glTexImage3D    = (PFNGLTEXIMAGE3DPROC)load(userptr, "glTexImage3D");
    soil_glad_glTexSubImage3D = (PFNGLTEXSUBIMAGE3DPROC)load(userptr, "glTexSubImage3D");
}
static void soil_glad_gl_load_GL_VERSION_1_3(GLADuserptrloadfunc load, void *userptr) {
    if (!SOIL_GLAD_GL_VERSION_1_3) return;
    soil_glad_glActiveTexture = (PFNGLACTIVETEXTUREPROC)load(userptr, "glActiveTexture");
    soil_glad_glCompressedTexImage1D =
        (PFNGLCOMPRESSEDTEXIMAGE1DPROC)load(userptr, "glCompressedTexImage1D");
    soil_glad_glCompressedTexImage2D =
        (PFNGLCOMPRESSEDTEXIMAGE2DPROC)load(userptr, "glCompressedTexImage2D");
    soil_glad_glCompressedTexImage3D =
        (PFNGLCOMPRESSEDTEXIMAGE3DPROC)load(userptr, "glCompressedTexImage3D");
    soil_glad_glCompressedTexSubImage1D =
        (PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC)load(userptr, "glCompressedTexSubImage1D");
    soil_glad_glCompressedTexSubImage2D =
        (PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC)load(userptr, "glCompressedTexSubImage2D");
    soil_glad_glCompressedTexSubImage3D =
        (PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC)load(userptr, "glCompressedTexSubImage3D");
    soil_glad_glGetCompressedTexImage =
        (PFNGLGETCOMPRESSEDTEXIMAGEPROC)load(userptr, "glGetCompressedTexImage");
    soil_glad_glSampleCoverage = (PFNGLSAMPLECOVERAGEPROC)load(userptr, "glSampleCoverage");
}
static void soil_glad_gl_load_GL_VERSION_1_4(GLADuserptrloadfunc load, void *userptr) {
    if (!SOIL_GLAD_GL_VERSION_1_4) return;
    soil_glad_glBlendColor    = (PFNGLBLENDCOLORPROC)load(userptr, "glBlendColor");
    soil_glad_glBlendEquation = (PFNGLBLENDEQUATIONPROC)load(userptr, "glBlendEquation");
    soil_glad_glBlendFuncSeparate =
        (PFNGLBLENDFUNCSEPARATEPROC)load(userptr, "glBlendFuncSeparate");
    soil_glad_glMultiDrawArrays = (PFNGLMULTIDRAWARRAYSPROC)load(userptr, "glMultiDrawArrays");
    soil_glad_glMultiDrawElements =
        (PFNGLMULTIDRAWELEMENTSPROC)load(userptr, "glMultiDrawElements");
    soil_glad_glPointParameterf = (PFNGLPOINTPARAMETERFPROC)load(userptr, "glPointParameterf");
    soil_glad_glPointParameterfv =
        (PFNGLPOINTPARAMETERFVPROC)load(userptr, "glPointParameterfv");
    soil_glad_glPointParameteri = (PFNGLPOINTPARAMETERIPROC)load(userptr, "glPointParameteri");
    soil_glad_glPointParameteriv =
        (PFNGLPOINTPARAMETERIVPROC)load(userptr, "glPointParameteriv");
}
static void soil_glad_gl_load_GL_VERSION_1_5(GLADuserptrloadfunc load, void *userptr) {
    if (!SOIL_GLAD_GL_VERSION_1_5) return;
    soil_glad_glBeginQuery    = (PFNGLBEGINQUERYPROC)load(userptr, "glBeginQuery");
    soil_glad_glBindBuffer    = (PFNGLBINDBUFFERPROC)load(userptr, "glBindBuffer");
    soil_glad_glBufferData    = (PFNGLBUFFERDATAPROC)load(userptr, "glBufferData");
    soil_glad_glBufferSubData = (PFNGLBUFFERSUBDATAPROC)load(userptr, "glBufferSubData");
    soil_glad_glDeleteBuffers = (PFNGLDELETEBUFFERSPROC)load(userptr, "glDeleteBuffers");
    soil_glad_glDeleteQueries = (PFNGLDELETEQUERIESPROC)load(userptr, "glDeleteQueries");
    soil_glad_glEndQuery      = (PFNGLENDQUERYPROC)load(userptr, "glEndQuery");
    soil_glad_glGenBuffers    = (PFNGLGENBUFFERSPROC)load(userptr, "glGenBuffers");
    soil_glad_glGenQueries    = (PFNGLGENQUERIESPROC)load(userptr, "glGenQueries");
    soil_glad_glGetBufferParameteriv =
        (PFNGLGETBUFFERPARAMETERIVPROC)load(userptr, "glGetBufferParameteriv");
    soil_glad_glGetBufferPointerv =
        (PFNGLGETBUFFERPOINTERVPROC)load(userptr, "glGetBufferPointerv");
    soil_glad_glGetBufferSubData =
        (PFNGLGETBUFFERSUBDATAPROC)load(userptr, "glGetBufferSubData");
    soil_glad_glGetQueryObjectiv =
        (PFNGLGETQUERYOBJECTIVPROC)load(userptr, "glGetQueryObjectiv");
    soil_glad_glGetQueryObjectuiv =
        (PFNGLGETQUERYOBJECTUIVPROC)load(userptr, "glGetQueryObjectuiv");
    soil_glad_glGetQueryiv  = (PFNGLGETQUERYIVPROC)load(userptr, "glGetQueryiv");
    soil_glad_glIsBuffer    = (PFNGLISBUFFERPROC)load(userptr, "glIsBuffer");
    soil_glad_glIsQuery     = (PFNGLISQUERYPROC)load(userptr, "glIsQuery");
    soil_glad_glMapBuffer   = (PFNGLMAPBUFFERPROC)load(userptr, "glMapBuffer");
    soil_glad_glUnmapBuffer = (PFNGLUNMAPBUFFERPROC)load(userptr, "glUnmapBuffer");
}
static void soil_glad_gl_load_GL_VERSION_2_0(GLADuserptrloadfunc load, void *userptr) {
    if (!SOIL_GLAD_GL_VERSION_2_0) return;
    soil_glad_glAttachShader = (PFNGLATTACHSHADERPROC)load(userptr, "glAttachShader");
    soil_glad_glBindAttribLocation =
        (PFNGLBINDATTRIBLOCATIONPROC)load(userptr, "glBindAttribLocation");
    soil_glad_glBlendEquationSeparate =
        (PFNGLBLENDEQUATIONSEPARATEPROC)load(userptr, "glBlendEquationSeparate");
    soil_glad_glCompileShader = (PFNGLCOMPILESHADERPROC)load(userptr, "glCompileShader");
    soil_glad_glCreateProgram = (PFNGLCREATEPROGRAMPROC)load(userptr, "glCreateProgram");
    soil_glad_glCreateShader  = (PFNGLCREATESHADERPROC)load(userptr, "glCreateShader");
    soil_glad_glDeleteProgram = (PFNGLDELETEPROGRAMPROC)load(userptr, "glDeleteProgram");
    soil_glad_glDeleteShader  = (PFNGLDELETESHADERPROC)load(userptr, "glDeleteShader");
    soil_glad_glDetachShader  = (PFNGLDETACHSHADERPROC)load(userptr, "glDetachShader");
    soil_glad_glDisableVertexAttribArray =
        (PFNGLDISABLEVERTEXATTRIBARRAYPROC)load(userptr, "glDisableVertexAttribArray");
    soil_glad_glDrawBuffers = (PFNGLDRAWBUFFERSPROC)load(userptr, "glDrawBuffers");
    soil_glad_glEnableVertexAttribArray =
        (PFNGLENABLEVERTEXATTRIBARRAYPROC)load(userptr, "glEnableVertexAttribArray");
    soil_glad_glGetActiveAttrib = (PFNGLGETACTIVEATTRIBPROC)load(userptr, "glGetActiveAttrib");
    soil_glad_glGetActiveUniform =
        (PFNGLGETACTIVEUNIFORMPROC)load(userptr, "glGetActiveUniform");
    soil_glad_glGetAttachedShaders =
        (PFNGLGETATTACHEDSHADERSPROC)load(userptr, "glGetAttachedShaders");
    soil_glad_glGetAttribLocation =
        (PFNGLGETATTRIBLOCATIONPROC)load(userptr, "glGetAttribLocation");
    soil_glad_glGetProgramInfoLog =
        (PFNGLGETPROGRAMINFOLOGPROC)load(userptr, "glGetProgramInfoLog");
    soil_glad_glGetProgramiv = (PFNGLGETPROGRAMIVPROC)load(userptr, "glGetProgramiv");
    soil_glad_glGetShaderInfoLog =
        (PFNGLGETSHADERINFOLOGPROC)load(userptr, "glGetShaderInfoLog");
    soil_glad_glGetShaderSource = (PFNGLGETSHADERSOURCEPROC)load(userptr, "glGetShaderSource");
    soil_glad_glGetShaderiv     = (PFNGLGETSHADERIVPROC)load(userptr, "glGetShaderiv");
    soil_glad_glGetUniformLocation =
        (PFNGLGETUNIFORMLOCATIONPROC)load(userptr, "glGetUniformLocation");
    soil_glad_glGetUniformfv = (PFNGLGETUNIFORMFVPROC)load(userptr, "glGetUniformfv");
    soil_glad_glGetUniformiv = (PFNGLGETUNIFORMIVPROC)load(userptr, "glGetUniformiv");
    soil_glad_glGetVertexAttribPointerv =
        (PFNGLGETVERTEXATTRIBPOINTERVPROC)load(userptr, "glGetVertexAttribPointerv");
    soil_glad_glGetVertexAttribdv =
        (PFNGLGETVERTEXATTRIBDVPROC)load(userptr, "glGetVertexAttribdv");
    soil_glad_glGetVertexAttribfv =
        (PFNGLGETVERTEXATTRIBFVPROC)load(userptr, "glGetVertexAttribfv");
    soil_glad_glGetVertexAttribiv =
        (PFNGLGETVERTEXATTRIBIVPROC)load(userptr, "glGetVertexAttribiv");
    soil_glad_glIsProgram    = (PFNGLISPROGRAMPROC)load(userptr, "glIsProgram");
    soil_glad_glIsShader     = (PFNGLISSHADERPROC)load(userptr, "glIsShader");
    soil_glad_glLinkProgram  = (PFNGLLINKPROGRAMPROC)load(userptr, "glLinkProgram");
    soil_glad_glShaderSource = (PFNGLSHADERSOURCEPROC)load(userptr, "glShaderSource");
    soil_glad_glStencilFuncSeparate =
        (PFNGLSTENCILFUNCSEPARATEPROC)load(userptr, "glStencilFuncSeparate");
    soil_glad_glStencilMaskSeparate =
        (PFNGLSTENCILMASKSEPARATEPROC)load(userptr, "glStencilMaskSeparate");
    soil_glad_glStencilOpSeparate =
        (PFNGLSTENCILOPSEPARATEPROC)load(userptr, "glStencilOpSeparate");
    soil_glad_glUniform1f  = (PFNGLUNIFORM1FPROC)load(userptr, "glUniform1f");
    soil_glad_glUniform1fv = (PFNGLUNIFORM1FVPROC)load(userptr, "glUniform1fv");
    soil_glad_glUniform1i  = (PFNGLUNIFORM1IPROC)load(userptr, "glUniform1i");
    soil_glad_glUniform1iv = (PFNGLUNIFORM1IVPROC)load(userptr, "glUniform1iv");
    soil_glad_glUniform2f  = (PFNGLUNIFORM2FPROC)load(userptr, "glUniform2f");
    soil_glad_glUniform2fv = (PFNGLUNIFORM2FVPROC)load(userptr, "glUniform2fv");
    soil_glad_glUniform2i  = (PFNGLUNIFORM2IPROC)load(userptr, "glUniform2i");
    soil_glad_glUniform2iv = (PFNGLUNIFORM2IVPROC)load(userptr, "glUniform2iv");
    soil_glad_glUniform3f  = (PFNGLUNIFORM3FPROC)load(userptr, "glUniform3f");
    soil_glad_glUniform3fv = (PFNGLUNIFORM3FVPROC)load(userptr, "glUniform3fv");
    soil_glad_glUniform3i  = (PFNGLUNIFORM3IPROC)load(userptr, "glUniform3i");
    soil_glad_glUniform3iv = (PFNGLUNIFORM3IVPROC)load(userptr, "glUniform3iv");
    soil_glad_glUniform4f  = (PFNGLUNIFORM4FPROC)load(userptr, "glUniform4f");
    soil_glad_glUniform4fv = (PFNGLUNIFORM4FVPROC)load(userptr, "glUniform4fv");
    soil_glad_glUniform4i  = (PFNGLUNIFORM4IPROC)load(userptr, "glUniform4i");
    soil_glad_glUniform4iv = (PFNGLUNIFORM4IVPROC)load(userptr, "glUniform4iv");
    soil_glad_glUniformMatrix2fv =
        (PFNGLUNIFORMMATRIX2FVPROC)load(userptr, "glUniformMatrix2fv");
    soil_glad_glUniformMatrix3fv =
        (PFNGLUNIFORMMATRIX3FVPROC)load(userptr, "glUniformMatrix3fv");
    soil_glad_glUniformMatrix4fv =
        (PFNGLUNIFORMMATRIX4FVPROC)load(userptr, "glUniformMatrix4fv");
    soil_glad_glUseProgram      = (PFNGLUSEPROGRAMPROC)load(userptr, "glUseProgram");
    soil_glad_glValidateProgram = (PFNGLVALIDATEPROGRAMPROC)load(userptr, "glValidateProgram");
    soil_glad_glVertexAttrib1d  = (PFNGLVERTEXATTRIB1DPROC)load(userptr, "glVertexAttrib1d");
    soil_glad_glVertexAttrib1dv = (PFNGLVERTEXATTRIB1DVPROC)load(userptr, "glVertexAttrib1dv");
    soil_glad_glVertexAttrib1f  = (PFNGLVERTEXATTRIB1FPROC)load(userptr, "glVertexAttrib1f");
    soil_glad_glVertexAttrib1fv = (PFNGLVERTEXATTRIB1FVPROC)load(userptr, "glVertexAttrib1fv");
    soil_glad_glVertexAttrib1s  = (PFNGLVERTEXATTRIB1SPROC)load(userptr, "glVertexAttrib1s");
    soil_glad_glVertexAttrib1sv = (PFNGLVERTEXATTRIB1SVPROC)load(userptr, "glVertexAttrib1sv");
    soil_glad_glVertexAttrib2d  = (PFNGLVERTEXATTRIB2DPROC)load(userptr, "glVertexAttrib2d");
    soil_glad_glVertexAttrib2dv = (PFNGLVERTEXATTRIB2DVPROC)load(userptr, "glVertexAttrib2dv");
    soil_glad_glVertexAttrib2f  = (PFNGLVERTEXATTRIB2FPROC)load(userptr, "glVertexAttrib2f");
    soil_glad_glVertexAttrib2fv = (PFNGLVERTEXATTRIB2FVPROC)load(userptr, "glVertexAttrib2fv");
    soil_glad_glVertexAttrib2s  = (PFNGLVERTEXATTRIB2SPROC)load(userptr, "glVertexAttrib2s");
    soil_glad_glVertexAttrib2sv = (PFNGLVERTEXATTRIB2SVPROC)load(userptr, "glVertexAttrib2sv");
    soil_glad_glVertexAttrib3d  = (PFNGLVERTEXATTRIB3DPROC)load(userptr, "glVertexAttrib3d");
    soil_glad_glVertexAttrib3dv = (PFNGLVERTEXATTRIB3DVPROC)load(userptr, "glVertexAttrib3dv");
    soil_glad_glVertexAttrib3f  = (PFNGLVERTEXATTRIB3FPROC)load(userptr, "glVertexAttrib3f");
    soil_glad_glVertexAttrib3fv = (PFNGLVERTEXATTRIB3FVPROC)load(userptr, "glVertexAttrib3fv");
    soil_glad_glVertexAttrib3s  = (PFNGLVERTEXATTRIB3SPROC)load(userptr, "glVertexAttrib3s");
    soil_glad_glVertexAttrib3sv = (PFNGLVERTEXATTRIB3SVPROC)load(userptr, "glVertexAttrib3sv");
    soil_glad_glVertexAttrib4Nbv =
        (PFNGLVERTEXATTRIB4NBVPROC)load(userptr, "glVertexAttrib4Nbv");
    soil_glad_glVertexAttrib4Niv =
        (PFNGLVERTEXATTRIB4NIVPROC)load(userptr, "glVertexAttrib4Niv");
    soil_glad_glVertexAttrib4Nsv =
        (PFNGLVERTEXATTRIB4NSVPROC)load(userptr, "glVertexAttrib4Nsv");
    soil_glad_glVertexAttrib4Nub =
        (PFNGLVERTEXATTRIB4NUBPROC)load(userptr, "glVertexAttrib4Nub");
    soil_glad_glVertexAttrib4Nubv =
        (PFNGLVERTEXATTRIB4NUBVPROC)load(userptr, "glVertexAttrib4Nubv");
    soil_glad_glVertexAttrib4Nuiv =
        (PFNGLVERTEXATTRIB4NUIVPROC)load(userptr, "glVertexAttrib4Nuiv");
    soil_glad_glVertexAttrib4Nusv =
        (PFNGLVERTEXATTRIB4NUSVPROC)load(userptr, "glVertexAttrib4Nusv");
    soil_glad_glVertexAttrib4bv = (PFNGLVERTEXATTRIB4BVPROC)load(userptr, "glVertexAttrib4bv");
    soil_glad_glVertexAttrib4d  = (PFNGLVERTEXATTRIB4DPROC)load(userptr, "glVertexAttrib4d");
    soil_glad_glVertexAttrib4dv = (PFNGLVERTEXATTRIB4DVPROC)load(userptr, "glVertexAttrib4dv");
    soil_glad_glVertexAttrib4f  = (PFNGLVERTEXATTRIB4FPROC)load(userptr, "glVertexAttrib4f");
    soil_glad_glVertexAttrib4fv = (PFNGLVERTEXATTRIB4FVPROC)load(userptr, "glVertexAttrib4fv");
    soil_glad_glVertexAttrib4iv = (PFNGLVERTEXATTRIB4IVPROC)load(userptr, "glVertexAttrib4iv");
    soil_glad_glVertexAttrib4s  = (PFNGLVERTEXATTRIB4SPROC)load(userptr, "glVertexAttrib4s");
    soil_glad_glVertexAttrib4sv = (PFNGLVERTEXATTRIB4SVPROC)load(userptr, "glVertexAttrib4sv");
    soil_glad_glVertexAttrib4ubv =
        (PFNGLVERTEXATTRIB4UBVPROC)load(userptr, "glVertexAttrib4ubv");
    soil_glad_glVertexAttrib4uiv =
        (PFNGLVERTEXATTRIB4UIVPROC)load(userptr, "glVertexAttrib4uiv");
    soil_glad_glVertexAttrib4usv =
        (PFNGLVERTEXATTRIB4USVPROC)load(userptr, "glVertexAttrib4usv");
    soil_glad_glVertexAttribPointer =
        (PFNGLVERTEXATTRIBPOINTERPROC)load(userptr, "glVertexAttribPointer");
}
static void soil_glad_gl_load_GL_VERSION_2_1(GLADuserptrloadfunc load, void *userptr) {
    if (!SOIL_GLAD_GL_VERSION_2_1) return;
    soil_glad_glUniformMatrix2x3fv =
        (PFNGLUNIFORMMATRIX2X3FVPROC)load(userptr, "glUniformMatrix2x3fv");
    soil_glad_glUniformMatrix2x4fv =
        (PFNGLUNIFORMMATRIX2X4FVPROC)load(userptr, "glUniformMatrix2x4fv");
    soil_glad_glUniformMatrix3x2fv =
        (PFNGLUNIFORMMATRIX3X2FVPROC)load(userptr, "glUniformMatrix3x2fv");
    soil_glad_glUniformMatrix3x4fv =
        (PFNGLUNIFORMMATRIX3X4FVPROC)load(userptr, "glUniformMatrix3x4fv");
    soil_glad_glUniformMatrix4x2fv =
        (PFNGLUNIFORMMATRIX4X2FVPROC)load(userptr, "glUniformMatrix4x2fv");
    soil_glad_glUniformMatrix4x3fv =
        (PFNGLUNIFORMMATRIX4X3FVPROC)load(userptr, "glUniformMatrix4x3fv");
}
static void soil_glad_gl_load_GL_VERSION_3_0(GLADuserptrloadfunc load, void *userptr) {
    if (!SOIL_GLAD_GL_VERSION_3_0) return;
    soil_glad_glBeginConditionalRender =
        (PFNGLBEGINCONDITIONALRENDERPROC)load(userptr, "glBeginConditionalRender");
    soil_glad_glBeginTransformFeedback =
        (PFNGLBEGINTRANSFORMFEEDBACKPROC)load(userptr, "glBeginTransformFeedback");
    soil_glad_glBindBufferBase  = (PFNGLBINDBUFFERBASEPROC)load(userptr, "glBindBufferBase");
    soil_glad_glBindBufferRange = (PFNGLBINDBUFFERRANGEPROC)load(userptr, "glBindBufferRange");
    soil_glad_glBindFragDataLocation =
        (PFNGLBINDFRAGDATALOCATIONPROC)load(userptr, "glBindFragDataLocation");
    soil_glad_glBindFramebuffer = (PFNGLBINDFRAMEBUFFERPROC)load(userptr, "glBindFramebuffer");
    soil_glad_glBindRenderbuffer =
        (PFNGLBINDRENDERBUFFERPROC)load(userptr, "glBindRenderbuffer");
    soil_glad_glBindVertexArray = (PFNGLBINDVERTEXARRAYPROC)load(userptr, "glBindVertexArray");
    soil_glad_glBlitFramebuffer = (PFNGLBLITFRAMEBUFFERPROC)load(userptr, "glBlitFramebuffer");
    soil_glad_glCheckFramebufferStatus =
        (PFNGLCHECKFRAMEBUFFERSTATUSPROC)load(userptr, "glCheckFramebufferStatus");
    soil_glad_glClampColor     = (PFNGLCLAMPCOLORPROC)load(userptr, "glClampColor");
    soil_glad_glClearBufferfi  = (PFNGLCLEARBUFFERFIPROC)load(userptr, "glClearBufferfi");
    soil_glad_glClearBufferfv  = (PFNGLCLEARBUFFERFVPROC)load(userptr, "glClearBufferfv");
    soil_glad_glClearBufferiv  = (PFNGLCLEARBUFFERIVPROC)load(userptr, "glClearBufferiv");
    soil_glad_glClearBufferuiv = (PFNGLCLEARBUFFERUIVPROC)load(userptr, "glClearBufferuiv");
    soil_glad_glColorMaski     = (PFNGLCOLORMASKIPROC)load(userptr, "glColorMaski");
    soil_glad_glDeleteFramebuffers =
        (PFNGLDELETEFRAMEBUFFERSPROC)load(userptr, "glDeleteFramebuffers");
    soil_glad_glDeleteRenderbuffers =
        (PFNGLDELETERENDERBUFFERSPROC)load(userptr, "glDeleteRenderbuffers");
    soil_glad_glDeleteVertexArrays =
        (PFNGLDELETEVERTEXARRAYSPROC)load(userptr, "glDeleteVertexArrays");
    soil_glad_glDisablei = (PFNGLDISABLEIPROC)load(userptr, "glDisablei");
    soil_glad_glEnablei  = (PFNGLENABLEIPROC)load(userptr, "glEnablei");
    soil_glad_glEndConditionalRender =
        (PFNGLENDCONDITIONALRENDERPROC)load(userptr, "glEndConditionalRender");
    soil_glad_glEndTransformFeedback =
        (PFNGLENDTRANSFORMFEEDBACKPROC)load(userptr, "glEndTransformFeedback");
    soil_glad_glFlushMappedBufferRange =
        (PFNGLFLUSHMAPPEDBUFFERRANGEPROC)load(userptr, "glFlushMappedBufferRange");
    soil_glad_glFramebufferRenderbuffer =
        (PFNGLFRAMEBUFFERRENDERBUFFERPROC)load(userptr, "glFramebufferRenderbuffer");
    soil_glad_glFramebufferTexture1D =
        (PFNGLFRAMEBUFFERTEXTURE1DPROC)load(userptr, "glFramebufferTexture1D");
    soil_glad_glFramebufferTexture2D =
        (PFNGLFRAMEBUFFERTEXTURE2DPROC)load(userptr, "glFramebufferTexture2D");
    soil_glad_glFramebufferTexture3D =
        (PFNGLFRAMEBUFFERTEXTURE3DPROC)load(userptr, "glFramebufferTexture3D");
    soil_glad_glFramebufferTextureLayer =
        (PFNGLFRAMEBUFFERTEXTURELAYERPROC)load(userptr, "glFramebufferTextureLayer");
    soil_glad_glGenFramebuffers = (PFNGLGENFRAMEBUFFERSPROC)load(userptr, "glGenFramebuffers");
    soil_glad_glGenRenderbuffers =
        (PFNGLGENRENDERBUFFERSPROC)load(userptr, "glGenRenderbuffers");
    soil_glad_glGenVertexArrays = (PFNGLGENVERTEXARRAYSPROC)load(userptr, "glGenVertexArrays");
    soil_glad_glGenerateMipmap  = (PFNGLGENERATEMIPMAPPROC)load(userptr, "glGenerateMipmap");
    soil_glad_glGetBooleani_v   = (PFNGLGETBOOLEANI_VPROC)load(userptr, "glGetBooleani_v");
    soil_glad_glGetFragDataLocation =
        (PFNGLGETFRAGDATALOCATIONPROC)load(userptr, "glGetFragDataLocation");
    soil_glad_glGetFramebufferAttachmentParameteriv =
        (PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC
        )load(userptr, "glGetFramebufferAttachmentParameteriv");
    soil_glad_glGetIntegeri_v = (PFNGLGETINTEGERI_VPROC)load(userptr, "glGetIntegeri_v");
    soil_glad_glGetRenderbufferParameteriv =
        (PFNGLGETRENDERBUFFERPARAMETERIVPROC)load(userptr, "glGetRenderbufferParameteriv");
    soil_glad_glGetStringi = (PFNGLGETSTRINGIPROC)load(userptr, "glGetStringi");
    soil_glad_glGetTexParameterIiv =
        (PFNGLGETTEXPARAMETERIIVPROC)load(userptr, "glGetTexParameterIiv");
    soil_glad_glGetTexParameterIuiv =
        (PFNGLGETTEXPARAMETERIUIVPROC)load(userptr, "glGetTexParameterIuiv");
    soil_glad_glGetTransformFeedbackVarying =
        (PFNGLGETTRANSFORMFEEDBACKVARYINGPROC)load(userptr, "glGetTransformFeedbackVarying");
    soil_glad_glGetUniformuiv = (PFNGLGETUNIFORMUIVPROC)load(userptr, "glGetUniformuiv");
    soil_glad_glGetVertexAttribIiv =
        (PFNGLGETVERTEXATTRIBIIVPROC)load(userptr, "glGetVertexAttribIiv");
    soil_glad_glGetVertexAttribIuiv =
        (PFNGLGETVERTEXATTRIBIUIVPROC)load(userptr, "glGetVertexAttribIuiv");
    soil_glad_glIsEnabledi     = (PFNGLISENABLEDIPROC)load(userptr, "glIsEnabledi");
    soil_glad_glIsFramebuffer  = (PFNGLISFRAMEBUFFERPROC)load(userptr, "glIsFramebuffer");
    soil_glad_glIsRenderbuffer = (PFNGLISRENDERBUFFERPROC)load(userptr, "glIsRenderbuffer");
    soil_glad_glIsVertexArray  = (PFNGLISVERTEXARRAYPROC)load(userptr, "glIsVertexArray");
    soil_glad_glMapBufferRange = (PFNGLMAPBUFFERRANGEPROC)load(userptr, "glMapBufferRange");
    soil_glad_glRenderbufferStorage =
        (PFNGLRENDERBUFFERSTORAGEPROC)load(userptr, "glRenderbufferStorage");
    soil_glad_glRenderbufferStorageMultisample = (PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC
    )load(userptr, "glRenderbufferStorageMultisample");
    soil_glad_glTexParameterIiv = (PFNGLTEXPARAMETERIIVPROC)load(userptr, "glTexParameterIiv");
    soil_glad_glTexParameterIuiv =
        (PFNGLTEXPARAMETERIUIVPROC)load(userptr, "glTexParameterIuiv");
    soil_glad_glTransformFeedbackVaryings =
        (PFNGLTRANSFORMFEEDBACKVARYINGSPROC)load(userptr, "glTransformFeedbackVaryings");
    soil_glad_glUniform1ui      = (PFNGLUNIFORM1UIPROC)load(userptr, "glUniform1ui");
    soil_glad_glUniform1uiv     = (PFNGLUNIFORM1UIVPROC)load(userptr, "glUniform1uiv");
    soil_glad_glUniform2ui      = (PFNGLUNIFORM2UIPROC)load(userptr, "glUniform2ui");
    soil_glad_glUniform2uiv     = (PFNGLUNIFORM2UIVPROC)load(userptr, "glUniform2uiv");
    soil_glad_glUniform3ui      = (PFNGLUNIFORM3UIPROC)load(userptr, "glUniform3ui");
    soil_glad_glUniform3uiv     = (PFNGLUNIFORM3UIVPROC)load(userptr, "glUniform3uiv");
    soil_glad_glUniform4ui      = (PFNGLUNIFORM4UIPROC)load(userptr, "glUniform4ui");
    soil_glad_glUniform4uiv     = (PFNGLUNIFORM4UIVPROC)load(userptr, "glUniform4uiv");
    soil_glad_glVertexAttribI1i = (PFNGLVERTEXATTRIBI1IPROC)load(userptr, "glVertexAttribI1i");
    soil_glad_glVertexAttribI1iv =
        (PFNGLVERTEXATTRIBI1IVPROC)load(userptr, "glVertexAttribI1iv");
    soil_glad_glVertexAttribI1ui =
        (PFNGLVERTEXATTRIBI1UIPROC)load(userptr, "glVertexAttribI1ui");
    soil_glad_glVertexAttribI1uiv =
        (PFNGLVERTEXATTRIBI1UIVPROC)load(userptr, "glVertexAttribI1uiv");
    soil_glad_glVertexAttribI2i = (PFNGLVERTEXATTRIBI2IPROC)load(userptr, "glVertexAttribI2i");
    soil_glad_glVertexAttribI2iv =
        (PFNGLVERTEXATTRIBI2IVPROC)load(userptr, "glVertexAttribI2iv");
    soil_glad_glVertexAttribI2ui =
        (PFNGLVERTEXATTRIBI2UIPROC)load(userptr, "glVertexAttribI2ui");
    soil_glad_glVertexAttribI2uiv =
        (PFNGLVERTEXATTRIBI2UIVPROC)load(userptr, "glVertexAttribI2uiv");
    soil_glad_glVertexAttribI3i = (PFNGLVERTEXATTRIBI3IPROC)load(userptr, "glVertexAttribI3i");
    soil_glad_glVertexAttribI3iv =
        (PFNGLVERTEXATTRIBI3IVPROC)load(userptr, "glVertexAttribI3iv");
    soil_glad_glVertexAttribI3ui =
        (PFNGLVERTEXATTRIBI3UIPROC)load(userptr, "glVertexAttribI3ui");
    soil_glad_glVertexAttribI3uiv =
        (PFNGLVERTEXATTRIBI3UIVPROC)load(userptr, "glVertexAttribI3uiv");
    soil_glad_glVertexAttribI4bv =
        (PFNGLVERTEXATTRIBI4BVPROC)load(userptr, "glVertexAttribI4bv");
    soil_glad_glVertexAttribI4i = (PFNGLVERTEXATTRIBI4IPROC)load(userptr, "glVertexAttribI4i");
    soil_glad_glVertexAttribI4iv =
        (PFNGLVERTEXATTRIBI4IVPROC)load(userptr, "glVertexAttribI4iv");
    soil_glad_glVertexAttribI4sv =
        (PFNGLVERTEXATTRIBI4SVPROC)load(userptr, "glVertexAttribI4sv");
    soil_glad_glVertexAttribI4ubv =
        (PFNGLVERTEXATTRIBI4UBVPROC)load(userptr, "glVertexAttribI4ubv");
    soil_glad_glVertexAttribI4ui =
        (PFNGLVERTEXATTRIBI4UIPROC)load(userptr, "glVertexAttribI4ui");
    soil_glad_glVertexAttribI4uiv =
        (PFNGLVERTEXATTRIBI4UIVPROC)load(userptr, "glVertexAttribI4uiv");
    soil_glad_glVertexAttribI4usv =
        (PFNGLVERTEXATTRIBI4USVPROC)load(userptr, "glVertexAttribI4usv");
    soil_glad_glVertexAttribIPointer =
        (PFNGLVERTEXATTRIBIPOINTERPROC)load(userptr, "glVertexAttribIPointer");
}
static void soil_glad_gl_load_GL_VERSION_3_1(GLADuserptrloadfunc load, void *userptr) {
    if (!SOIL_GLAD_GL_VERSION_3_1) return;
    soil_glad_glBindBufferBase  = (PFNGLBINDBUFFERBASEPROC)load(userptr, "glBindBufferBase");
    soil_glad_glBindBufferRange = (PFNGLBINDBUFFERRANGEPROC)load(userptr, "glBindBufferRange");
    soil_glad_glCopyBufferSubData =
        (PFNGLCOPYBUFFERSUBDATAPROC)load(userptr, "glCopyBufferSubData");
    soil_glad_glDrawArraysInstanced =
        (PFNGLDRAWARRAYSINSTANCEDPROC)load(userptr, "glDrawArraysInstanced");
    soil_glad_glDrawElementsInstanced =
        (PFNGLDRAWELEMENTSINSTANCEDPROC)load(userptr, "glDrawElementsInstanced");
    soil_glad_glGetActiveUniformBlockName =
        (PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC)load(userptr, "glGetActiveUniformBlockName");
    soil_glad_glGetActiveUniformBlockiv =
        (PFNGLGETACTIVEUNIFORMBLOCKIVPROC)load(userptr, "glGetActiveUniformBlockiv");
    soil_glad_glGetActiveUniformName =
        (PFNGLGETACTIVEUNIFORMNAMEPROC)load(userptr, "glGetActiveUniformName");
    soil_glad_glGetActiveUniformsiv =
        (PFNGLGETACTIVEUNIFORMSIVPROC)load(userptr, "glGetActiveUniformsiv");
    soil_glad_glGetIntegeri_v = (PFNGLGETINTEGERI_VPROC)load(userptr, "glGetIntegeri_v");
    soil_glad_glGetUniformBlockIndex =
        (PFNGLGETUNIFORMBLOCKINDEXPROC)load(userptr, "glGetUniformBlockIndex");
    soil_glad_glGetUniformIndices =
        (PFNGLGETUNIFORMINDICESPROC)load(userptr, "glGetUniformIndices");
    soil_glad_glPrimitiveRestartIndex =
        (PFNGLPRIMITIVERESTARTINDEXPROC)load(userptr, "glPrimitiveRestartIndex");
    soil_glad_glTexBuffer = (PFNGLTEXBUFFERPROC)load(userptr, "glTexBuffer");
    soil_glad_glUniformBlockBinding =
        (PFNGLUNIFORMBLOCKBINDINGPROC)load(userptr, "glUniformBlockBinding");
}
static void soil_glad_gl_load_GL_VERSION_3_2(GLADuserptrloadfunc load, void *userptr) {
    if (!SOIL_GLAD_GL_VERSION_3_2) return;
    soil_glad_glClientWaitSync = (PFNGLCLIENTWAITSYNCPROC)load(userptr, "glClientWaitSync");
    soil_glad_glDeleteSync     = (PFNGLDELETESYNCPROC)load(userptr, "glDeleteSync");
    soil_glad_glDrawElementsBaseVertex =
        (PFNGLDRAWELEMENTSBASEVERTEXPROC)load(userptr, "glDrawElementsBaseVertex");
    soil_glad_glDrawElementsInstancedBaseVertex = (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC
    )load(userptr, "glDrawElementsInstancedBaseVertex");
    soil_glad_glDrawRangeElementsBaseVertex =
        (PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC)load(userptr, "glDrawRangeElementsBaseVertex");
    soil_glad_glFenceSync = (PFNGLFENCESYNCPROC)load(userptr, "glFenceSync");
    soil_glad_glFramebufferTexture =
        (PFNGLFRAMEBUFFERTEXTUREPROC)load(userptr, "glFramebufferTexture");
    soil_glad_glGetBufferParameteri64v =
        (PFNGLGETBUFFERPARAMETERI64VPROC)load(userptr, "glGetBufferParameteri64v");
    soil_glad_glGetInteger64i_v = (PFNGLGETINTEGER64I_VPROC)load(userptr, "glGetInteger64i_v");
    soil_glad_glGetInteger64v   = (PFNGLGETINTEGER64VPROC)load(userptr, "glGetInteger64v");
    soil_glad_glGetMultisamplefv =
        (PFNGLGETMULTISAMPLEFVPROC)load(userptr, "glGetMultisamplefv");
    soil_glad_glGetSynciv = (PFNGLGETSYNCIVPROC)load(userptr, "glGetSynciv");
    soil_glad_glIsSync    = (PFNGLISSYNCPROC)load(userptr, "glIsSync");
    soil_glad_glMultiDrawElementsBaseVertex =
        (PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC)load(userptr, "glMultiDrawElementsBaseVertex");
    soil_glad_glProvokingVertex = (PFNGLPROVOKINGVERTEXPROC)load(userptr, "glProvokingVertex");
    soil_glad_glSampleMaski     = (PFNGLSAMPLEMASKIPROC)load(userptr, "glSampleMaski");
    soil_glad_glTexImage2DMultisample =
        (PFNGLTEXIMAGE2DMULTISAMPLEPROC)load(userptr, "glTexImage2DMultisample");
    soil_glad_glTexImage3DMultisample =
        (PFNGLTEXIMAGE3DMULTISAMPLEPROC)load(userptr, "glTexImage3DMultisample");
    soil_glad_glWaitSync = (PFNGLWAITSYNCPROC)load(userptr, "glWaitSync");
}
static void soil_glad_gl_load_GL_VERSION_3_3(GLADuserptrloadfunc load, void *userptr) {
    if (!SOIL_GLAD_GL_VERSION_3_3) return;
    soil_glad_glBindFragDataLocationIndexed =
        (PFNGLBINDFRAGDATALOCATIONINDEXEDPROC)load(userptr, "glBindFragDataLocationIndexed");
    soil_glad_glBindSampler    = (PFNGLBINDSAMPLERPROC)load(userptr, "glBindSampler");
    soil_glad_glDeleteSamplers = (PFNGLDELETESAMPLERSPROC)load(userptr, "glDeleteSamplers");
    soil_glad_glGenSamplers    = (PFNGLGENSAMPLERSPROC)load(userptr, "glGenSamplers");
    soil_glad_glGetFragDataIndex =
        (PFNGLGETFRAGDATAINDEXPROC)load(userptr, "glGetFragDataIndex");
    soil_glad_glGetQueryObjecti64v =
        (PFNGLGETQUERYOBJECTI64VPROC)load(userptr, "glGetQueryObjecti64v");
    soil_glad_glGetQueryObjectui64v =
        (PFNGLGETQUERYOBJECTUI64VPROC)load(userptr, "glGetQueryObjectui64v");
    soil_glad_glGetSamplerParameterIiv =
        (PFNGLGETSAMPLERPARAMETERIIVPROC)load(userptr, "glGetSamplerParameterIiv");
    soil_glad_glGetSamplerParameterIuiv =
        (PFNGLGETSAMPLERPARAMETERIUIVPROC)load(userptr, "glGetSamplerParameterIuiv");
    soil_glad_glGetSamplerParameterfv =
        (PFNGLGETSAMPLERPARAMETERFVPROC)load(userptr, "glGetSamplerParameterfv");
    soil_glad_glGetSamplerParameteriv =
        (PFNGLGETSAMPLERPARAMETERIVPROC)load(userptr, "glGetSamplerParameteriv");
    soil_glad_glIsSampler    = (PFNGLISSAMPLERPROC)load(userptr, "glIsSampler");
    soil_glad_glQueryCounter = (PFNGLQUERYCOUNTERPROC)load(userptr, "glQueryCounter");
    soil_glad_glSamplerParameterIiv =
        (PFNGLSAMPLERPARAMETERIIVPROC)load(userptr, "glSamplerParameterIiv");
    soil_glad_glSamplerParameterIuiv =
        (PFNGLSAMPLERPARAMETERIUIVPROC)load(userptr, "glSamplerParameterIuiv");
    soil_glad_glSamplerParameterf =
        (PFNGLSAMPLERPARAMETERFPROC)load(userptr, "glSamplerParameterf");
    soil_glad_glSamplerParameterfv =
        (PFNGLSAMPLERPARAMETERFVPROC)load(userptr, "glSamplerParameterfv");
    soil_glad_glSamplerParameteri =
        (PFNGLSAMPLERPARAMETERIPROC)load(userptr, "glSamplerParameteri");
    soil_glad_glSamplerParameteriv =
        (PFNGLSAMPLERPARAMETERIVPROC)load(userptr, "glSamplerParameteriv");
    soil_glad_glVertexAttribDivisor =
        (PFNGLVERTEXATTRIBDIVISORPROC)load(userptr, "glVertexAttribDivisor");
    soil_glad_glVertexAttribP1ui =
        (PFNGLVERTEXATTRIBP1UIPROC)load(userptr, "glVertexAttribP1ui");
    soil_glad_glVertexAttribP1uiv =
        (PFNGLVERTEXATTRIBP1UIVPROC)load(userptr, "glVertexAttribP1uiv");
    soil_glad_glVertexAttribP2ui =
        (PFNGLVERTEXATTRIBP2UIPROC)load(userptr, "glVertexAttribP2ui");
    soil_glad_glVertexAttribP2uiv =
        (PFNGLVERTEXATTRIBP2UIVPROC)load(userptr, "glVertexAttribP2uiv");
    soil_glad_glVertexAttribP3ui =
        (PFNGLVERTEXATTRIBP3UIPROC)load(userptr, "glVertexAttribP3ui");
    soil_glad_glVertexAttribP3uiv =
        (PFNGLVERTEXATTRIBP3UIVPROC)load(userptr, "glVertexAttribP3uiv");
    soil_glad_glVertexAttribP4ui =
        (PFNGLVERTEXATTRIBP4UIPROC)load(userptr, "glVertexAttribP4ui");
    soil_glad_glVertexAttribP4uiv =
        (PFNGLVERTEXATTRIBP4UIVPROC)load(userptr, "glVertexAttribP4uiv");
}
static void soil_glad_gl_load_GL_VERSION_4_0(GLADuserptrloadfunc load, void *userptr) {
    if (!SOIL_GLAD_GL_VERSION_4_0) return;
    soil_glad_glBeginQueryIndexed =
        (PFNGLBEGINQUERYINDEXEDPROC)load(userptr, "glBeginQueryIndexed");
    soil_glad_glBindTransformFeedback =
        (PFNGLBINDTRANSFORMFEEDBACKPROC)load(userptr, "glBindTransformFeedback");
    soil_glad_glBlendEquationSeparatei =
        (PFNGLBLENDEQUATIONSEPARATEIPROC)load(userptr, "glBlendEquationSeparatei");
    soil_glad_glBlendEquationi = (PFNGLBLENDEQUATIONIPROC)load(userptr, "glBlendEquationi");
    soil_glad_glBlendFuncSeparatei =
        (PFNGLBLENDFUNCSEPARATEIPROC)load(userptr, "glBlendFuncSeparatei");
    soil_glad_glBlendFunci = (PFNGLBLENDFUNCIPROC)load(userptr, "glBlendFunci");
    soil_glad_glDeleteTransformFeedbacks =
        (PFNGLDELETETRANSFORMFEEDBACKSPROC)load(userptr, "glDeleteTransformFeedbacks");
    soil_glad_glDrawArraysIndirect =
        (PFNGLDRAWARRAYSINDIRECTPROC)load(userptr, "glDrawArraysIndirect");
    soil_glad_glDrawElementsIndirect =
        (PFNGLDRAWELEMENTSINDIRECTPROC)load(userptr, "glDrawElementsIndirect");
    soil_glad_glDrawTransformFeedback =
        (PFNGLDRAWTRANSFORMFEEDBACKPROC)load(userptr, "glDrawTransformFeedback");
    soil_glad_glDrawTransformFeedbackStream =
        (PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC)load(userptr, "glDrawTransformFeedbackStream");
    soil_glad_glEndQueryIndexed = (PFNGLENDQUERYINDEXEDPROC)load(userptr, "glEndQueryIndexed");
    soil_glad_glGenTransformFeedbacks =
        (PFNGLGENTRANSFORMFEEDBACKSPROC)load(userptr, "glGenTransformFeedbacks");
    soil_glad_glGetActiveSubroutineName =
        (PFNGLGETACTIVESUBROUTINENAMEPROC)load(userptr, "glGetActiveSubroutineName");
    soil_glad_glGetActiveSubroutineUniformName = (PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC
    )load(userptr, "glGetActiveSubroutineUniformName");
    soil_glad_glGetActiveSubroutineUniformiv =
        (PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC)load(userptr, "glGetActiveSubroutineUniformiv");
    soil_glad_glGetProgramStageiv =
        (PFNGLGETPROGRAMSTAGEIVPROC)load(userptr, "glGetProgramStageiv");
    soil_glad_glGetQueryIndexediv =
        (PFNGLGETQUERYINDEXEDIVPROC)load(userptr, "glGetQueryIndexediv");
    soil_glad_glGetSubroutineIndex =
        (PFNGLGETSUBROUTINEINDEXPROC)load(userptr, "glGetSubroutineIndex");
    soil_glad_glGetSubroutineUniformLocation =
        (PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC)load(userptr, "glGetSubroutineUniformLocation");
    soil_glad_glGetUniformSubroutineuiv =
        (PFNGLGETUNIFORMSUBROUTINEUIVPROC)load(userptr, "glGetUniformSubroutineuiv");
    soil_glad_glGetUniformdv = (PFNGLGETUNIFORMDVPROC)load(userptr, "glGetUniformdv");
    soil_glad_glIsTransformFeedback =
        (PFNGLISTRANSFORMFEEDBACKPROC)load(userptr, "glIsTransformFeedback");
    soil_glad_glMinSampleShading =
        (PFNGLMINSAMPLESHADINGPROC)load(userptr, "glMinSampleShading");
    soil_glad_glPatchParameterfv =
        (PFNGLPATCHPARAMETERFVPROC)load(userptr, "glPatchParameterfv");
    soil_glad_glPatchParameteri = (PFNGLPATCHPARAMETERIPROC)load(userptr, "glPatchParameteri");
    soil_glad_glPauseTransformFeedback =
        (PFNGLPAUSETRANSFORMFEEDBACKPROC)load(userptr, "glPauseTransformFeedback");
    soil_glad_glResumeTransformFeedback =
        (PFNGLRESUMETRANSFORMFEEDBACKPROC)load(userptr, "glResumeTransformFeedback");
    soil_glad_glUniform1d  = (PFNGLUNIFORM1DPROC)load(userptr, "glUniform1d");
    soil_glad_glUniform1dv = (PFNGLUNIFORM1DVPROC)load(userptr, "glUniform1dv");
    soil_glad_glUniform2d  = (PFNGLUNIFORM2DPROC)load(userptr, "glUniform2d");
    soil_glad_glUniform2dv = (PFNGLUNIFORM2DVPROC)load(userptr, "glUniform2dv");
    soil_glad_glUniform3d  = (PFNGLUNIFORM3DPROC)load(userptr, "glUniform3d");
    soil_glad_glUniform3dv = (PFNGLUNIFORM3DVPROC)load(userptr, "glUniform3dv");
    soil_glad_glUniform4d  = (PFNGLUNIFORM4DPROC)load(userptr, "glUniform4d");
    soil_glad_glUniform4dv = (PFNGLUNIFORM4DVPROC)load(userptr, "glUniform4dv");
    soil_glad_glUniformMatrix2dv =
        (PFNGLUNIFORMMATRIX2DVPROC)load(userptr, "glUniformMatrix2dv");
    soil_glad_glUniformMatrix2x3dv =
        (PFNGLUNIFORMMATRIX2X3DVPROC)load(userptr, "glUniformMatrix2x3dv");
    soil_glad_glUniformMatrix2x4dv =
        (PFNGLUNIFORMMATRIX2X4DVPROC)load(userptr, "glUniformMatrix2x4dv");
    soil_glad_glUniformMatrix3dv =
        (PFNGLUNIFORMMATRIX3DVPROC)load(userptr, "glUniformMatrix3dv");
    soil_glad_glUniformMatrix3x2dv =
        (PFNGLUNIFORMMATRIX3X2DVPROC)load(userptr, "glUniformMatrix3x2dv");
    soil_glad_glUniformMatrix3x4dv =
        (PFNGLUNIFORMMATRIX3X4DVPROC)load(userptr, "glUniformMatrix3x4dv");
    soil_glad_glUniformMatrix4dv =
        (PFNGLUNIFORMMATRIX4DVPROC)load(userptr, "glUniformMatrix4dv");
    soil_glad_glUniformMatrix4x2dv =
        (PFNGLUNIFORMMATRIX4X2DVPROC)load(userptr, "glUniformMatrix4x2dv");
    soil_glad_glUniformMatrix4x3dv =
        (PFNGLUNIFORMMATRIX4X3DVPROC)load(userptr, "glUniformMatrix4x3dv");
    soil_glad_glUniformSubroutinesuiv =
        (PFNGLUNIFORMSUBROUTINESUIVPROC)load(userptr, "glUniformSubroutinesuiv");
}
static void soil_glad_gl_load_GL_VERSION_4_1(GLADuserptrloadfunc load, void *userptr) {
    if (!SOIL_GLAD_GL_VERSION_4_1) return;
    soil_glad_glActiveShaderProgram =
        (PFNGLACTIVESHADERPROGRAMPROC)load(userptr, "glActiveShaderProgram");
    soil_glad_glBindProgramPipeline =
        (PFNGLBINDPROGRAMPIPELINEPROC)load(userptr, "glBindProgramPipeline");
    soil_glad_glClearDepthf = (PFNGLCLEARDEPTHFPROC)load(userptr, "glClearDepthf");
    soil_glad_glCreateShaderProgramv =
        (PFNGLCREATESHADERPROGRAMVPROC)load(userptr, "glCreateShaderProgramv");
    soil_glad_glDeleteProgramPipelines =
        (PFNGLDELETEPROGRAMPIPELINESPROC)load(userptr, "glDeleteProgramPipelines");
    soil_glad_glDepthRangeArrayv =
        (PFNGLDEPTHRANGEARRAYVPROC)load(userptr, "glDepthRangeArrayv");
    soil_glad_glDepthRangeIndexed =
        (PFNGLDEPTHRANGEINDEXEDPROC)load(userptr, "glDepthRangeIndexed");
    soil_glad_glDepthRangef = (PFNGLDEPTHRANGEFPROC)load(userptr, "glDepthRangef");
    soil_glad_glGenProgramPipelines =
        (PFNGLGENPROGRAMPIPELINESPROC)load(userptr, "glGenProgramPipelines");
    soil_glad_glGetDoublei_v = (PFNGLGETDOUBLEI_VPROC)load(userptr, "glGetDoublei_v");
    soil_glad_glGetFloati_v  = (PFNGLGETFLOATI_VPROC)load(userptr, "glGetFloati_v");
    soil_glad_glGetProgramBinary =
        (PFNGLGETPROGRAMBINARYPROC)load(userptr, "glGetProgramBinary");
    soil_glad_glGetProgramPipelineInfoLog =
        (PFNGLGETPROGRAMPIPELINEINFOLOGPROC)load(userptr, "glGetProgramPipelineInfoLog");
    soil_glad_glGetProgramPipelineiv =
        (PFNGLGETPROGRAMPIPELINEIVPROC)load(userptr, "glGetProgramPipelineiv");
    soil_glad_glGetShaderPrecisionFormat =
        (PFNGLGETSHADERPRECISIONFORMATPROC)load(userptr, "glGetShaderPrecisionFormat");
    soil_glad_glGetVertexAttribLdv =
        (PFNGLGETVERTEXATTRIBLDVPROC)load(userptr, "glGetVertexAttribLdv");
    soil_glad_glIsProgramPipeline =
        (PFNGLISPROGRAMPIPELINEPROC)load(userptr, "glIsProgramPipeline");
    soil_glad_glProgramBinary = (PFNGLPROGRAMBINARYPROC)load(userptr, "glProgramBinary");
    soil_glad_glProgramParameteri =
        (PFNGLPROGRAMPARAMETERIPROC)load(userptr, "glProgramParameteri");
    soil_glad_glProgramUniform1d =
        (PFNGLPROGRAMUNIFORM1DPROC)load(userptr, "glProgramUniform1d");
    soil_glad_glProgramUniform1dv =
        (PFNGLPROGRAMUNIFORM1DVPROC)load(userptr, "glProgramUniform1dv");
    soil_glad_glProgramUniform1f =
        (PFNGLPROGRAMUNIFORM1FPROC)load(userptr, "glProgramUniform1f");
    soil_glad_glProgramUniform1fv =
        (PFNGLPROGRAMUNIFORM1FVPROC)load(userptr, "glProgramUniform1fv");
    soil_glad_glProgramUniform1i =
        (PFNGLPROGRAMUNIFORM1IPROC)load(userptr, "glProgramUniform1i");
    soil_glad_glProgramUniform1iv =
        (PFNGLPROGRAMUNIFORM1IVPROC)load(userptr, "glProgramUniform1iv");
    soil_glad_glProgramUniform1ui =
        (PFNGLPROGRAMUNIFORM1UIPROC)load(userptr, "glProgramUniform1ui");
    soil_glad_glProgramUniform1uiv =
        (PFNGLPROGRAMUNIFORM1UIVPROC)load(userptr, "glProgramUniform1uiv");
    soil_glad_glProgramUniform2d =
        (PFNGLPROGRAMUNIFORM2DPROC)load(userptr, "glProgramUniform2d");
    soil_glad_glProgramUniform2dv =
        (PFNGLPROGRAMUNIFORM2DVPROC)load(userptr, "glProgramUniform2dv");
    soil_glad_glProgramUniform2f =
        (PFNGLPROGRAMUNIFORM2FPROC)load(userptr, "glProgramUniform2f");
    soil_glad_glProgramUniform2fv =
        (PFNGLPROGRAMUNIFORM2FVPROC)load(userptr, "glProgramUniform2fv");
    soil_glad_glProgramUniform2i =
        (PFNGLPROGRAMUNIFORM2IPROC)load(userptr, "glProgramUniform2i");
    soil_glad_glProgramUniform2iv =
        (PFNGLPROGRAMUNIFORM2IVPROC)load(userptr, "glProgramUniform2iv");
    soil_glad_glProgramUniform2ui =
        (PFNGLPROGRAMUNIFORM2UIPROC)load(userptr, "glProgramUniform2ui");
    soil_glad_glProgramUniform2uiv =
        (PFNGLPROGRAMUNIFORM2UIVPROC)load(userptr, "glProgramUniform2uiv");
    soil_glad_glProgramUniform3d =
        (PFNGLPROGRAMUNIFORM3DPROC)load(userptr, "glProgramUniform3d");
    soil_glad_glProgramUniform3dv =
        (PFNGLPROGRAMUNIFORM3DVPROC)load(userptr, "glProgramUniform3dv");
    soil_glad_glProgramUniform3f =
        (PFNGLPROGRAMUNIFORM3FPROC)load(userptr, "glProgramUniform3f");
    soil_glad_glProgramUniform3fv =
        (PFNGLPROGRAMUNIFORM3FVPROC)load(userptr, "glProgramUniform3fv");
    soil_glad_glProgramUniform3i =
        (PFNGLPROGRAMUNIFORM3IPROC)load(userptr, "glProgramUniform3i");
    soil_glad_glProgramUniform3iv =
        (PFNGLPROGRAMUNIFORM3IVPROC)load(userptr, "glProgramUniform3iv");
    soil_glad_glProgramUniform3ui =
        (PFNGLPROGRAMUNIFORM3UIPROC)load(userptr, "glProgramUniform3ui");
    soil_glad_glProgramUniform3uiv =
        (PFNGLPROGRAMUNIFORM3UIVPROC)load(userptr, "glProgramUniform3uiv");
    soil_glad_glProgramUniform4d =
        (PFNGLPROGRAMUNIFORM4DPROC)load(userptr, "glProgramUniform4d");
    soil_glad_glProgramUniform4dv =
        (PFNGLPROGRAMUNIFORM4DVPROC)load(userptr, "glProgramUniform4dv");
    soil_glad_glProgramUniform4f =
        (PFNGLPROGRAMUNIFORM4FPROC)load(userptr, "glProgramUniform4f");
    soil_glad_glProgramUniform4fv =
        (PFNGLPROGRAMUNIFORM4FVPROC)load(userptr, "glProgramUniform4fv");
    soil_glad_glProgramUniform4i =
        (PFNGLPROGRAMUNIFORM4IPROC)load(userptr, "glProgramUniform4i");
    soil_glad_glProgramUniform4iv =
        (PFNGLPROGRAMUNIFORM4IVPROC)load(userptr, "glProgramUniform4iv");
    soil_glad_glProgramUniform4ui =
        (PFNGLPROGRAMUNIFORM4UIPROC)load(userptr, "glProgramUniform4ui");
    soil_glad_glProgramUniform4uiv =
        (PFNGLPROGRAMUNIFORM4UIVPROC)load(userptr, "glProgramUniform4uiv");
    soil_glad_glProgramUniformMatrix2dv =
        (PFNGLPROGRAMUNIFORMMATRIX2DVPROC)load(userptr, "glProgramUniformMatrix2dv");
    soil_glad_glProgramUniformMatrix2fv =
        (PFNGLPROGRAMUNIFORMMATRIX2FVPROC)load(userptr, "glProgramUniformMatrix2fv");
    soil_glad_glProgramUniformMatrix2x3dv =
        (PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC)load(userptr, "glProgramUniformMatrix2x3dv");
    soil_glad_glProgramUniformMatrix2x3fv =
        (PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC)load(userptr, "glProgramUniformMatrix2x3fv");
    soil_glad_glProgramUniformMatrix2x4dv =
        (PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC)load(userptr, "glProgramUniformMatrix2x4dv");
    soil_glad_glProgramUniformMatrix2x4fv =
        (PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC)load(userptr, "glProgramUniformMatrix2x4fv");
    soil_glad_glProgramUniformMatrix3dv =
        (PFNGLPROGRAMUNIFORMMATRIX3DVPROC)load(userptr, "glProgramUniformMatrix3dv");
    soil_glad_glProgramUniformMatrix3fv =
        (PFNGLPROGRAMUNIFORMMATRIX3FVPROC)load(userptr, "glProgramUniformMatrix3fv");
    soil_glad_glProgramUniformMatrix3x2dv =
        (PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC)load(userptr, "glProgramUniformMatrix3x2dv");
    soil_glad_glProgramUniformMatrix3x2fv =
        (PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC)load(userptr, "glProgramUniformMatrix3x2fv");
    soil_glad_glProgramUniformMatrix3x4dv =
        (PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC)load(userptr, "glProgramUniformMatrix3x4dv");
    soil_glad_glProgramUniformMatrix3x4fv =
        (PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC)load(userptr, "glProgramUniformMatrix3x4fv");
    soil_glad_glProgramUniformMatrix4dv =
        (PFNGLPROGRAMUNIFORMMATRIX4DVPROC)load(userptr, "glProgramUniformMatrix4dv");
    soil_glad_glProgramUniformMatrix4fv =
        (PFNGLPROGRAMUNIFORMMATRIX4FVPROC)load(userptr, "glProgramUniformMatrix4fv");
    soil_glad_glProgramUniformMatrix4x2dv =
        (PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC)load(userptr, "glProgramUniformMatrix4x2dv");
    soil_glad_glProgramUniformMatrix4x2fv =
        (PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC)load(userptr, "glProgramUniformMatrix4x2fv");
    soil_glad_glProgramUniformMatrix4x3dv =
        (PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC)load(userptr, "glProgramUniformMatrix4x3dv");
    soil_glad_glProgramUniformMatrix4x3fv =
        (PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC)load(userptr, "glProgramUniformMatrix4x3fv");
    soil_glad_glReleaseShaderCompiler =
        (PFNGLRELEASESHADERCOMPILERPROC)load(userptr, "glReleaseShaderCompiler");
    soil_glad_glScissorArrayv   = (PFNGLSCISSORARRAYVPROC)load(userptr, "glScissorArrayv");
    soil_glad_glScissorIndexed  = (PFNGLSCISSORINDEXEDPROC)load(userptr, "glScissorIndexed");
    soil_glad_glScissorIndexedv = (PFNGLSCISSORINDEXEDVPROC)load(userptr, "glScissorIndexedv");
    soil_glad_glShaderBinary    = (PFNGLSHADERBINARYPROC)load(userptr, "glShaderBinary");
    soil_glad_glUseProgramStages =
        (PFNGLUSEPROGRAMSTAGESPROC)load(userptr, "glUseProgramStages");
    soil_glad_glValidateProgramPipeline =
        (PFNGLVALIDATEPROGRAMPIPELINEPROC)load(userptr, "glValidateProgramPipeline");
    soil_glad_glVertexAttribL1d = (PFNGLVERTEXATTRIBL1DPROC)load(userptr, "glVertexAttribL1d");
    soil_glad_glVertexAttribL1dv =
        (PFNGLVERTEXATTRIBL1DVPROC)load(userptr, "glVertexAttribL1dv");
    soil_glad_glVertexAttribL2d = (PFNGLVERTEXATTRIBL2DPROC)load(userptr, "glVertexAttribL2d");
    soil_glad_glVertexAttribL2dv =
        (PFNGLVERTEXATTRIBL2DVPROC)load(userptr, "glVertexAttribL2dv");
    soil_glad_glVertexAttribL3d = (PFNGLVERTEXATTRIBL3DPROC)load(userptr, "glVertexAttribL3d");
    soil_glad_glVertexAttribL3dv =
        (PFNGLVERTEXATTRIBL3DVPROC)load(userptr, "glVertexAttribL3dv");
    soil_glad_glVertexAttribL4d = (PFNGLVERTEXATTRIBL4DPROC)load(userptr, "glVertexAttribL4d");
    soil_glad_glVertexAttribL4dv =
        (PFNGLVERTEXATTRIBL4DVPROC)load(userptr, "glVertexAttribL4dv");
    soil_glad_glVertexAttribLPointer =
        (PFNGLVERTEXATTRIBLPOINTERPROC)load(userptr, "glVertexAttribLPointer");
    soil_glad_glViewportArrayv = (PFNGLVIEWPORTARRAYVPROC)load(userptr, "glViewportArrayv");
    soil_glad_glViewportIndexedf =
        (PFNGLVIEWPORTINDEXEDFPROC)load(userptr, "glViewportIndexedf");
    soil_glad_glViewportIndexedfv =
        (PFNGLVIEWPORTINDEXEDFVPROC)load(userptr, "glViewportIndexedfv");
}
static void soil_glad_gl_load_GL_VERSION_4_2(GLADuserptrloadfunc load, void *userptr) {
    if (!SOIL_GLAD_GL_VERSION_4_2) return;
    soil_glad_glBindImageTexture =
        (PFNGLBINDIMAGETEXTUREPROC)load(userptr, "glBindImageTexture");
    soil_glad_glDrawArraysInstancedBaseInstance   = (PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC
    )load(userptr, "glDrawArraysInstancedBaseInstance");
    soil_glad_glDrawElementsInstancedBaseInstance = (PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC
    )load(userptr, "glDrawElementsInstancedBaseInstance");
    soil_glad_glDrawElementsInstancedBaseVertexBaseInstance =
        (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC
        )load(userptr, "glDrawElementsInstancedBaseVertexBaseInstance");
    soil_glad_glDrawTransformFeedbackInstanced = (PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC
    )load(userptr, "glDrawTransformFeedbackInstanced");
    soil_glad_glDrawTransformFeedbackStreamInstanced =
        (PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC
        )load(userptr, "glDrawTransformFeedbackStreamInstanced");
    soil_glad_glGetActiveAtomicCounterBufferiv = (PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC
    )load(userptr, "glGetActiveAtomicCounterBufferiv");
    soil_glad_glGetInternalformativ =
        (PFNGLGETINTERNALFORMATIVPROC)load(userptr, "glGetInternalformativ");
    soil_glad_glMemoryBarrier = (PFNGLMEMORYBARRIERPROC)load(userptr, "glMemoryBarrier");
    soil_glad_glTexStorage1D  = (PFNGLTEXSTORAGE1DPROC)load(userptr, "glTexStorage1D");
    soil_glad_glTexStorage2D  = (PFNGLTEXSTORAGE2DPROC)load(userptr, "glTexStorage2D");
    soil_glad_glTexStorage3D  = (PFNGLTEXSTORAGE3DPROC)load(userptr, "glTexStorage3D");
}
static void soil_glad_gl_load_GL_VERSION_4_3(GLADuserptrloadfunc load, void *userptr) {
    if (!SOIL_GLAD_GL_VERSION_4_3) return;
    soil_glad_glBindVertexBuffer =
        (PFNGLBINDVERTEXBUFFERPROC)load(userptr, "glBindVertexBuffer");
    soil_glad_glClearBufferData = (PFNGLCLEARBUFFERDATAPROC)load(userptr, "glClearBufferData");
    soil_glad_glClearBufferSubData =
        (PFNGLCLEARBUFFERSUBDATAPROC)load(userptr, "glClearBufferSubData");
    soil_glad_glCopyImageSubData =
        (PFNGLCOPYIMAGESUBDATAPROC)load(userptr, "glCopyImageSubData");
    soil_glad_glDebugMessageCallback =
        (PFNGLDEBUGMESSAGECALLBACKPROC)load(userptr, "glDebugMessageCallback");
    soil_glad_glDebugMessageControl =
        (PFNGLDEBUGMESSAGECONTROLPROC)load(userptr, "glDebugMessageControl");
    soil_glad_glDebugMessageInsert =
        (PFNGLDEBUGMESSAGEINSERTPROC)load(userptr, "glDebugMessageInsert");
    soil_glad_glDispatchCompute = (PFNGLDISPATCHCOMPUTEPROC)load(userptr, "glDispatchCompute");
    soil_glad_glDispatchComputeIndirect =
        (PFNGLDISPATCHCOMPUTEINDIRECTPROC)load(userptr, "glDispatchComputeIndirect");
    soil_glad_glFramebufferParameteri =
        (PFNGLFRAMEBUFFERPARAMETERIPROC)load(userptr, "glFramebufferParameteri");
    soil_glad_glGetDebugMessageLog =
        (PFNGLGETDEBUGMESSAGELOGPROC)load(userptr, "glGetDebugMessageLog");
    soil_glad_glGetFramebufferParameteriv =
        (PFNGLGETFRAMEBUFFERPARAMETERIVPROC)load(userptr, "glGetFramebufferParameteriv");
    soil_glad_glGetInternalformati64v =
        (PFNGLGETINTERNALFORMATI64VPROC)load(userptr, "glGetInternalformati64v");
    soil_glad_glGetObjectLabel = (PFNGLGETOBJECTLABELPROC)load(userptr, "glGetObjectLabel");
    soil_glad_glGetObjectPtrLabel =
        (PFNGLGETOBJECTPTRLABELPROC)load(userptr, "glGetObjectPtrLabel");
    soil_glad_glGetPointerv = (PFNGLGETPOINTERVPROC)load(userptr, "glGetPointerv");
    soil_glad_glGetProgramInterfaceiv =
        (PFNGLGETPROGRAMINTERFACEIVPROC)load(userptr, "glGetProgramInterfaceiv");
    soil_glad_glGetProgramResourceIndex =
        (PFNGLGETPROGRAMRESOURCEINDEXPROC)load(userptr, "glGetProgramResourceIndex");
    soil_glad_glGetProgramResourceLocation =
        (PFNGLGETPROGRAMRESOURCELOCATIONPROC)load(userptr, "glGetProgramResourceLocation");
    soil_glad_glGetProgramResourceLocationIndex = (PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC
    )load(userptr, "glGetProgramResourceLocationIndex");
    soil_glad_glGetProgramResourceName =
        (PFNGLGETPROGRAMRESOURCENAMEPROC)load(userptr, "glGetProgramResourceName");
    soil_glad_glGetProgramResourceiv =
        (PFNGLGETPROGRAMRESOURCEIVPROC)load(userptr, "glGetProgramResourceiv");
    soil_glad_glInvalidateBufferData =
        (PFNGLINVALIDATEBUFFERDATAPROC)load(userptr, "glInvalidateBufferData");
    soil_glad_glInvalidateBufferSubData =
        (PFNGLINVALIDATEBUFFERSUBDATAPROC)load(userptr, "glInvalidateBufferSubData");
    soil_glad_glInvalidateFramebuffer =
        (PFNGLINVALIDATEFRAMEBUFFERPROC)load(userptr, "glInvalidateFramebuffer");
    soil_glad_glInvalidateSubFramebuffer =
        (PFNGLINVALIDATESUBFRAMEBUFFERPROC)load(userptr, "glInvalidateSubFramebuffer");
    soil_glad_glInvalidateTexImage =
        (PFNGLINVALIDATETEXIMAGEPROC)load(userptr, "glInvalidateTexImage");
    soil_glad_glInvalidateTexSubImage =
        (PFNGLINVALIDATETEXSUBIMAGEPROC)load(userptr, "glInvalidateTexSubImage");
    soil_glad_glMultiDrawArraysIndirect =
        (PFNGLMULTIDRAWARRAYSINDIRECTPROC)load(userptr, "glMultiDrawArraysIndirect");
    soil_glad_glMultiDrawElementsIndirect =
        (PFNGLMULTIDRAWELEMENTSINDIRECTPROC)load(userptr, "glMultiDrawElementsIndirect");
    soil_glad_glObjectLabel    = (PFNGLOBJECTLABELPROC)load(userptr, "glObjectLabel");
    soil_glad_glObjectPtrLabel = (PFNGLOBJECTPTRLABELPROC)load(userptr, "glObjectPtrLabel");
    soil_glad_glPopDebugGroup  = (PFNGLPOPDEBUGGROUPPROC)load(userptr, "glPopDebugGroup");
    soil_glad_glPushDebugGroup = (PFNGLPUSHDEBUGGROUPPROC)load(userptr, "glPushDebugGroup");
    soil_glad_glShaderStorageBlockBinding =
        (PFNGLSHADERSTORAGEBLOCKBINDINGPROC)load(userptr, "glShaderStorageBlockBinding");
    soil_glad_glTexBufferRange = (PFNGLTEXBUFFERRANGEPROC)load(userptr, "glTexBufferRange");
    soil_glad_glTexStorage2DMultisample =
        (PFNGLTEXSTORAGE2DMULTISAMPLEPROC)load(userptr, "glTexStorage2DMultisample");
    soil_glad_glTexStorage3DMultisample =
        (PFNGLTEXSTORAGE3DMULTISAMPLEPROC)load(userptr, "glTexStorage3DMultisample");
    soil_glad_glTextureView = (PFNGLTEXTUREVIEWPROC)load(userptr, "glTextureView");
    soil_glad_glVertexAttribBinding =
        (PFNGLVERTEXATTRIBBINDINGPROC)load(userptr, "glVertexAttribBinding");
    soil_glad_glVertexAttribFormat =
        (PFNGLVERTEXATTRIBFORMATPROC)load(userptr, "glVertexAttribFormat");
    soil_glad_glVertexAttribIFormat =
        (PFNGLVERTEXATTRIBIFORMATPROC)load(userptr, "glVertexAttribIFormat");
    soil_glad_glVertexAttribLFormat =
        (PFNGLVERTEXATTRIBLFORMATPROC)load(userptr, "glVertexAttribLFormat");
    soil_glad_glVertexBindingDivisor =
        (PFNGLVERTEXBINDINGDIVISORPROC)load(userptr, "glVertexBindingDivisor");
}
static void soil_glad_gl_load_GL_EXT_memory_object(GLADuserptrloadfunc load, void *userptr) {
    if (!SOIL_GLAD_GL_EXT_memory_object) return;
    soil_glad_glBufferStorageMemEXT =
        (PFNGLBUFFERSTORAGEMEMEXTPROC)load(userptr, "glBufferStorageMemEXT");
    soil_glad_glCreateMemoryObjectsEXT =
        (PFNGLCREATEMEMORYOBJECTSEXTPROC)load(userptr, "glCreateMemoryObjectsEXT");
    soil_glad_glDeleteMemoryObjectsEXT =
        (PFNGLDELETEMEMORYOBJECTSEXTPROC)load(userptr, "glDeleteMemoryObjectsEXT");
    soil_glad_glGetMemoryObjectParameterivEXT = (PFNGLGETMEMORYOBJECTPARAMETERIVEXTPROC
    )load(userptr, "glGetMemoryObjectParameterivEXT");
    soil_glad_glGetUnsignedBytei_vEXT =
        (PFNGLGETUNSIGNEDBYTEI_VEXTPROC)load(userptr, "glGetUnsignedBytei_vEXT");
    soil_glad_glGetUnsignedBytevEXT =
        (PFNGLGETUNSIGNEDBYTEVEXTPROC)load(userptr, "glGetUnsignedBytevEXT");
    soil_glad_glIsMemoryObjectEXT =
        (PFNGLISMEMORYOBJECTEXTPROC)load(userptr, "glIsMemoryObjectEXT");
    soil_glad_glMemoryObjectParameterivEXT =
        (PFNGLMEMORYOBJECTPARAMETERIVEXTPROC)load(userptr, "glMemoryObjectParameterivEXT");
    soil_glad_glNamedBufferStorageMemEXT =
        (PFNGLNAMEDBUFFERSTORAGEMEMEXTPROC)load(userptr, "glNamedBufferStorageMemEXT");
    soil_glad_glTexStorageMem1DEXT =
        (PFNGLTEXSTORAGEMEM1DEXTPROC)load(userptr, "glTexStorageMem1DEXT");
    soil_glad_glTexStorageMem2DEXT =
        (PFNGLTEXSTORAGEMEM2DEXTPROC)load(userptr, "glTexStorageMem2DEXT");
    soil_glad_glTexStorageMem2DMultisampleEXT = (PFNGLTEXSTORAGEMEM2DMULTISAMPLEEXTPROC
    )load(userptr, "glTexStorageMem2DMultisampleEXT");
    soil_glad_glTexStorageMem3DEXT =
        (PFNGLTEXSTORAGEMEM3DEXTPROC)load(userptr, "glTexStorageMem3DEXT");
    soil_glad_glTexStorageMem3DMultisampleEXT = (PFNGLTEXSTORAGEMEM3DMULTISAMPLEEXTPROC
    )load(userptr, "glTexStorageMem3DMultisampleEXT");
    soil_glad_glTextureStorageMem1DEXT =
        (PFNGLTEXTURESTORAGEMEM1DEXTPROC)load(userptr, "glTextureStorageMem1DEXT");
    soil_glad_glTextureStorageMem2DEXT =
        (PFNGLTEXTURESTORAGEMEM2DEXTPROC)load(userptr, "glTextureStorageMem2DEXT");
    soil_glad_glTextureStorageMem2DMultisampleEXT = (PFNGLTEXTURESTORAGEMEM2DMULTISAMPLEEXTPROC
    )load(userptr, "glTextureStorageMem2DMultisampleEXT");
    soil_glad_glTextureStorageMem3DEXT =
        (PFNGLTEXTURESTORAGEMEM3DEXTPROC)load(userptr, "glTextureStorageMem3DEXT");
    soil_glad_glTextureStorageMem3DMultisampleEXT = (PFNGLTEXTURESTORAGEMEM3DMULTISAMPLEEXTPROC
    )load(userptr, "glTextureStorageMem3DMultisampleEXT");
}
static void
soil_glad_gl_load_GL_EXT_memory_object_win32(GLADuserptrloadfunc load, void *userptr) {
    if (!SOIL_GLAD_GL_EXT_memory_object_win32) return;
    soil_glad_glImportMemoryWin32HandleEXT =
        (PFNGLIMPORTMEMORYWIN32HANDLEEXTPROC)load(userptr, "glImportMemoryWin32HandleEXT");
    soil_glad_glImportMemoryWin32NameEXT =
        (PFNGLIMPORTMEMORYWIN32NAMEEXTPROC)load(userptr, "glImportMemoryWin32NameEXT");
}

static void soil_glad_gl_free_extensions(char **exts_i) {
    if (exts_i != NULL) {
        unsigned int index;
        for (index = 0; exts_i[index]; index++) {
            free((void *)(exts_i[index]));
        }
        free((void *)exts_i);
        exts_i = NULL;
    }
}
static int soil_glad_gl_get_extensions(const char **out_exts, char ***out_exts_i) {
#if defined(GL_ES_VERSION_3_0) || defined(GL_VERSION_3_0)
    if (soil_glad_glGetStringi != NULL && soil_glad_glGetIntegerv != NULL) {
        unsigned int index      = 0;
        unsigned int num_exts_i = 0;
        char       **exts_i     = NULL;
        soil_glad_glGetIntegerv(GL_NUM_EXTENSIONS, (int *)&num_exts_i);
        exts_i = (char **)malloc((num_exts_i + 1) * (sizeof *exts_i));
        if (exts_i == NULL) {
            return 0;
        }
        for (index = 0; index < num_exts_i; index++) {
            const char *gl_str_tmp = (const char *)soil_glad_glGetStringi(GL_EXTENSIONS, index);
            size_t      len        = strlen(gl_str_tmp) + 1;

            char *local_str = (char *)malloc(len * sizeof(char));
            if (local_str == NULL) {
                exts_i[index] = NULL;
                soil_glad_gl_free_extensions(exts_i);
                return 0;
            }

            memcpy(local_str, gl_str_tmp, len * sizeof(char));
            exts_i[index] = local_str;
        }
        exts_i[index] = NULL;

        *out_exts_i = exts_i;

        return 1;
    }
#else
    SOIL_GLAD_UNUSED(out_exts_i);
#endif
    if (soil_glad_glGetString == NULL) {
        return 0;
    }
    *out_exts = (const char *)soil_glad_glGetString(GL_EXTENSIONS);
    return 1;
}
static int soil_glad_gl_has_extension(const char *exts, char **exts_i, const char *ext) {
    if (exts_i) {
        unsigned int index;
        for (index = 0; exts_i[index]; index++) {
            const char *e = exts_i[index];
            if (strcmp(e, ext) == 0) {
                return 1;
            }
        }
    } else {
        const char *extensions;
        const char *loc;
        const char *terminator;
        extensions = exts;
        if (extensions == NULL || ext == NULL) {
            return 0;
        }
        while (1) {
            loc = strstr(extensions, ext);
            if (loc == NULL) {
                return 0;
            }
            terminator = loc + strlen(ext);
            if ((loc == extensions || *(loc - 1) == ' ') &&
                (*terminator == ' ' || *terminator == '\0')) {
                return 1;
            }
            extensions = terminator;
        }
    }
    return 0;
}

static GLADapiproc soil_glad_gl_get_proc_from_userptr(void *userptr, const char *name) {
    return (SOIL_GLAD_GNUC_EXTENSION(GLADapiproc(*)(const char *name)) userptr)(name);
}

static int soil_glad_gl_find_extensions_gl(void) {
    const char *exts   = NULL;
    char      **exts_i = NULL;
    if (!soil_glad_gl_get_extensions(&exts, &exts_i)) return 0;

    SOIL_GLAD_GL_EXT_memory_object =
        soil_glad_gl_has_extension(exts, exts_i, "GL_EXT_memory_object");
    SOIL_GLAD_GL_EXT_memory_object_win32 =
        soil_glad_gl_has_extension(exts, exts_i, "GL_EXT_memory_object_win32");

    soil_glad_gl_free_extensions(exts_i);

    return 1;
}

static int soil_glad_gl_find_core_gl(void) {
    int         i;
    const char *version;
    const char *prefixes[] = {
        "OpenGL ES-CM ", "OpenGL ES-CL ", "OpenGL ES ", "OpenGL SC ", NULL
    };
    int major = 0;
    int minor = 0;
    version   = (const char *)soil_glad_glGetString(GL_VERSION);
    if (!version) return 0;
    for (i = 0; prefixes[i]; i++) {
        const size_t length = strlen(prefixes[i]);
        if (strncmp(version, prefixes[i], length) == 0) {
            version += length;
            break;
        }
    }

    SOIL_GLAD_IMPL_UTIL_SSCANF(version, "%d.%d", &major, &minor);

    SOIL_GLAD_GL_VERSION_1_0 = (major == 1 && minor >= 0) || major > 1;
    SOIL_GLAD_GL_VERSION_1_1 = (major == 1 && minor >= 1) || major > 1;
    SOIL_GLAD_GL_VERSION_1_2 = (major == 1 && minor >= 2) || major > 1;
    SOIL_GLAD_GL_VERSION_1_3 = (major == 1 && minor >= 3) || major > 1;
    SOIL_GLAD_GL_VERSION_1_4 = (major == 1 && minor >= 4) || major > 1;
    SOIL_GLAD_GL_VERSION_1_5 = (major == 1 && minor >= 5) || major > 1;
    SOIL_GLAD_GL_VERSION_2_0 = (major == 2 && minor >= 0) || major > 2;
    SOIL_GLAD_GL_VERSION_2_1 = (major == 2 && minor >= 1) || major > 2;
    SOIL_GLAD_GL_VERSION_3_0 = (major == 3 && minor >= 0) || major > 3;
    SOIL_GLAD_GL_VERSION_3_1 = (major == 3 && minor >= 1) || major > 3;
    SOIL_GLAD_GL_VERSION_3_2 = (major == 3 && minor >= 2) || major > 3;
    SOIL_GLAD_GL_VERSION_3_3 = (major == 3 && minor >= 3) || major > 3;
    SOIL_GLAD_GL_VERSION_4_0 = (major == 4 && minor >= 0) || major > 4;
    SOIL_GLAD_GL_VERSION_4_1 = (major == 4 && minor >= 1) || major > 4;
    SOIL_GLAD_GL_VERSION_4_2 = (major == 4 && minor >= 2) || major > 4;
    SOIL_GLAD_GL_VERSION_4_3 = (major == 4 && minor >= 3) || major > 4;

    return SOIL_GLAD_MAKE_VERSION(major, minor);
}

int soil_gladLoadGLUserPtr(GLADuserptrloadfunc load, void *userptr) {
    int version;

    soil_glad_glGetString = (PFNGLGETSTRINGPROC)load(userptr, "glGetString");
    if (soil_glad_glGetString == NULL) return 0;
    version = soil_glad_gl_find_core_gl();

    soil_glad_gl_load_GL_VERSION_1_0(load, userptr);
    soil_glad_gl_load_GL_VERSION_1_1(load, userptr);
    soil_glad_gl_load_GL_VERSION_1_2(load, userptr);
    soil_glad_gl_load_GL_VERSION_1_3(load, userptr);
    soil_glad_gl_load_GL_VERSION_1_4(load, userptr);
    soil_glad_gl_load_GL_VERSION_1_5(load, userptr);
    soil_glad_gl_load_GL_VERSION_2_0(load, userptr);
    soil_glad_gl_load_GL_VERSION_2_1(load, userptr);
    soil_glad_gl_load_GL_VERSION_3_0(load, userptr);
    soil_glad_gl_load_GL_VERSION_3_1(load, userptr);
    soil_glad_gl_load_GL_VERSION_3_2(load, userptr);
    soil_glad_gl_load_GL_VERSION_3_3(load, userptr);
    soil_glad_gl_load_GL_VERSION_4_0(load, userptr);
    soil_glad_gl_load_GL_VERSION_4_1(load, userptr);
    soil_glad_gl_load_GL_VERSION_4_2(load, userptr);
    soil_glad_gl_load_GL_VERSION_4_3(load, userptr);

    if (!soil_glad_gl_find_extensions_gl()) return 0;
    soil_glad_gl_load_GL_EXT_memory_object(load, userptr);
    soil_glad_gl_load_GL_EXT_memory_object_win32(load, userptr);

    return version;
}

int soil_gladLoadGL(GLADloadfunc load) {
    return soil_gladLoadGLUserPtr(
        soil_glad_gl_get_proc_from_userptr, SOIL_GLAD_GNUC_EXTENSION(void *) load
    );
}

#ifdef __cplusplus
}
#endif

#endif /* SOIL_GLAD_GL_IMPLEMENTATION */
